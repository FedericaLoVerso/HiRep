!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$ gamma$ matrices	Doc/hirep.tex	/^Table~(\\ref{table1}).$/;"	b
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:DIAG	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:FITT	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:JACK	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:MBLINE	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:MBPLAN	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:POTB	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:RENORM	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:RENORMBS	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:SMEAR1	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:STARTF	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:TRVMX	file:
1	Fortran/su4dbl.f	/^1       CONTINUE$/;"	l	subroutine:VMX	file:
1	Fortran/su4dbl.f	/^1     CONTINUE$/;"	l	subroutine:FFDACT	file:
1	Fortran/su4dbl.f	/^1     CONTINUE$/;"	l	subroutine:HERM	file:
1	Fortran/su4dbl.f	/^1     CONTINUE$/;"	l	subroutine:SETUPB	file:
1	Fortran/su4dbl.f	/^1     CONTINUE$/;"	l	subroutine:UPDATG	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:DIAG	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:JACK	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:MBLINE	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:MBPLAN	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:PLANARB	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:RENORM	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:RENORMBS	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:SMEAR1	file:
10	Fortran/su4dbl.f	/^10      CONTINUE$/;"	l	subroutine:THERMLB	file:
10	Fortran/su4dbl.f	/^10    CONTINUE$/;"	l	subroutine:ACTION	file:
10	Fortran/su4dbl.f	/^10    CONTINUE$/;"	l	subroutine:FFDACT	file:
10	Fortran/su4dbl.f	/^10    CONTINUE$/;"	l	subroutine:JACKM	file:
10	Fortran/su4dbl.f	/^10    CONTINUE$/;"	l	subroutine:JACKMR	file:
10	Fortran/su4dbl.f	/^10    CONTINUE$/;"	l	subroutine:SEARCH	file:
10	Fortran/su4dbl.f	/^10    CONTINUE$/;"	l	subroutine:UPDATG	file:
100	Fortran/su4dbl.f	/^100     CONTINUE$/;"	l	subroutine:MBPLAN	file:
100	Fortran/su4dbl.f	/^100     CONTINUE$/;"	l	subroutine:RENORM	file:
100	Fortran/su4dbl.f	/^100     CONTINUE$/;"	l	subroutine:SMEAR1	file:
100	Fortran/su4dbl.f	/^100   FORMAT('                 ACTION            ')$/;"	l	subroutine:ACTION	file:
102	Fortran/su4dbl.f	/^102     FORMAT('  DT=',I3,'   AV,ER COR = ',2F10.5,'  M =',2F8.4)$/;"	l	subroutine:MBPLAN	file:
102	Fortran/su4dbl.f	/^102     FORMAT('  DT=',I3,'   AV,ER COR = ',2F8.4,'    E=',2F8.4)$/;"	l	subroutine:MBLINE	file:
11	Fortran/su4dbl.f	/^11      CALL PLANARB(I4,IBL,ITY)$/;"	l	file:
11	Fortran/su4dbl.f	/^11      CONTINUE$/;"	l	subroutine:PLANARB	file:
11	Fortran/su4dbl.f	/^11      CONTINUE$/;"	l	subroutine:SMEAR1	file:
11	Fortran/su4dbl.f	/^11      CONTINUE$/;"	l	subroutine:THERMLB	file:
11	Fortran/su4dbl.f	/^11    CONTINUE$/;"	l	subroutine:ACTION	file:
11	Fortran/su4dbl.f	/^11    CONTINUE$/;"	l	subroutine:SEARCH	file:
11	Fortran/su4dbl.f	/^11    CONTINUE$/;"	l	subroutine:UPDATG	file:
110	Fortran/su4dbl.f	/^110     FORMAT(' IE,  BL =',2I3,'  AV,ER LINE =',2F9.4)$/;"	l	subroutine:MBLINE	file:
110	Fortran/su4dbl.f	/^110   FORMAT('   AVER,ERR   SPACE ACTION =',2F12.8)$/;"	l	subroutine:ACTION	file:
111	Fortran/su4dbl.f	/^111     FORMAT(' IE,  BL =',2I3,'  AV,ER LINE: TrL.TrL =',2F9.4)$/;"	l	subroutine:MBLINE	file:
112	Fortran/su4dbl.f	/^112     FORMAT(' IE,  BL =',2I3,'  AV,ER LINE: TrL.L =',2F9.4)$/;"	l	subroutine:MBLINE	file:
112	Fortran/su4dbl.f	/^112   FORMAT('   AVER,ERR   TIME  ACTION =',2F12.8)$/;"	l	subroutine:ACTION	file:
113	Fortran/su4dbl.f	/^113     FORMAT(' IE,  BL =',2I3,'  AV,ER LINE: TrL.TrL.TrL =',2F9.4)$/;"	l	subroutine:MBLINE	file:
114	Fortran/su4dbl.f	/^114     FORMAT(' IE,  BL =',2I3,'  AV,ER LINE: TrL.L.TrL =',2F9.4)$/;"	l	subroutine:MBLINE	file:
115	Fortran/su4dbl.f	/^115     FORMAT(' IE,  BL =',2I3,'  AV,ER LINE: TrL.L.L =',2F9.4)$/;"	l	subroutine:MBLINE	file:
12	Fortran/su4dbl.f	/^12      CONTINUE$/;"	l	subroutine:MBPLAN	file:
12	Fortran/su4dbl.f	/^12      CONTINUE$/;"	l	subroutine:PLANARB	file:
12	Fortran/su4dbl.f	/^12      CONTINUE$/;"	l	subroutine:POTB	file:
12	Fortran/su4dbl.f	/^12      CONTINUE$/;"	l	subroutine:SMEAR1	file:
12	Fortran/su4dbl.f	/^12      CONTINUE$/;"	l	subroutine:THERMLB	file:
12	Fortran/su4dbl.f	/^12    CONTINUE$/;"	l	subroutine:JACKM	file:
12	Fortran/su4dbl.f	/^12    CONTINUE$/;"	l	subroutine:JACKMR	file:
13	Fortran/su4dbl.f	/^13      CONTINUE$/;"	l	subroutine:FITT	file:
13	Fortran/su4dbl.f	/^13      CONTINUE$/;"	l	subroutine:MBLINE	file:
13	Fortran/su4dbl.f	/^13      CONTINUE$/;"	l	subroutine:PLANARB	file:
13	Fortran/su4dbl.f	/^13      CONTINUE$/;"	l	subroutine:POTB	file:
13	Fortran/su4dbl.f	/^13      CONTINUE$/;"	l	subroutine:THERMLB	file:
14	Fortran/su4dbl.f	/^14      CONTINUE$/;"	l	file:
14	Fortran/su4dbl.f	/^14      CONTINUE$/;"	l	subroutine:MBPLAN	file:
14	Fortran/su4dbl.f	/^14      CONTINUE$/;"	l	subroutine:POTB	file:
14	Fortran/su4dbl.f	/^14      CONTINUE$/;"	l	subroutine:THERMLB	file:
14	Fortran/su4dbl.f	/^14    CONTINUE$/;"	l	subroutine:JACKMR	file:
15	Fortran/su4dbl.f	/^15      CONTINUE$/;"	l	subroutine:MBPLAN	file:
15	Fortran/su4dbl.f	/^15      CONTINUE$/;"	l	subroutine:THERMLB	file:
15	Fortran/su4dbl.f	/^15    CONTINUE$/;"	l	subroutine:SEARCH	file:
15	Fortran/su4dbl.f	/^15    CONTINUE$/;"	l	subroutine:UPDATG	file:
16	Fortran/su4dbl.f	/^16      CONTINUE$/;"	l	subroutine:THERMLB	file:
16	Fortran/su4dbl.f	/^16    CONTINUE$/;"	l	subroutine:JACKMR	file:
17	Fortran/su4dbl.f	/^17      CONTINUE$/;"	l	subroutine:THERMLB	file:
17	Fortran/su4dbl.f	/^17    CONTINUE$/;"	l	subroutine:ACTION	file:
17	Fortran/su4dbl.f	/^17    CONTINUE$/;"	l	subroutine:UPDATG	file:
18	Fortran/su4dbl.f	/^18      CONTINUE$/;"	l	subroutine:PLANARB	file:
18	Fortran/su4dbl.f	/^18      CONTINUE$/;"	l	subroutine:THERMLB	file:
19	Fortran/su4dbl.f	/^19    CONTINUE$/;"	l	subroutine:UPDATG	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:DIAG	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:FITT	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:JACK	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:MBLINE	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:MBPLAN	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:PLANARB	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:POTB	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:RENORM	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:SMEAR1	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:STARTF	file:
2	Fortran/su4dbl.f	/^2       CONTINUE$/;"	l	subroutine:VMX	file:
2	Fortran/su4dbl.f	/^2     CONTINUE$/;"	l	subroutine:HERM	file:
2	Fortran/su4dbl.f	/^2     CONTINUE$/;"	l	subroutine:SETUP	file:
2	Fortran/su4dbl.f	/^2     CONTINUE$/;"	l	subroutine:SETUPB	file:
20	Fortran/su4dbl.f	/^20      CONTINUE$/;"	l	file:
20	Fortran/su4dbl.f	/^20      CONTINUE$/;"	l	subroutine:MBLINE	file:
20	Fortran/su4dbl.f	/^20      CONTINUE$/;"	l	subroutine:MBPLAN	file:
20	Fortran/su4dbl.f	/^20      CONTINUE$/;"	l	subroutine:PLANARB	file:
20	Fortran/su4dbl.f	/^20      CONTINUE$/;"	l	subroutine:RENORM	file:
20	Fortran/su4dbl.f	/^20      CONTINUE$/;"	l	subroutine:RENORMBS	file:
20	Fortran/su4dbl.f	/^20      CONTINUE$/;"	l	subroutine:THERMLB	file:
20	Fortran/su4dbl.f	/^20    CONTINUE$/;"	l	subroutine:ACTION	file:
20	Fortran/su4dbl.f	/^20    CONTINUE$/;"	l	subroutine:FFDACT	file:
20	Fortran/su4dbl.f	/^20    CONTINUE$/;"	l	subroutine:UPDATG	file:
201	Fortran/su4dbl.f	/^201     FORMAT('      0++    Glueball     Correlations    ')$/;"	l	subroutine:MBPLAN	file:
202	Fortran/su4dbl.f	/^202     FORMAT('      2++ (E)   Glueball     Correlations    ')$/;"	l	subroutine:MBPLAN	file:
203	Fortran/su4dbl.f	/^203     FORMAT('      2++ (T)   Glueball     Correlations    ')$/;"	l	subroutine:MBPLAN	file:
21	Fortran/su4dbl.f	/^21      CONTINUE$/;"	l	subroutine:PLANARB	file:
21	Fortran/su4dbl.f	/^21      CONTINUE$/;"	l	subroutine:RENORMBS	file:
21	Fortran/su4dbl.f	/^21      CONTINUE$/;"	l	subroutine:SMEAR1	file:
21	Fortran/su4dbl.f	/^21      CONTINUE$/;"	l	subroutine:THERMLB	file:
21	Fortran/su4dbl.f	/^21    CONTINUE$/;"	l	subroutine:FFDACT	file:
211	Fortran/su4dbl.f	/^ 211    format('[FM][0]Check plaq = ', f8.6)$/;"	l	file:
22	Fortran/su4dbl.f	/^22      CONTINUE$/;"	l	file:
22	Fortran/su4dbl.f	/^22      CONTINUE$/;"	l	subroutine:JACK	file:
22	Fortran/su4dbl.f	/^22      CONTINUE$/;"	l	subroutine:MBLINE	file:
22	Fortran/su4dbl.f	/^22      CONTINUE$/;"	l	subroutine:PLANARB	file:
22	Fortran/su4dbl.f	/^22      CONTINUE$/;"	l	subroutine:POTB	file:
22	Fortran/su4dbl.f	/^22      CONTINUE$/;"	l	subroutine:RENORMBS	file:
22	Fortran/su4dbl.f	/^22      CONTINUE$/;"	l	subroutine:THERMLB	file:
22	Fortran/su4dbl.f	/^22    CONTINUE$/;"	l	subroutine:ACTION	file:
22	Fortran/su4dbl.f	/^22    CONTINUE$/;"	l	subroutine:FFDACT	file:
23	Fortran/su4dbl.f	/^23      CONTINUE$/;"	l	subroutine:PLANARB	file:
23	Fortran/su4dbl.f	/^23      CONTINUE$/;"	l	subroutine:POTB	file:
23	Fortran/su4dbl.f	/^23    CONTINUE$/;"	l	subroutine:FFDACT	file:
23	Fortran/su4dbl.f	/^23    CONTINUE$/;"	l	subroutine:UPDATG	file:
24	Fortran/su4dbl.f	/^24      CONTINUE$/;"	l	file:
24	Fortran/su4dbl.f	/^24      CONTINUE$/;"	l	subroutine:JACK	file:
24	Fortran/su4dbl.f	/^24      CONTINUE$/;"	l	subroutine:MBLINE	file:
24	Fortran/su4dbl.f	/^24      CONTINUE$/;"	l	subroutine:PLANARB	file:
24	Fortran/su4dbl.f	/^24      CONTINUE$/;"	l	subroutine:POTB	file:
24	Fortran/su4dbl.f	/^24      CONTINUE$/;"	l	subroutine:RENORMBS	file:
24	Fortran/su4dbl.f	/^24      CONTINUE$/;"	l	subroutine:THERMLB	file:
25	Fortran/su4dbl.f	/^25      CONTINUE$/;"	l	subroutine:PLANARB	file:
25	Fortran/su4dbl.f	/^25      CONTINUE$/;"	l	subroutine:PLNCORB	file:
25	Fortran/su4dbl.f	/^25      CONTINUE$/;"	l	subroutine:THERMLB	file:
25	Fortran/su4dbl.f	/^25    CONTINUE$/;"	l	subroutine:FFDACT	file:
25	Fortran/su4dbl.f	/^25    CONTINUE$/;"	l	subroutine:UPDATG	file:
26	Fortran/su4dbl.f	/^26      CONTINUE$/;"	l	subroutine:JACK	file:
26	Fortran/su4dbl.f	/^26      CONTINUE$/;"	l	subroutine:MBLINE	file:
26	Fortran/su4dbl.f	/^26      CONTINUE$/;"	l	subroutine:SMEAR1	file:
26	Fortran/su4dbl.f	/^26      CONTINUE$/;"	l	subroutine:THERMLB	file:
27	Fortran/su4dbl.f	/^27      CONTINUE$/;"	l	subroutine:SMEAR1	file:
27	Fortran/su4dbl.f	/^27      CONTINUE$/;"	l	subroutine:THERMLB	file:
27	Fortran/su4dbl.f	/^27    CONTINUE$/;"	l	subroutine:UPDATG	file:
28	Fortran/su4dbl.f	/^28      CONTINUE$/;"	l	subroutine:JACK	file:
28	Fortran/su4dbl.f	/^28      CONTINUE$/;"	l	subroutine:MBLINE	file:
28	Fortran/su4dbl.f	/^28      CONTINUE$/;"	l	subroutine:SMEAR1	file:
28	Fortran/su4dbl.f	/^28      CONTINUE$/;"	l	subroutine:THERMLB	file:
29	Fortran/su4dbl.f	/^29      CONTINUE$/;"	l	subroutine:JACK	file:
29	Fortran/su4dbl.f	/^29      CONTINUE$/;"	l	subroutine:THERMLB	file:
3	Fortran/su4dbl.f	/^3       CONTINUE$/;"	l	file:
3	Fortran/su4dbl.f	/^3       CONTINUE$/;"	l	subroutine:DIAG	file:
3	Fortran/su4dbl.f	/^3       CONTINUE$/;"	l	subroutine:PLANARB	file:
3	Fortran/su4dbl.f	/^3       CONTINUE$/;"	l	subroutine:POTB	file:
3	Fortran/su4dbl.f	/^3     CONTINUE$/;"	l	subroutine:ACTION	file:
3	Fortran/su4dbl.f	/^3     CONTINUE$/;"	l	subroutine:SETUPB	file:
3	Fortran/su4dbl.f	/^3     CONTINUE$/;"	l	subroutine:SUBGRB	file:
3	Fortran/su4dbl.f	/^3     CONTINUE$/;"	l	subroutine:SUBGRH	file:
30	Fortran/su4dbl.f	/^30      CONTINUE$/;"	l	subroutine:MBPLAN	file:
30	Fortran/su4dbl.f	/^30      CONTINUE$/;"	l	subroutine:PLNCORB	file:
30	Fortran/su4dbl.f	/^30      CONTINUE$/;"	l	subroutine:SEARCH	file:
30	Fortran/su4dbl.f	/^30      CONTINUE$/;"	l	subroutine:THERMLB	file:
30	Fortran/su4dbl.f	/^30    CONTINUE$/;"	l	subroutine:FFDACT	file:
30	Fortran/su4dbl.f	/^30    CONTINUE$/;"	l	subroutine:RENORMBS	file:
31	Fortran/su4dbl.f	/^31      CONTINUE$/;"	l	subroutine:MBPLAN	file:
31	Fortran/su4dbl.f	/^31      CONTINUE$/;"	l	subroutine:SMEAR1	file:
31	Fortran/su4dbl.f	/^31      CONTINUE$/;"	l	subroutine:THERMLB	file:
31	Fortran/su4dbl.f	/^31    CONTINUE$/;"	l	subroutine:FFDACT	file:
31	Fortran/su4dbl.f	/^31    CONTINUE$/;"	l	subroutine:UPDATG	file:
32	Fortran/su4dbl.f	/^32      CONTINUE$/;"	l	subroutine:PLNCORB	file:
32	Fortran/su4dbl.f	/^32      CONTINUE$/;"	l	subroutine:SEARCH	file:
32	Fortran/su4dbl.f	/^32      CONTINUE$/;"	l	subroutine:SMEAR1	file:
32	Fortran/su4dbl.f	/^32      CONTINUE$/;"	l	subroutine:THERMLB	file:
32	Fortran/su4dbl.f	/^32    CONTINUE$/;"	l	subroutine:FFDACT	file:
32	Fortran/su4dbl.f	/^32    CONTINUE$/;"	l	subroutine:UPDATG	file:
33	Fortran/su4dbl.f	/^33      CONTINUE$/;"	l	subroutine:MBPLAN	file:
33	Fortran/su4dbl.f	/^33      CONTINUE$/;"	l	subroutine:SEARCH	file:
33	Fortran/su4dbl.f	/^33      CONTINUE$/;"	l	subroutine:SMEAR1	file:
33	Fortran/su4dbl.f	/^33      CONTINUE$/;"	l	subroutine:THERMLB	file:
34	Fortran/su4dbl.f	/^34      CONTINUE$/;"	l	subroutine:MBPLAN	file:
34	Fortran/su4dbl.f	/^34      CONTINUE$/;"	l	subroutine:PLNCORB	file:
34	Fortran/su4dbl.f	/^34      CONTINUE$/;"	l	subroutine:THERMLB	file:
35	Fortran/su4dbl.f	/^35      CONTINUE$/;"	l	subroutine:PLNCORB	file:
35	Fortran/su4dbl.f	/^35      CONTINUE$/;"	l	subroutine:SEARCH	file:
35	Fortran/su4dbl.f	/^35      CONTINUE$/;"	l	subroutine:SMEAR1	file:
35	Fortran/su4dbl.f	/^35      CONTINUE$/;"	l	subroutine:THERMLB	file:
35	Fortran/su4dbl.f	/^35    CONTINUE$/;"	l	subroutine:FFDACT	file:
36	Fortran/su4dbl.f	/^36      CONTINUE$/;"	l	subroutine:PLNCORB	file:
36	Fortran/su4dbl.f	/^36      CONTINUE$/;"	l	subroutine:THERMLB	file:
36	Fortran/su4dbl.f	/^36    CONTINUE$/;"	l	subroutine:FFDACT	file:
36	Fortran/su4dbl.f	/^36    CONTINUE$/;"	l	subroutine:UPDATG	file:
37	Fortran/su4dbl.f	/^37      CONTINUE$/;"	l	subroutine:THERMLB	file:
37	Fortran/su4dbl.f	/^37    CONTINUE$/;"	l	subroutine:FFDACT	file:
4	Fortran/su4dbl.f	/^4       CONTINUE$/;"	l	subroutine:DIAG	file:
4	Fortran/su4dbl.f	/^4       CONTINUE$/;"	l	subroutine:JACK	file:
4	Fortran/su4dbl.f	/^4       CONTINUE$/;"	l	subroutine:PLANARB	file:
4	Fortran/su4dbl.f	/^4       CONTINUE$/;"	l	subroutine:POTB	file:
4	Fortran/su4dbl.f	/^4       CONTINUE$/;"	l	subroutine:STARTF	file:
4	Fortran/su4dbl.f	/^4       CONTINUE$/;"	l	subroutine:THERMLB	file:
4	Fortran/su4dbl.f	/^4     CONTINUE$/;"	l	subroutine:HERM	file:
4	Fortran/su4dbl.f	/^4     CONTINUE$/;"	l	subroutine:SEARCH	file:
40	Fortran/su4dbl.f	/^40      CONTINUE$/;"	l	file:
40	Fortran/su4dbl.f	/^40      CONTINUE$/;"	l	subroutine:MBPLAN	file:
40	Fortran/su4dbl.f	/^40      CONTINUE$/;"	l	subroutine:SMEAR1	file:
40	Fortran/su4dbl.f	/^40      CONTINUE$/;"	l	subroutine:THERMLB	file:
40	Fortran/su4dbl.f	/^40    CONTINUE$/;"	l	subroutine:FFDACT	file:
40	Fortran/su4dbl.f	/^40    CONTINUE$/;"	l	subroutine:UPDATG	file:
41	Fortran/su4dbl.f	/^41      CONTINUE$/;"	l	subroutine:MBPLAN	file:
41	Fortran/su4dbl.f	/^41    CONTINUE$/;"	l	subroutine:FFDACT	file:
42	Fortran/su4dbl.f	/^42      CONTINUE$/;"	l	subroutine:MBPLAN	file:
42	Fortran/su4dbl.f	/^42      CONTINUE$/;"	l	subroutine:SMEAR1	file:
42	Fortran/su4dbl.f	/^42    CONTINUE$/;"	l	subroutine:FFDACT	file:
42	Fortran/su4dbl.f	/^42    CONTINUE$/;"	l	subroutine:UPDATG	file:
43	Fortran/su4dbl.f	/^43      CONTINUE$/;"	l	subroutine:SMEAR1	file:
44	Fortran/su4dbl.f	/^44      CONTINUE$/;"	l	subroutine:SMEAR1	file:
44	Fortran/su4dbl.f	/^44      CONTINUE$/;"	l	subroutine:THERMLB	file:
45	Fortran/su4dbl.f	/^45      CONTINUE$/;"	l	subroutine:SMEAR1	file:
45	Fortran/su4dbl.f	/^45    X11=-DLOG(RNDNUM())*UMAG$/;"	l	subroutine:HEATB	file:
46	Fortran/su4dbl.f	/^46      CONTINUE$/;"	l	subroutine:THERMLB	file:
46	Fortran/su4dbl.f	/^46    CONTINUE$/;"	l	subroutine:FFDACT	file:
47	Fortran/su4dbl.f	/^47      CONTINUE$/;"	l	subroutine:THERMLB	file:
48	Fortran/su4dbl.f	/^48      CONTINUE$/;"	l	subroutine:THERMLB	file:
5	Fortran/su4dbl.f	/^5       CONTINUE$/;"	l	subroutine:DIAG	file:
5	Fortran/su4dbl.f	/^5       CONTINUE$/;"	l	subroutine:PLANARB	file:
5	Fortran/su4dbl.f	/^5       CONTINUE$/;"	l	subroutine:RENORM	file:
5	Fortran/su4dbl.f	/^5       CONTINUE$/;"	l	subroutine:RENORMBS	file:
5	Fortran/su4dbl.f	/^5     CONTINUE$/;"	l	subroutine:SUBGRB	file:
5	Fortran/su4dbl.f	/^5     CONTINUE$/;"	l	subroutine:SUBGRH	file:
50	Fortran/su4dbl.f	/^50      CONTINUE$/;"	l	subroutine:PLANARB	file:
50	Fortran/su4dbl.f	/^50      CONTINUE$/;"	l	subroutine:SMEAR1	file:
50	Fortran/su4dbl.f	/^50      CONTINUE$/;"	l	subroutine:THERMLB	file:
50	Fortran/su4dbl.f	/^50    CONTINUE$/;"	l	subroutine:FFDACT	file:
500	Fortran/su4dbl.f	/^500   CONTINUE$/;"	l	subroutine:RENORMBS	file:
52	Fortran/su4dbl.f	/^52    CONTINUE$/;"	l	subroutine:FFDACT	file:
54	Fortran/su4dbl.f	/^54    CONTINUE$/;"	l	subroutine:HEATB	file:
55	Fortran/su4dbl.f	/^55      CONTINUE$/;"	l	subroutine:THERMLB	file:
6	Fortran/su4dbl.f	/^6       CONTINUE$/;"	l	subroutine:DIAG	file:
6	Fortran/su4dbl.f	/^6       CONTINUE$/;"	l	subroutine:JACK	file:
6	Fortran/su4dbl.f	/^6       CONTINUE$/;"	l	subroutine:MOMENTM	file:
6	Fortran/su4dbl.f	/^6       CONTINUE$/;"	l	subroutine:PLANARB	file:
6	Fortran/su4dbl.f	/^6       CONTINUE$/;"	l	subroutine:RENORM	file:
6	Fortran/su4dbl.f	/^6       CONTINUE$/;"	l	subroutine:RENORMBS	file:
6	Fortran/su4dbl.f	/^6       CONTINUE$/;"	l	subroutine:STARTF	file:
6	Fortran/su4dbl.f	/^6     CONTINUE$/;"	l	subroutine:ACTION	file:
6	Fortran/su4dbl.f	/^6     CONTINUE$/;"	l	subroutine:HERM	file:
6	Fortran/su4dbl.f	/^6     CONTINUE$/;"	l	subroutine:SEARCH	file:
6	Fortran/su4dbl.f	/^6     CONTINUE$/;"	l	subroutine:SUBGRB	file:
6	Fortran/su4dbl.f	/^6     CONTINUE$/;"	l	subroutine:SUBGRH	file:
60	Fortran/su4dbl.f	/^60      CONTINUE$/;"	l	subroutine:SMEAR1	file:
61	Fortran/su4dbl.f	/^61      CONTINUE$/;"	l	subroutine:DIAG	file:
62	Fortran/su4dbl.f	/^62      CONTINUE$/;"	l	subroutine:DIAG	file:
63	Fortran/su4dbl.f	/^63      CONTINUE$/;"	l	subroutine:DIAG	file:
64	Fortran/su4dbl.f	/^64      CONTINUE$/;"	l	subroutine:DIAG	file:
7	Fortran/su4dbl.f	/^7       CONTINUE$/;"	l	subroutine:DIAG	file:
7	Fortran/su4dbl.f	/^7       CONTINUE$/;"	l	subroutine:JACK	file:
7	Fortran/su4dbl.f	/^7       CONTINUE$/;"	l	subroutine:MOMENTM	file:
7	Fortran/su4dbl.f	/^7       CONTINUE$/;"	l	subroutine:RENORM	file:
7	Fortran/su4dbl.f	/^7       CONTINUE$/;"	l	subroutine:RENORMBS	file:
7	Fortran/su4dbl.f	/^7     CONTINUE$/;"	l	subroutine:ACTION	file:
8	Fortran/su4dbl.f	/^8       CONTINUE$/;"	l	file:
8	Fortran/su4dbl.f	/^8       CONTINUE$/;"	l	subroutine:DIAG	file:
8	Fortran/su4dbl.f	/^8       CONTINUE$/;"	l	subroutine:JACK	file:
8	Fortran/su4dbl.f	/^8       CONTINUE$/;"	l	subroutine:MOMENTM	file:
8	Fortran/su4dbl.f	/^8       CONTINUE$/;"	l	subroutine:PLANARB	file:
8	Fortran/su4dbl.f	/^8       CONTINUE$/;"	l	subroutine:RENORM	file:
8	Fortran/su4dbl.f	/^8       CONTINUE$/;"	l	subroutine:RENORMBS	file:
8	Fortran/su4dbl.f	/^8     CONTINUE$/;"	l	subroutine:ACTION	file:
80	Fortran/su4dbl.f	/^80      FORMAT(' ****************************************************')$/;"	l	subroutine:MBLINE	file:
80	Fortran/su4dbl.f	/^80      FORMAT(' ****************************************************')$/;"	l	subroutine:MBPLAN	file:
80	Fortran/su4dbl.f	/^80    FORMAT(' *****************************************************')$/;"	l	subroutine:ACTION	file:
81	Fortran/su4dbl.f	/^81      FORMAT(' *')$/;"	l	subroutine:MBLINE	file:
81	Fortran/su4dbl.f	/^81      FORMAT(' *****************************************')$/;"	l	subroutine:MBPLAN	file:
81	Fortran/su4dbl.f	/^81    FORMAT(' *  ')$/;"	l	subroutine:ACTION	file:
82	Fortran/su4dbl.f	/^82      FORMAT(' *')$/;"	l	subroutine:MBPLAN	file:
82	Fortran/su4dbl.f	/^82      FORMAT(' *************')$/;"	l	subroutine:MBLINE	file:
83	Fortran/su4dbl.f	/^83      FORMAT(' ******')$/;"	l	subroutine:MBPLAN	file:
85	Fortran/su4dbl.f	/^85      FORMAT(' TOT\/MAX(MOD,MIN) S,Q= ',6F9.2)$/;"	l	subroutine:FFDACT	file:
86	Fortran/su4dbl.f	/^86      FORMAT('SITE SMAX QMAX,MIN = ',4I3,I10,3I3,I10,3I3)$/;"	l	subroutine:FFDACT	file:
888	Fortran/su4dbl.f	/^ 888  format('Poly(' ,i1, ')  =  (',f16.12,','f16.12')')$/;"	l	subroutine:POLYLOOP	file:
9	Fortran/su4dbl.f	/^9       CONTINUE$/;"	l	subroutine:DIAG	file:
9	Fortran/su4dbl.f	/^9       CONTINUE$/;"	l	subroutine:JACK	file:
9	Fortran/su4dbl.f	/^9     CONTINUE$/;"	l	subroutine:ACTION	file:
90	Fortran/su4dbl.f	/^90      FORMAT('      POLYAKOV   LOOPS :  NALITY = ',I4,'   ITY =',I5)$/;"	l	subroutine:MBLINE	file:
90	Fortran/su4dbl.f	/^90      FORMAT(' ****************************************************')$/;"	l	file:
901	Fortran/su4dbl.f	/^901     FORMAT('   1 x 1 loop  ')$/;"	l	subroutine:MBPLAN	file:
902	Fortran/su4dbl.f	/^902     FORMAT('   1 x 2 loop  ')$/;"	l	subroutine:MBPLAN	file:
91	Fortran/su4dbl.f	/^91      FORMAT(' *')$/;"	l	file:
91	Fortran/su4dbl.f	/^91      FORMAT(' AVERAGE  SPATIAL  LINES ')$/;"	l	subroutine:MBLINE	file:
91	Fortran/su4dbl.f	/^91      FORMAT(' AVERAGE  SUPERPLAQUETTES')$/;"	l	subroutine:MBPLAN	file:
92	Fortran/su4dbl.f	/^92      FORMAT('  LX = ',4I6,'    BETA =',F8.4,'   NCOLOR = ',I4)$/;"	l	file:
92	Fortran/su4dbl.f	/^92      FORMAT(' BLOCKING =',I4,'  AV,ER PLAQ = ',2F12.6)$/;"	l	subroutine:MBPLAN	file:
93	Fortran/su4dbl.f	/^93      FORMAT('  NUM HEATS =',I6,'   NUM ITER =',I6)$/;"	l	file:
93	Fortran/su4dbl.f	/^93      FORMAT(' GLOBAL MAXIMA OF ABS(FFDUAL); Q,R.R CUTS =',F10.4,F8.2)$/;"	l	subroutine:SEARCH	file:
93	Fortran/su4dbl.f	/^93      FORMAT(' MOM SQ = ',I4)$/;"	l	subroutine:MBLINE	file:
94	Fortran/su4dbl.f	/^94      FORMAT('  SWEEPS PER MEAS =',I4,'   MEAS PER BIN =',I4)$/;"	l	file:
94	Fortran/su4dbl.f	/^94      FORMAT(' FFDUAL  X   Y   Z   T   AV DIFF ')$/;"	l	subroutine:SEARCH	file:
94	Fortran/su4dbl.f	/^94      FORMAT(' IE=',I4,'   BLOCKING LEVEL = ',I4)$/;"	l	subroutine:MBLINE	file:
95	Fortran/su4dbl.f	/^95      FORMAT(F10.4,4I5,F10.5)$/;"	l	subroutine:SEARCH	file:
951	Fortran/su4dbl.f	/^951     FORMAT('  PAR BLSMEAR:  AXIS  =',8F8.4)$/;"	l	file:
952	Fortran/su4dbl.f	/^952     FORMAT('  PAR BLSMEAR:  DIAG  =',8F8.4)$/;"	l	file:
953	Fortran/su4dbl.f	/^953     FORMAT('  DIAG SMEARING NOT USED ')$/;"	l	file:
96	Fortran/su4dbl.f	/^96      FORMAT('  at\/as  tree level  =',F8.4)$/;"	l	file:
98	Fortran/su4dbl.f	/^98      FORMAT(' BLOCKING LEVEL = ',I4)$/;"	l	subroutine:MBPLAN	file:
99	Fortran/su4dbl.f	/^99      CONTINUE$/;"	l	subroutine:FITT	file:
99	Fortran/su4dbl.f	/^99      FORMAT('    GLUEBALL  CORRELATIONS -  PLANAR:  ITY =',I5)$/;"	l	subroutine:MBPLAN	file:
99	Fortran/su4dbl.f	/^99      RETURN$/;"	l	subroutine:JACK	file:
99	Fortran/su4dbl.f	/^99    CONTINUE$/;"	l	subroutine:JACKMR	file:
998	Fortran/su4dbl.f	/^ 998    continue$/;"	l	file:
A	LibHR/Update/mre.c	/^static complex A[MAX][MAX];$/;"	v	file:
A	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
A11	Fortran/su4dbl.f	/^        COMPLEX U11,UB11,A11,/;"	v
ACTION	Fortran/su4dbl.f	/^      SUBROUTINE ACTION(/;"	s
ALIGN	Include/memory.h	/^#  define ALIGN /;"	d
ALLOC	LibHR/Geometry/geometry_init.c	/^#define ALLOC(/;"	d	file:
ALLOC	LibHR/Geometry/geometry_init.c	/^#undef ALLOC$/;"	d	file:
ALLOCATE_REPR_GAUGE_FIELD	Include/global.h	/^#define ALLOCATE_REPR_GAUGE_FIELD$/;"	d
APP_ORD	LibHR/Update/remez/Zolotarev/zolotarev.c	/^#define APP_ORD /;"	d	file:
ARRAYB	Fortran/su4dbl.f	/^        COMMON\/ARRAYB\//;"	c
ARRAYB	Fortran/su4dbl.f	/^        COMMON\/ARRAYB\//;"	c	subroutine:PLANARB
ARRAYB	Fortran/su4dbl.f	/^        COMMON\/ARRAYB\//;"	c	subroutine:THERMLB
ARRAYS	Fortran/su4dbl.f	/^        COMMON\/ARRAYS\//;"	c
ARRAYS	Fortran/su4dbl.f	/^        COMMON\/ARRAYS\//;"	c	subroutine:FFDACT
ARRAYS	Fortran/su4dbl.f	/^        COMMON\/ARRAYS\//;"	c	subroutine:RENORM
ARRAYS	Fortran/su4dbl.f	/^        COMMON\/ARRAYS\//;"	c	subroutine:STARTF
ARRAYS	Fortran/su4dbl.f	/^      COMMON\/ARRAYS\//;"	c	subroutine:ACTION
ARRAYS	Fortran/su4dbl.f	/^      COMMON\/ARRAYS\//;"	c	subroutine:POLYLOOP
ARRAYS	Fortran/su4dbl.f	/^      COMMON\/ARRAYS\//;"	c	subroutine:UPDATG
ASMEAR1	Fortran/su4dbl.f	/^        COMMON\/ASMEAR1\//;"	c
ASMEAR1	Fortran/su4dbl.f	/^        COMMON\/ASMEAR1\//;"	c	subroutine:SMEAR1
ASTORE	Fortran/su4dbl.f	/^        COMMON\/ASTORE\//;"	c	subroutine:TODISK
ASTORE	Fortran/su4dbl.f	/^      COMMON\/ASTORE\//;"	c	subroutine:ACTION
AlgRemez	LibHR/Update/remez/alg_remez.C	/^AlgRemez::AlgRemez(double lower, double upper, long precision) $/;"	f	class:AlgRemez
AlgRemez	LibHR/Update/remez/alg_remez.h	/^class AlgRemez$/;"	c
Algebra vectors operations	Doc/data_op.tex	/^suN[gf]\\_vector r,z,s$/;"	b
B	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
B11	Fortran/su4dbl.f	/^        COMPLEX U11,UB11,/;"	v
BASE	LibHR/Random/ranlxd.c	/^#define BASE /;"	d	file:
BASE	LibHR/Random/ranlxs.c	/^#define BASE /;"	d	file:
BASENAME	Scattering/main_run.c	/^#define BASENAME(/;"	d	file:
BC_T_ALREADY	Include/check_options.h	/^# define BC_T_ALREADY$/;"	d
BC_T_ANTIPERIODIC	Include/check_options.h	/^# undef BC_T_ANTIPERIODIC$/;"	d
BC_T_ANTIPERIODIC	Include/macro_opt.h	/^#define BC_T_ANTIPERIODIC$/;"	d
BC_T_OPEN	Include/check_options.h	/^# undef BC_T_OPEN$/;"	d
BC_T_PERIODIC	Include/check_options.h	/^# define BC_T_PERIODIC$/;"	d
BC_T_PERIODIC	Include/check_options.h	/^# undef BC_T_PERIODIC$/;"	d
BC_T_THETA	Include/check_options.h	/^# undef BC_T_THETA$/;"	d
BC_X_ALREADY	Include/check_options.h	/^# define BC_X_ALREADY$/;"	d
BC_X_ANTIPERIODIC	Include/check_options.h	/^# undef BC_X_ANTIPERIODIC$/;"	d
BC_X_PERIODIC	Include/check_options.h	/^# define BC_X_PERIODIC$/;"	d
BC_X_PERIODIC	Include/check_options.h	/^# undef BC_X_PERIODIC$/;"	d
BC_X_PERIODIC	Include/macro_opt.h	/^#define BC_X_PERIODIC$/;"	d
BC_X_THETA	Include/check_options.h	/^# define BC_X_THETA$/;"	d
BC_X_THETA	Include/check_options.h	/^# undef BC_X_THETA$/;"	d
BC_Y_ALREADY	Include/check_options.h	/^# define BC_Y_ALREADY$/;"	d
BC_Y_ANTIPERIODIC	Include/check_options.h	/^# undef BC_Y_ANTIPERIODIC$/;"	d
BC_Y_PERIODIC	Include/check_options.h	/^# define BC_Y_PERIODIC$/;"	d
BC_Y_PERIODIC	Include/check_options.h	/^# undef BC_Y_PERIODIC$/;"	d
BC_Y_PERIODIC	Include/macro_opt.h	/^#define BC_Y_PERIODIC$/;"	d
BC_Y_THETA	Include/check_options.h	/^# define BC_Y_THETA$/;"	d
BC_Y_THETA	Include/check_options.h	/^# undef BC_Y_THETA$/;"	d
BC_Z_ALREADY	Include/check_options.h	/^# define BC_Z_ALREADY$/;"	d
BC_Z_ANTIPERIODIC	Include/check_options.h	/^# undef BC_Z_ANTIPERIODIC$/;"	d
BC_Z_PERIODIC	Include/check_options.h	/^# define BC_Z_PERIODIC$/;"	d
BC_Z_PERIODIC	Include/check_options.h	/^# undef BC_Z_PERIODIC$/;"	d
BC_Z_PERIODIC	Include/macro_opt.h	/^#define BC_Z_PERIODIC$/;"	d
BC_Z_THETA	Include/check_options.h	/^# define BC_Z_THETA$/;"	d
BC_Z_THETA	Include/check_options.h	/^# undef BC_Z_THETA$/;"	d
BCs_pars	LibHR/Utils/boundary_conditions.c	/^static BCs_pars_t BCs_pars;$/;"	v	file:
BCs_pars_t	Include/utils.h	/^} BCs_pars_t;  $/;"	t	typeref:struct:__anon43
BIN	LibHR/Update/remez/Makefile	/^BIN = remez$/;"	m
BOOTSTRAP_H	Analysis/Mesons/bootstrap.h	/^#define BOOTSTRAP_H$/;"	d
BORDERSIZE	Include/geometry.h	/^#define BORDERSIZE /;"	d
BiCGstab	LibHR/Inverters/BiCGstab.c	/^int BiCGstab(mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out)$/;"	f
BiCGstab_mshift	LibHR/Inverters/BiCGstab_mshift.c	/^int BiCGstab_mshift(mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out){$/;"	f
C11	Fortran/su4dbl.f	/^        COMPLEX U11,UB11,A11,B11,C11,/;"	v
C2	TestProgram/Algebra/check_algebra_1.c	/^static float C2=(float)(NG*NG-1)\/(float)(2*NG);$/;"	v	file:
C2	TestProgram/Algebra/check_algebra_1.c	/^static float C2=(float)(NG+2)*(NG-1)\/(float)NG;$/;"	v	file:
C2	TestProgram/Algebra/check_algebra_1.c	/^static float C2=(float)(NG-2)*(NG+1)\/(float)NG;$/;"	v	file:
C2	TestProgram/Algebra/check_algebra_1.c	/^static float C2=(float)NG;$/;"	v	file:
CC	LibHR/Update/remez/Makefile	/^CC = gcc$/;"	m
CCOBJ	LibHR/Update/remez/Makefile	/^CCOBJ=$(CCSRC:.C=.o)$/;"	m
CCSRC	LibHR/Update/remez/Makefile	/^CCSRC :=$(wildcard *.C)$/;"	m
CFLAGS	LibHR/Update/remez/Makefile	/^CFLAGS=  -O3$/;"	m
CHECK_OPTIONS_H	Include/check_options.h	/^#define CHECK_OPTIONS_H$/;"	d
CI_cpuinfo	HMC/cinfo.c	/^static char CI_cpuinfo[      13+1] = "No CPU info\\n";$/;"	v	file:
CI_cpuinfo	Spectrum/cinfo.c	/^static char CI_cpuinfo[      13+1] = "No CPU info\\n";$/;"	v	file:
CI_gcc	HMC/cinfo.c	/^static char CI_gcc[     321+1] = "Configured with: --prefix=\/Applications\/Xcode.app\/Contents\/Developer\/usr --with-gxx-include-dir=\/usr\/include\/c++\/4.2.1\\nApple LLVM version 7.3.0 (clang-703.0.31)\\nTarget: x86_64-apple-darwin15.4.0\\nThread model: posix\\nInstalledDir: \/Applications\/Xcode.app\/Contents\/Developer\/Toolchains\/XcodeDefault.xctoolchain\/usr\/bin\\n";$/;"	v	file:
CI_gcc	Spectrum/cinfo.c	/^static char CI_gcc[     321+1] = "Configured with: --prefix=\/Applications\/Xcode.app\/Contents\/Developer\/usr --with-gxx-include-dir=\/usr\/include\/c++\/4.2.1\\nApple LLVM version 7.3.0 (clang-703.0.31)\\nTarget: x86_64-apple-darwin15.4.0\\nThread model: posix\\nInstalledDir: \/Applications\/Xcode.app\/Contents\/Developer\/Toolchains\/XcodeDefault.xctoolchain\/usr\/bin\\n";$/;"	v	file:
CI_linux	HMC/cinfo.c	/^static char CI_linux[      17+1] = "No VERSION info\\n";$/;"	v	file:
CI_linux	Spectrum/cinfo.c	/^static char CI_linux[      17+1] = "No VERSION info\\n";$/;"	v	file:
CI_mkflags	HMC/cinfo.c	/^static char CI_mkflags[    1063+1] = "NG = 2\\n#REPR = REPR_FUNDAMENTAL\\n#REPR = REPR_SYMMETRIC\\n#REPR = REPR_ANTISYMMETRIC\\nREPR = REPR_ADJOINT\\n\\n#CHOICES ARE GAUGE_SUN AND GAUGE_SON \\nGAUGE_GROUP = GAUGE_SUN\\n\\n#T => PERIODIC, ANTIPERIODIC, OPEN, THETA\\n#X => PERIODIC, ANTIPERIODIC, THETA\\n#Y => PERIODIC, ANTIPERIODIC, THETA\\n#Z => PERIODIC, ANTIPERIODIC, THETA\\n\\n#MACRO += -DBC_T_THETA\\nMACRO += -DBC_T_ANTIPERIODIC\\nMACRO += -DBC_X_PERIODIC\\nMACRO += -DBC_Y_PERIODIC\\nMACRO += -DBC_Z_PERIODIC\\n\\n#MACRO += -DBC_XYZ_TWISTED\\n\\n#MACRO += -DHALFBG_SF\\n#MACRO += -DBASIC_SF\\n#MACRO += -DROTATED_SF\\n\\n#MACRO += -DTLSYM\\nMACRO += -DUPDATE_EO\\n#MACRO += -DWITH_MPI\\n#MACRO += -DWITH_QUATERNIONS\\nMACRO += -DNDEBUG\\n#MACRO += -DCHECK_SPINOR_MATCHING\\n#MACRO += -DMPI_TIMING\\nMACRO += -DIO_FLUSH\\n#MACRO += -DUNROLL_GROUP_REPRESENT\\n#MACRO += -DTIMING\\n#MACRO += -DTIMING_WITH_BARRIERS\\n#MACRO += -DAMALLOC_MEASURE\\n#MACRO += -DMEASURE_FORCE\\n\\n#Compiler\\n#CC = mpicc\\nCC = gcc\\n#CC = clang\\n#CFLAGS = -Wall -std=c99 -O3 -fomit-frame-pointer -msse -msse2 \\nCFLAGS = -Wall -std=c99 -O3\\n\\n\\nLDFLAGS = \\n";$/;"	v	file:
CI_mkflags	Spectrum/cinfo.c	/^static char CI_mkflags[    1063+1] = "NG = 2\\n#REPR = REPR_FUNDAMENTAL\\n#REPR = REPR_SYMMETRIC\\n#REPR = REPR_ANTISYMMETRIC\\nREPR = REPR_ADJOINT\\n\\n#CHOICES ARE GAUGE_SUN AND GAUGE_SON \\nGAUGE_GROUP = GAUGE_SUN\\n\\n#T => PERIODIC, ANTIPERIODIC, OPEN, THETA\\n#X => PERIODIC, ANTIPERIODIC, THETA\\n#Y => PERIODIC, ANTIPERIODIC, THETA\\n#Z => PERIODIC, ANTIPERIODIC, THETA\\n\\n#MACRO += -DBC_T_THETA\\nMACRO += -DBC_T_ANTIPERIODIC\\nMACRO += -DBC_X_PERIODIC\\nMACRO += -DBC_Y_PERIODIC\\nMACRO += -DBC_Z_PERIODIC\\n\\n#MACRO += -DBC_XYZ_TWISTED\\n\\n#MACRO += -DHALFBG_SF\\n#MACRO += -DBASIC_SF\\n#MACRO += -DROTATED_SF\\n\\n#MACRO += -DTLSYM\\nMACRO += -DUPDATE_EO\\n#MACRO += -DWITH_MPI\\n#MACRO += -DWITH_QUATERNIONS\\nMACRO += -DNDEBUG\\n#MACRO += -DCHECK_SPINOR_MATCHING\\n#MACRO += -DMPI_TIMING\\nMACRO += -DIO_FLUSH\\n#MACRO += -DUNROLL_GROUP_REPRESENT\\n#MACRO += -DTIMING\\n#MACRO += -DTIMING_WITH_BARRIERS\\n#MACRO += -DAMALLOC_MEASURE\\n#MACRO += -DMEASURE_FORCE\\n\\n#Compiler\\n#CC = mpicc\\nCC = gcc\\n#CC = clang\\n#CFLAGS = -Wall -std=c99 -O3 -fomit-frame-pointer -msse -msse2 \\nCFLAGS = -Wall -std=c99 -O3\\n\\n\\nLDFLAGS = \\n";$/;"	v	file:
CI_svninfo	HMC/cinfo.c	/^static char CI_svninfo[     399+1] = "Path: \/Users\/rantaharju\/HiRep\\nWorking Copy Root Path: \/Users\/rantaharju\/HiRep\\nURL: svn+svnacc:\/\/cp3-origins.dk\/suN\/HiRep\\nRepository Root: svn+svnacc:\/\/cp3-origins.dk\\nRepository UUID: 37a69121-b030-0410-a54a-fdca83ffee47\\nRevision: 714\\nNode Kind: directory\\nSchedule: normal\\nLast Changed Author: hansen\\nLast Changed Rev: 714\\nLast Changed Date: 2016-05-11 10:20:00 +0200 (Wed, 11 May 2016)\\n\\n";$/;"	v	file:
CI_svninfo	Spectrum/cinfo.c	/^static char CI_svninfo[     399+1] = "Path: \/Users\/rantaharju\/HiRep\\nWorking Copy Root Path: \/Users\/rantaharju\/HiRep\\nURL: svn+svnacc:\/\/cp3-origins.dk\/suN\/HiRep\\nRepository Root: svn+svnacc:\/\/cp3-origins.dk\\nRepository UUID: 37a69121-b030-0410-a54a-fdca83ffee47\\nRevision: 714\\nNode Kind: directory\\nSchedule: normal\\nLast Changed Author: hansen\\nLast Changed Rev: 714\\nLast Changed Date: 2016-05-11 10:20:00 +0200 (Wed, 11 May 2016)\\n\\n";$/;"	v	file:
CI_svnrevision	HMC/cinfo.c	/^static int CI_svnrevision = 714;$/;"	v	file:
CI_svnrevision	Spectrum/cinfo.c	/^static int CI_svnrevision = 714;$/;"	v	file:
CI_svnstatus	HMC/cinfo.c	/^static char CI_svnstatus[    1452+1] = "M       ..\/HMC\/hmc.c\\nM       ..\/HMC\/hmc_utils.c\\nM       ..\/HMC\/input_file\\nM       ..\/Include\/dirac.h\\nM       ..\/Include\/global.h\\nM       ..\/Include\/meson_observables.h\\nM       ..\/Include\/observables.h\\nM       ..\/Include\/spectrum.h\\nM       ..\/Include\/update.h\\nM       ..\/LibHR\/IO\/archive.c\\nM       ..\/LibHR\/IO\/archive_su2quat.c\\nM       ..\/LibHR\/IO\/read_action.c\\nM       ..\/LibHR\/Observables\/calc_prop.c\\nA       ..\/LibHR\/Observables\/four_fermion_meas.c\\nM       ..\/LibHR\/Observables\/measure_mesons.c\\nM       ..\/LibHR\/Observables\/sources.c\\nM       ..\/LibHR\/Update\/D_update.c\\nM       ..\/LibHR\/Update\/Dphi.c\\nA       ..\/LibHR\/Update\/force_4f.c\\nM       ..\/LibHR\/Update\/force_hmc.c\\nA       ..\/LibHR\/Update\/force_hmc_ff.c\\nM       ..\/LibHR\/Update\/integrators.c\\nA       ..\/LibHR\/Update\/mon_ff.c\\nM       ..\/LibHR\/Update\/mon_hasen.c\\nM       ..\/LibHR\/Update\/mon_hasen_tm.c\\nM       ..\/LibHR\/Update\/mon_hasen_tm_alt.c\\nM       ..\/LibHR\/Update\/mon_hmc.c\\nA       ..\/LibHR\/Update\/mon_hmc_ff.c\\nM       ..\/LibHR\/Update\/mon_pg.c\\nM       ..\/LibHR\/Update\/mon_rhmc.c\\nM       ..\/LibHR\/Update\/mon_tm.c\\nM       ..\/LibHR\/Update\/mon_tm_alt.c\\nM       ..\/LibHR\/Update\/monomials.c\\nA       ..\/LibHR\/Update\/scalarfield_operations.c\\nM       ..\/LibHR\/Update\/update_mt.c\\nM       ..\/Make\/MkFlags\\nM       ..\/Spectrum\/Makefile\\nM       ..\/Spectrum\/input_file\\nM       ..\/Spectrum\/measure_spectrum.c\\nM       ..\/Spectrum\/meson_measurements.c\\nA       ..\/tags\\n";$/;"	v	file:
CI_svnstatus	Spectrum/cinfo.c	/^static char CI_svnstatus[    1452+1] = "M       ..\/HMC\/hmc.c\\nM       ..\/HMC\/hmc_utils.c\\nM       ..\/HMC\/input_file\\nM       ..\/Include\/dirac.h\\nM       ..\/Include\/global.h\\nM       ..\/Include\/meson_observables.h\\nM       ..\/Include\/observables.h\\nM       ..\/Include\/spectrum.h\\nM       ..\/Include\/update.h\\nM       ..\/LibHR\/IO\/archive.c\\nM       ..\/LibHR\/IO\/archive_su2quat.c\\nM       ..\/LibHR\/IO\/read_action.c\\nM       ..\/LibHR\/Observables\/calc_prop.c\\nA       ..\/LibHR\/Observables\/four_fermion_meas.c\\nM       ..\/LibHR\/Observables\/measure_mesons.c\\nM       ..\/LibHR\/Observables\/sources.c\\nM       ..\/LibHR\/Update\/D_update.c\\nM       ..\/LibHR\/Update\/Dphi.c\\nA       ..\/LibHR\/Update\/force_4f.c\\nM       ..\/LibHR\/Update\/force_hmc.c\\nA       ..\/LibHR\/Update\/force_hmc_ff.c\\nM       ..\/LibHR\/Update\/integrators.c\\nA       ..\/LibHR\/Update\/mon_ff.c\\nM       ..\/LibHR\/Update\/mon_hasen.c\\nM       ..\/LibHR\/Update\/mon_hasen_tm.c\\nM       ..\/LibHR\/Update\/mon_hasen_tm_alt.c\\nM       ..\/LibHR\/Update\/mon_hmc.c\\nA       ..\/LibHR\/Update\/mon_hmc_ff.c\\nM       ..\/LibHR\/Update\/mon_pg.c\\nM       ..\/LibHR\/Update\/mon_rhmc.c\\nM       ..\/LibHR\/Update\/mon_tm.c\\nM       ..\/LibHR\/Update\/mon_tm_alt.c\\nM       ..\/LibHR\/Update\/monomials.c\\nA       ..\/LibHR\/Update\/scalarfield_operations.c\\nM       ..\/LibHR\/Update\/update_mt.c\\nM       ..\/Make\/MkFlags\\nM       ..\/Spectrum\/Makefile\\nM       ..\/Spectrum\/input_file\\nM       ..\/Spectrum\/measure_spectrum.c\\nM       ..\/Spectrum\/meson_measurements.c\\nA       ..\/tags\\n";$/;"	v	file:
CMA	TestProgram/TripletMesons/check_triplets_2.c	/^#define CMA(/;"	d	file:
COBJ	LibHR/Update/remez/Makefile	/^COBJ=$(CSRC:.c=.o)$/;"	m
COMMON_OBJS	RenormalizationFactors/Makefile	/^COMMON_OBJS = $(TOPDIR)\/GaugeFix\/gaugefix.o$/;"	m
COMMON_OBJS	Spectrum/Makefile	/^COMMON_OBJS = $/;"	m
COMMUNICATIONS_H	Include/communications.h	/^#define COMMUNICATIONS_H$/;"	d
COMPLEX_H	Include/complex.h	/^#define COMPLEX_H$/;"	d
COMPUTE_CORR	LibHR/Observables/z2semwall.c	/^#define COMPUTE_CORR(/;"	d	file:
CORR	Spectrum/mk_mesons.c	/^#define CORR(/;"	d	file:
CORR	Spectrum/mk_mesons.c	/^#undef CORR$/;"	d	file:
CORRECTION	LibHR/Observables/trunc_hairpin.c	/^enum {INVERSION, TRUNCATION, CORRECTION};$/;"	e	enum:__anon53	file:
CPU_MEM	Include/global.h	/^  CPU_MEM = 1<<0,$/;"	e	enum:_mem_t
CSI	Analysis/Mesons/progbar.cpp	/^const char CSI[]="[";$/;"	v
CSRC	LibHR/Update/remez/Makefile	/^CSRC :=$(wildcard *.c)$/;"	m
CXX	LibHR/Update/remez/Makefile	/^CXX = g++$/;"	m
CXXFLAGS	LibHR/Update/remez/Makefile	/^CXXFLAGS=  -O3$/;"	m
Cancelling Backwards Propagation	Doc/measure_spectrum.tex	/^\\end{equation}$/;"	s
Chebyshev	ModeNumber/approx_for_modenumber.c	/^static void Chebyshev(double *ret, int n, double z) {$/;"	f	file:
Checks of the MD force	Doc/hirep.tex	/^\\end{align}$/;"	s
Comments	Doc/action.tex	/^\\end{center}$/;"	b
Connected two point correlation functions	Doc/measure_spectrum.tex	/^\\title{Contractions}$/;"	s
Conventions	Doc/disconnected.tex	/^\\maketitle$/;"	s
Conventions used in the code	Doc/hirep.tex	/^\\end{align}$/;"	s
Corr_t	Analysis/Mesons/bs_type.h	/^  Corr_t(int lt) { length = lt\/2+1; d = new datasample[length]; }$/;"	f	class:Corr_t
Corr_t	Analysis/Mesons/bs_type.h	/^class Corr_t {$/;"	c
Correlatori mesonici di isotripletto	Doc/mesons.tex	/^\\begin{document}$/;"	s
D	LibHR/Update/D_update.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/DiracOperator/check_diracoperator_1.c	/^static void D(spinor_field *out, spinor_field *in){$/;"	f	file:
D	TestProgram/DiracOperator/check_diracoperator_3.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/DiracOperator/check_diracoperator_4.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/DiracOperator/check_diracoperator_6.c	/^static void D(spinor_field *out, spinor_field *in){$/;"	f	file:
D	TestProgram/DiracOperator/speed_test_diracoperator.c	/^static void D(spinor_field *out, spinor_field *in){$/;"	f	file:
D	TestProgram/DiracOperator/speed_test_diracoperator_flt.c	/^static void D(spinor_field *out, spinor_field *in){$/;"	f	file:
D	TestProgram/Inverters/check_inverters_1.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/Inverters/check_inverters_2.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/Inverters/check_inverters_3.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/Inverters/check_inverters_5.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/Inverters/check_inverters_6.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/Inverters/check_inverters_7.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/Inverters/check_inverters_8.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
D	TestProgram/Inverters/check_inverters_SAP.c	/^void D(spinor_field *out, spinor_field *in){$/;"	f
DATASAMPLE_H	Analysis/Mesons/datasample.h	/^#define DATASAMPLE_H$/;"	d
DEBUG_BACKGROUND	LibHR/Utils/background_field.c	/^#define DEBUG_BACKGROUND$/;"	d	file:
DELTA	Include/update.h	/^   DELTA=2$/;"	e	enum:__anon42
DIAG	Fortran/su4dbl.f	/^        SUBROUTINE DIAG(/;"	s
DIAGIN	Fortran/su4dbl.f	/^        COMMON\/DIAGIN\//;"	c	subroutine:DIAG
DIAGIN	Fortran/su4dbl.f	/^        COMMON\/DIAGIN\//;"	c	subroutine:SMEAR1
DIAGOUT	Fortran/su4dbl.f	/^        COMMON\/DIAGOUT\//;"	c	subroutine:DIAG
DIAGOUT	Fortran/su4dbl.f	/^        COMMON\/DIAGOUT\//;"	c	subroutine:SMEAR1
DIM	Make/Utils/autosun/adjoint.h	/^	int DIM;$/;"	m	namespace:representation
DIM	Make/Utils/autosun/antisymmetric.h	/^	int DIM;$/;"	m	namespace:representation
DIM	Make/Utils/autosun/fundamental.h	/^	int DIM;$/;"	m	namespace:representation
DIM	Make/Utils/autosun/sun.h	/^	int DIM;$/;"	m	namespace:group
DIM	Make/Utils/autosun/symmetric.h	/^	int DIM;$/;"	m	namespace:representation
DIRAC_H	Include/dirac.h	/^#define DIRAC_H$/;"	d
DISCONNECTED_H	Include/disconnected.h	/^#define DISCONNECTED_H$/;"	d
DOUBLE_T	Include/input_par.h	/^  DOUBLE_T,$/;"	e	enum:_datatype_t
DUMMY	Fortran/su4dbl.f	/^        COMMON\/DUMMY\//;"	c	subroutine:FFDACT
DUMMY	Fortran/su4dbl.f	/^        COMMON\/DUMMY\//;"	c	subroutine:PLANARB
DUMMY	Fortran/su4dbl.f	/^        COMMON\/DUMMY\//;"	c	subroutine:SEARCH
DUMMY	Fortran/su4dbl.f	/^        COMMON\/DUMMY\//;"	c	subroutine:THERMLB
DUPLICATE	LibHR/Geometry/test_geometry_mpi.c	/^#define DUPLICATE /;"	d	file:
DYNAMICAL_CNFG	Converter/converter.c	/^enum {QUENCHED_CNFG, DYNAMICAL_CNFG, UNKNOWN_CNFG};$/;"	e	enum:__anon6	file:
DYNAMICAL_CNFG	GaugeFix/gaugefix_measure.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon7	file:
DYNAMICAL_CNFG	GaugeFix/gaugefix_unittest.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon9	file:
DYNAMICAL_CNFG	HMC/hmc_forces.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon11	file:
DYNAMICAL_CNFG	ModeNumber/mk_eigvals.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon70	file:
DYNAMICAL_CNFG	ModeNumber/mk_modenumber.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon72	file:
DYNAMICAL_CNFG	RenormalizationFactors/measure_Z_mom.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon74	file:
DYNAMICAL_CNFG	Scattering/IOroutines.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon77	file:
DYNAMICAL_CNFG	Scattering/meson_scattering.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon79	file:
DYNAMICAL_CNFG	Spectrum/measure_formfactor.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon82	file:
DYNAMICAL_CNFG	Spectrum/measure_spectrum.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon84	file:
DYNAMICAL_CNFG	Spectrum/mk_mesons.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon86	file:
DYNAMICAL_CNFG	Spectrum/mk_mesons_with_z2semwall.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon88	file:
DYNAMICAL_CNFG	Spectrum/mk_mesons_with_z2semwall_new.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon90	file:
DYNAMICAL_CNFG	Spectrum/mk_sfcoupling.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon92	file:
DYNAMICAL_CNFG	Spectrum/trunc_mesons.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon94	file:
DYNAMICAL_CNFG	StaticPotential/mk_polyakov_loops.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon96	file:
DYNAMICAL_CNFG	StaticPotential/mk_wilsonloops.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon98	file:
DYNAMICAL_CNFG	StaticPotential/tune_HYP_smearing.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon100	file:
DYNAMICAL_CNFG	TestProgram/Deflate/check_deflate.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon103	file:
DYNAMICAL_CNFG	TestProgram/Propagator/check_propagator.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon106	file:
DYNAMICAL_CNFG	WilsonFlow/WF_measure.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon112	file:
DYNAMICAL_CNFG	WilsonFlow/WF_measure_adaptative.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon114	file:
D_AVE_EFF	Analysis/Mesons/bs_ctrl.h	/^enum { D_EFF_B1=0, D_EFF_B2, D_FIT, D_AVE_EFF, D_AVE_FIT };$/;"	e	enum:__anon2
D_AVE_FIT	Analysis/Mesons/bs_ctrl.h	/^enum { D_EFF_B1=0, D_EFF_B2, D_FIT, D_AVE_EFF, D_AVE_FIT };$/;"	e	enum:__anon2
D_EFF_B1	Analysis/Mesons/bs_ctrl.h	/^enum { D_EFF_B1=0, D_EFF_B2, D_FIT, D_AVE_EFF, D_AVE_FIT };$/;"	e	enum:__anon2
D_EFF_B2	Analysis/Mesons/bs_ctrl.h	/^enum { D_EFF_B1=0, D_EFF_B2, D_FIT, D_AVE_EFF, D_AVE_FIT };$/;"	e	enum:__anon2
D_FIT	Analysis/Mesons/bs_ctrl.h	/^enum { D_EFF_B1=0, D_EFF_B2, D_FIT, D_AVE_EFF, D_AVE_FIT };$/;"	e	enum:__anon2
D_flt	LibHR/Update/D_update.c	/^void D_flt(spinor_field_flt *out, spinor_field_flt *in){$/;"	f
D_flt	TestProgram/DiracOperator/check_diracoperator_5.c	/^static void D_flt(spinor_field_flt *out, spinor_field_flt *in){$/;"	f	file:
D_flt	TestProgram/DiracOperator/check_diracoperator_6.c	/^static void D_flt(spinor_field_flt *out, spinor_field_flt *in){$/;"	f	file:
D_flt	TestProgram/Inverters/check_inverters_8.c	/^void D_flt(spinor_field_flt *out, spinor_field_flt *in){$/;"	f
D_pre	LibHR/Observables/calc_prop.c	/^static void D_pre(spinor_field *out, spinor_field *in){$/;"	f	file:
D_pre	LibHR/Observables/z2semwall.c	/^static void D_pre(spinor_field *out, spinor_field *in){$/;"	f	file:
D_pre	LibHR/Observables/z2semwall_new.c	/^static void D_pre(spinor_field *out, spinor_field *in){$/;"	f	file:
D_pta	LibHR/Observables/pta_qprop.c	/^static void D_pta(spinor_field *out, spinor_field *in){$/;"	f	file:
D_pta_pre	LibHR/Observables/pta_qprop.c	/^static void D_pta_pre(spinor_field *out, spinor_field *in){$/;"	f	file:
D_qmr	LibHR/Observables/trunc_hairpin.c	/^static void D_qmr(spinor_field *out, spinor_field *in){$/;"	f	file:
D_qmr_eo	LibHR/Observables/trunc_hairpin.c	/^static void D_qmr_eo(spinor_field *out, spinor_field *in){$/;"	f	file:
D_qmr_oe	LibHR/Observables/trunc_hairpin.c	/^static void D_qmr_oe(spinor_field *out, spinor_field *in){$/;"	f	file:
Ddag_pre	LibHR/Observables/calc_prop.c	/^static void Ddag_pre(spinor_field *out, spinor_field *in, spinor_field *ttmp){ $/;"	f	file:
Debugging options	Doc/disconnected.tex	/^where iGamma refers to the index of the Gamma matrix defined in \\tab{tab:Gamma_basis}$/;"	s
DerChebyshev	ModeNumber/approx_for_modenumber.c	/^static void DerChebyshev(double *der, double *T, int n, double z) {$/;"	f	file:
Dff	LibHR/Update/D_ff.c	/^void Dff(spinor_field *out, spinor_field *in){$/;"	f
Dff_dagger	LibHR/Update/D_ff.c	/^void Dff_dagger(spinor_field *out, spinor_field *in){$/;"	f
Dff_sq	LibHR/Update/D_ff.c	/^void Dff_sq(spinor_field *out, spinor_field *in){$/;"	f
Dirac_operator	Reweight/reweight.c	/^void Dirac_operator(spinor_field *out, spinor_field *in)$/;"	f
Dphi	LibHR/Update/Dphi.c	/^void Dphi(double m0, spinor_field *out, spinor_field *in)$/;"	f
Dphi_	LibHR/Update/Dphi.c	/^void Dphi_(spinor_field *out, spinor_field *in)$/;"	f
Dphi_4f	LibHR/Update/D_ff.c	/^void Dphi_4f(double m0, spinor_field *out, spinor_field *in)$/;"	f
Dphi_4f_dagger	LibHR/Update/D_ff.c	/^void Dphi_4f_dagger(double m0, spinor_field *out, spinor_field *in)$/;"	f
Dphi_4f_sq	LibHR/Update/D_ff.c	/^void Dphi_4f_sq(double m0, spinor_field *out, spinor_field *in) {$/;"	f
Dphi_eopre	LibHR/Update/Dphi.c	/^void Dphi_eopre(double m0, spinor_field *out, spinor_field *in)$/;"	f
Dphi_eopre_4f	LibHR/Update/D_ff.c	/^void Dphi_eopre_4f(double m0, spinor_field *out, spinor_field *in, double shift)$/;"	f
Dphi_eopre_4f_dagger	LibHR/Update/D_ff.c	/^void Dphi_eopre_4f_dagger(double m0, spinor_field *out, spinor_field *in, double shift)$/;"	f
Dphi_eopre_flt	LibHR/Update/Dphi_flt.c	/^void Dphi_eopre_flt(double m0, spinor_field_flt *out, spinor_field_flt *in)$/;"	f
Dphi_flt	LibHR/Update/Dphi_flt.c	/^void Dphi_flt(double m0, spinor_field_flt *out, spinor_field_flt *in)$/;"	f
Dphi_flt_	LibHR/Update/Dphi_flt.c	/^void Dphi_flt_(spinor_field_flt *out, spinor_field_flt *in)$/;"	f
Dphi_oepre	LibHR/Update/Dphi.c	/^void Dphi_oepre(double m0, spinor_field *out, spinor_field *in)$/;"	f
Dphi_oepre_flt	LibHR/Update/Dphi_flt.c	/^void Dphi_oepre_flt(double m0, spinor_field_flt *out, spinor_field_flt *in)$/;"	f
Dphieopre_4f_DDdagger	LibHR/Update/D_ff.c	/^void Dphieopre_4f_DDdagger(double m0, spinor_field *out, spinor_field *in, double shift) {$/;"	f
Dphieopre_4f_sq	LibHR/Update/D_ff.c	/^void Dphieopre_4f_sq(double m0, spinor_field *out, spinor_field *in, double shift) {$/;"	f
DrawBar	Analysis/Mesons/progbar.cpp	/^void DrawBar(double p, std::ostream &out) {$/;"	f
Dv	LibHR/Update/mre.c	/^static spinor_field *Dv;$/;"	v	file:
EFFECTIVE_MASS_H	Analysis/Mesons/effective_mass.h	/^#define EFFECTIVE_MASS_H$/;"	d
ELEMENT	Make/Utils/autosun/list.h	/^	struct ELEMENT$/;"	s	class:orderedlist
EO_PRE	LibHR/Observables/trunc_hairpin.c	/^#define EO_PRE$/;"	d	file:
EPSILON	LibHR/Inverters/eva.c	/^static double EPSILON=1.e-12;$/;"	v	file:
EPSILON	LibHR/Update/rational_functions.c	/^#define EPSILON /;"	d	file:
EPSILON	LibHR/Update/rational_functions.c	/^#undef EPSILON$/;"	d	file:
EPSILON	TestProgram/Inverters/check_inverters_4.c	/^static double EPSILON=1.e-12;$/;"	v	file:
EPSILON	TestProgram/SpinorField/check_spinorfield_1.c	/^static double EPSILON=1.e-12;$/;"	v	file:
ERROR_H	Include/error.h	/^#define ERROR_H$/;"	d
EVEN	LibHR/Geometry/test_geometry_mpi.c	/^#define EVEN /;"	d	file:
EXACT	Include/observables.h	/^typedef enum {NO_DILUTION, TIME_DILUTION, TIME_SPIN_DILUTION, EXACT} dilution_mode;$/;"	e	enum:__anon17
EXCLUDE	LibHR/Error/Makefile	/^EXCLUDE =$/;"	m
EXCLUDE	LibHR/Geometry/Makefile	/^EXCLUDE =$/;"	m
EXCLUDE	LibHR/IO/Makefile	/^EXCLUDE =$/;"	m
EXCLUDE	LibHR/Inverters/Makefile	/^EXCLUDE = HBiCGstab.c BiCGstab_mshift.c HBiCGstab_mshift.c dirac_eva.c$/;"	m
EXCLUDE	LibHR/Memory/Makefile	/^EXCLUDE =$/;"	m
EXCLUDE	LibHR/Observables/Makefile	/^EXCLUDE = trunc_hairpin.c$/;"	m
EXCLUDE	LibHR/Random/Makefile	/^EXCLUDE = $/;"	m
EXCLUDE	LibHR/Statistics/Makefile	/^EXCLUDE =$/;"	m
EXCLUDE	LibHR/Update/Makefile	/^EXCLUDE = leapfrog.c update_hmc.c update_rhmc.c update_puregauge.c$/;"	m
EXCLUDEDIR	Makefile	/^EXCLUDEDIR := Analysis Doc Fortran HiRep.xcodeproj$/;"	m
EXCLUDEDIR	TestProgram/Makefile	/^EXCLUDEDIR := $/;"	m
EXEC	Make/Utils/autosun/Makefile	/^EXEC = writeREPR$/;"	m
EXES	Converter/Makefile	/^EXES = converter$/;"	m
EXES	Disconnected/Makefile	/^EXES = compute_loops$/;"	m
EXES	Fortran/Makefile	/^EXES = su4dbl$/;"	m
EXES	GaugeFix/Makefile	/^EXES = gaugefix_measure gaugefix_unittest$/;"	m
EXES	HMC/Makefile	/^EXES = hmc hmc_forces$/;"	m
EXES	ModeNumber/Makefile	/^EXES = mk_modenumber mk_eigvals$/;"	m
EXES	PureGauge/Makefile	/^EXES = suN$/;"	m
EXES	RenormalizationFactors/Makefile	/^EXES = measure_Z_mom $/;"	m
EXES	Reweight/Makefile	/^EXES = reweight_theta reweight_mass$/;"	m
EXES	Scattering/Makefile	/^EXES = scatter_test  main_run$/;"	m
EXES	Spectrum/Makefile	/^EXES =  mk_mesons random_cnfg random_spinor mk_mesons_with_z2semwall mk_mesons_with_z2semwall_new  measure_spectrum measure_formfactor #mk_sfcoupling #trunc_mesons$/;"	m
EXES	StaticPotential/Makefile	/^EXES = mk_wilsonloops tune_HYP_smearing mk_polyakov_loops$/;"	m
EXES	TestProgram/Algebra/Makefile	/^EXES = check_algebra_1 $/;"	m
EXES	TestProgram/Deflate/Makefile	/^EXES = check_deflate$/;"	m
EXES	TestProgram/DiracOperator/Makefile	/^EXES = check_diracoperator_1 check_diracoperator_2 check_diracoperator_3 check_diracoperator_4 check_diracoperator_5 check_diracoperator_6 speed_test_diracoperator speed_test_diracoperator_flt$/;"	m
EXES	TestProgram/Geometry/Makefile	/^EXES = check_geometry_1$/;"	m
EXES	TestProgram/Inverters/Makefile	/^EXES = check_inverters_SAP check_inverters_1 check_inverters_2 check_inverters_3 check_inverters_4 check_inverters_5 check_inverters_6 check_inverters_7 check_inverters_8$/;"	m
EXES	TestProgram/Propagator/Makefile	/^EXES = check_propagator$/;"	m
EXES	TestProgram/PureGauge/Makefile	/^EXES = check_puregauge_1 check_puregauge_2$/;"	m
EXES	TestProgram/Random/Makefile	/^EXES = testlx$/;"	m
EXES	TestProgram/RotatedSF/Makefile	/^EXES = check_rotatedsf_1 check_rotatedsf_2 check_rotatedsf_3 check_rotatedsf_4$/;"	m
EXES	TestProgram/SpinorField/Makefile	/^EXES = check_spinorfield_1$/;"	m
EXES	TestProgram/TripletMesons/Makefile	/^EXES = check_triplets_1 check_triplets_2$/;"	m
EXES	TestProgram/Update/Makefile	/^EXES = check_update_1$/;"	m
EXES	TestProgram/Utils/Makefile	/^EXES = check_suNg_op$/;"	m
EXES	TestProgram/WilsonLoops/Makefile	/^EXES = check_wilsonloops_1 check_wilsonloops_2 check_wilsonloops_3 check_wilsonloops_4 check_wilsonloops_5 check_wilsonloops_6 check_wilsonloops_7$/;"	m
EXES	WilsonFlow/Makefile	/^EXES = WF_measure WF_measure_adaptative$/;"	m
EXTRAS_H	Include/statistics.h	/^#define EXTRAS_H$/;"	d
E_8	LibHR/Observables/sf_action.c	/^static double E_8(int ix,int k)$/;"	f	file:
E_8_top	LibHR/Observables/sf_action.c	/^static double E_8_top(int ix,int k)$/;"	f	file:
Even Odd preconditioning	Doc/hirep.tex	/^metropolis test, while we keep it fixed during the molecular dinamics.$/;"	s
ExpX	LibHR/Utils/suN_exp.c	/^void ExpX(double dt, suNg_algebra_vector *h, suNg *r)$/;"	f
ExpX	Make/Utils/autosun/sun.h	/^string ExpX(const char* dtname,  const char* hname, const char* uname)$/;"	f
ExpX2	LibHR/Utils/suN_exp.c	/^void ExpX2(double dt, suNg_algebra_vector *h, suNg *u)$/;"	f
FC	Fortran/Makefile	/^FC = ifort -cxxlib -O2 -align -Zp16 -r8$/;"	m
FERMION_THETA	Include/check_options.h	/^# define FERMION_THETA$/;"	d
FFDACT	Fortran/su4dbl.f	/^        SUBROUTINE FFDACT$/;"	s
FIELD_ORDERING_H	Include/field_ordering.h	/^#define FIELD_ORDERING_H$/;"	d
FIT	Fortran/su4dbl.f	/^        COMMON\/FIT\//;"	c	subroutine:JACK
FIT	Fortran/su4dbl.f	/^        COMMON\/FIT\//;"	c	subroutine:MBLINE
FIT	Fortran/su4dbl.f	/^        COMMON\/FIT\//;"	c	subroutine:MBPLAN
FITT	Fortran/su4dbl.f	/^        SUBROUTINE FITT(/;"	s
FLOATING	Make/Utils/autosun/complex.h	/^#define FLOATING /;"	d
Fields data types label fields	Doc/data_op.tex	/^suN[gf]\\_spinor r,s$/;"	s
Force for the HMC molecular dynamics	Doc/hirep.tex	/^The code crashes as well if the test function is not called.$/;"	s
Formule generali	Doc/mesons.tex	/^\\section{Correlatori mesonici di isotripletto}$/;"	b
FourFermion	Include/update.h	/^  FourFermion,$/;"	e	enum:__anon41
G0G1_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0G1_CHANNEL$/;"	d	file:
G0G1_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0G1_CHANNEL$/;"	d	file:
G0G2_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0G2_CHANNEL$/;"	d	file:
G0G2_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0G2_CHANNEL$/;"	d	file:
G0G3_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0G3_CHANNEL$/;"	d	file:
G0G3_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0G3_CHANNEL$/;"	d	file:
G0G5G1_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0G5G1_CHANNEL$/;"	d	file:
G0G5G1_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0G5G1_CHANNEL$/;"	d	file:
G0G5G2_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0G5G2_CHANNEL$/;"	d	file:
G0G5G2_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0G5G2_CHANNEL$/;"	d	file:
G0G5G3_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0G5G3_CHANNEL$/;"	d	file:
G0G5G3_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0G5G3_CHANNEL$/;"	d	file:
G0G5_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0G5_CHANNEL$/;"	d	file:
G0G5_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0G5_CHANNEL$/;"	d	file:
G0_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G0_CHANNEL$/;"	d	file:
G0_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G0_CHANNEL$/;"	d	file:
G1_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G1_CHANNEL$/;"	d	file:
G1_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G1_CHANNEL$/;"	d	file:
G2_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G2_CHANNEL$/;"	d	file:
G2_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G2_CHANNEL$/;"	d	file:
G3_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G3_CHANNEL$/;"	d	file:
G3_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G3_CHANNEL$/;"	d	file:
G5G1_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G5G1_CHANNEL$/;"	d	file:
G5G1_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G5G1_CHANNEL$/;"	d	file:
G5G2_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G5G2_CHANNEL$/;"	d	file:
G5G2_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G5G2_CHANNEL$/;"	d	file:
G5G3_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define G5G3_CHANNEL$/;"	d	file:
G5G3_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G5G3_CHANNEL$/;"	d	file:
G5_DISC_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define G5_DISC_CHANNEL$/;"	d	file:
GAMMA	LibHR/Inverters/eva.c	/^#define GAMMA /;"	d	file:
GAMMA_G5GAMMADAG_IM_DEFINITION	LibHR/Observables/mesons.c	/^#define GAMMA_G5GAMMADAG_IM_DEFINITION(/;"	d	file:
GAMMA_G5GAMMADAG_RE_DEFINITION	LibHR/Observables/mesons.c	/^#define GAMMA_G5GAMMADAG_RE_DEFINITION(/;"	d	file:
GAMMA_SPINOR_H	Include/gamma_spinor.h	/^#define GAMMA_SPINOR_H$/;"	d
GAMMA_TRACE_IM_DEFINITION	LibHR/Observables/mesons.c	/^#define GAMMA_TRACE_IM_DEFINITION(/;"	d	file:
GAMMA_TRACE_RE_DEFINITION	LibHR/Observables/mesons.c	/^#define GAMMA_TRACE_RE_DEFINITION(/;"	d	file:
GAUGEFIX_H	Include/gaugefix.h	/^#define GAUGEFIX_H$/;"	d
GAUGE_SUN	Include/macro_opt.h	/^#define GAUGE_SUN$/;"	d
GAUSSIAN_NOISE	LibHR/Observables/calc_prop.c	/^#undef GAUSSIAN_NOISE /;"	d	file:
GAUSSIAN_NOISE	LibHR/Observables/calc_prop.c	/^#undef GAUSSIAN_NOISE$/;"	d	file:
GAUSSIAN_NOISE	LibHR/Observables/calc_prop_ff.c	/^#undef GAUSSIAN_NOISE /;"	d	file:
GAUSSIAN_NOISE	LibHR/Observables/z2semwall_new.c	/^#define GAUSSIAN_NOISE /;"	d	file:
GAUSSIAN_NOISE	LibHR/Observables/z2semwall_new.c	/^#undef GAUSSIAN_NOISE$/;"	d	file:
GEOMETRY_H	Include/geometry.h	/^#define GEOMETRY_H$/;"	d
GLB_VAR	Include/global.h	/^#  define GLB_VAR(/;"	d
GLB_VAR	Include/global.h	/^#undef GLB_VAR$/;"	d
GLOBAL_H	Include/global.h	/^#define GLOBAL_H$/;"	d
GMPHOME	LibHR/Update/remez/Makefile	/^GMPHOME = \/opt\/local$/;"	m
GPU_MEM	Include/global.h	/^  GPU_MEM = 1<<1$/;"	e	enum:_mem_t
GS_vect	LibHR/Utils/eva_deflation.c	/^static void GS_vect(spinor_field *b, int n) {$/;"	f	file:
Gauge	Doc/action.tex	/^\\newpage$/;"	b
General idea	Doc/disconnected.tex	/^\\section{stochastic evaluation of disconnected loops}$/;"	b
Geometry	Doc/data_op.tex	/^\\end{center}$/;"	s
H	LibHR/Update/D_update.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/DiracOperator/check_diracoperator_3.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_1.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_2.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_3.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_5.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_6.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_7.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_8.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H	TestProgram/Inverters/check_inverters_SAP.c	/^void H(spinor_field *out, spinor_field *in){$/;"	f
H2	LibHR/Update/D_update.c	/^void H2(spinor_field *out, spinor_field *in){$/;"	f
H2EVA	ModeNumber/mk_eigvals.c	/^void H2EVA(spinor_field *out, spinor_field *in){$/;"	f
H2X	ModeNumber/modenumber.c	/^static void H2X(spinor_field *out, spinor_field *in){$/;"	f	file:
H2_pre	LibHR/Observables/calc_prop.c	/^static void H2_pre(spinor_field *out, spinor_field *in){$/;"	f	file:
H2_sf	LibHR/Observables/sf_pcac.c	/^static void H2_sf(spinor_field *out, spinor_field *in){$/;"	f	file:
H2eva	HMC/hmc.c	/^static void H2eva(spinor_field *out, spinor_field *in){$/;"	f	file:
HAIRPIN	Spectrum/trunc_mesons.c	/^#define HAIRPIN(/;"	d	file:
HB	Fortran/su4dbl.f	/^      COMMON\/HB\//;"	c	subroutine:HEATB
HB	Fortran/su4dbl.f	/^      COMMON\/HB\//;"	c	subroutine:SUBGRH
HB	Fortran/su4dbl.f	/^      COMMON\/HB\//;"	c	subroutine:UPDATG
HBiCGstab	LibHR/Inverters/HBiCGstab.c	/^int HBiCGstab(MINRES_par *par, spinor_operator M, spinor_field *in, spinor_field *out){$/;"	f
HBiCGstab_flt	LibHR/Inverters/HBiCGstab.c	/^int HBiCGstab_flt(MINRES_par *par, spinor_operator_flt M, spinor_field_flt *in, spinor_field_flt *out){$/;"	f
HBiCGstab_mshift	LibHR/Inverters/HBiCGstab_mshift.c	/^int HBiCGstab_mshift(mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out){$/;"	f
HEATB	Fortran/su4dbl.f	/^      SUBROUTINE HEATB$/;"	s
HERM	Fortran/su4dbl.f	/^      SUBROUTINE HERM(/;"	s
HEVA	ModeNumber/mk_eigvals.c	/^void HEVA(spinor_field *out, spinor_field *in){$/;"	f
HEVA	ModeNumber/mk_modenumber.c	/^void HEVA(spinor_field *out, spinor_field *in){$/;"	f
HMC	Doc/action.tex	/^\\newpage$/;"	b
HMC	Include/update.h	/^  HMC,$/;"	e	enum:__anon41
HMC Algorithm	Doc/hirep.tex	/^and $b$ in that formula.$/;"	s
HMC_UTILS_H	HMC/hmc_utils.h	/^#define HMC_UTILS_H$/;"	d
HMC_ff	Include/update.h	/^  HMC_ff,$/;"	e	enum:__anon41
HR_OMP_H	Include/hr_omp.h	/^#define HR_OMP_H$/;"	d
HYP	LibHR/Observables/wilsonloops.c	/^static suNg_field* HYP;$/;"	v	file:
HYP_best_parameters	LibHR/Utils/HYP_smearing.c	/^int HYP_best_parameters(double mtp[6859], double w[3]) {$/;"	f
HYP_smearing	LibHR/Utils/HYP_smearing.c	/^void HYP_smearing(suNg_field* out, suNg_field* in, double weight[3]) {$/;"	f
HYP_span_parameters	LibHR/Utils/HYP_smearing.c	/^void HYP_span_parameters(double mtp[6859]) {$/;"	f
HYP_var	StaticPotential/mk_wilsonloops.c	/^input_HYP HYP_var = init_input_HYP(HYP_var);$/;"	v
H_flt	LibHR/Update/D_update.c	/^void H_flt(spinor_field_flt *out, spinor_field_flt *in){$/;"	f
H_loc	LibHR/Utils/eva_deflation.c	/^static spinor_operator H_loc=NULL;$/;"	v	file:
H_pre	LibHR/Observables/calc_prop.c	/^static void H_pre(spinor_field *out, spinor_field *in){$/;"	f	file:
H_pta	LibHR/Observables/pta_qprop.c	/^static void H_pta(spinor_field *out, spinor_field *in){$/;"	f	file:
H_sf	LibHR/Observables/sf_pcac.c	/^static void H_sf(spinor_field *out, spinor_field *in){$/;"	f	file:
Hasenbusch	Doc/action.tex	/^\\newpage$/;"	b
Hasenbusch	Include/update.h	/^  Hasenbusch,$/;"	e	enum:__anon41
Hasenbusch acceleration	Doc/hirep.tex	/^\\gamma_5 \\Gamma^\\prime$.$/;"	s
Hasenbusch_ff	Include/update.h	/^  Hasenbusch_ff$/;"	e	enum:__anon41
Hasenbusch_tm	Include/update.h	/^  Hasenbusch_tm,$/;"	e	enum:__anon41
Hasenbusch_tm_alt	Include/update.h	/^  Hasenbusch_tm_alt,$/;"	e	enum:__anon41
Hchi	LibHR/Update/force_rhmc.c	/^static spinor_field *Hchi = NULL;$/;"	v	file:
Herm	LibHR/Inverters/g5QMR_mshift.c	/^static void Herm(spinor_field *out, spinor_field *in){$/;"	f	file:
Herm	LibHR/Observables/g5QMR_trunc.c	/^static void Herm(spinor_field *out, spinor_field *in){$/;"	f	file:
Herm_flt	LibHR/Inverters/g5QMR_mshift.c	/^static void Herm_flt(spinor_field_flt *out, spinor_field_flt *in){$/;"	f	file:
ID_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define ID_CHANNEL$/;"	d	file:
ID_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define ID_CHANNEL$/;"	d	file:
ID_DISC_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define ID_DISC_CHANNEL$/;"	d	file:
IF_COR	Analysis/Mesons/bs_ctrl.cpp	/^#define IF_COR(/;"	d	file:
IF_COR	Analysis/Mesons/bs_ctrl.cpp	/^#undef IF_COR$/;"	d	file:
IF_DER_EFF	Analysis/Mesons/bs_ctrl.cpp	/^#define IF_DER_EFF(/;"	d	file:
IF_DER_EFF	Analysis/Mesons/bs_ctrl.cpp	/^#undef IF_DER_EFF$/;"	d	file:
IF_DER_FIT	Analysis/Mesons/bs_ctrl.cpp	/^#define IF_DER_FIT(/;"	d	file:
IF_DER_FIT	Analysis/Mesons/bs_ctrl.cpp	/^#undef IF_DER_FIT$/;"	d	file:
IF_EFF	Analysis/Mesons/bs_ctrl.cpp	/^#define IF_EFF(/;"	d	file:
IF_EFF	Analysis/Mesons/bs_ctrl.cpp	/^#undef IF_EFF$/;"	d	file:
IF_FIT	Analysis/Mesons/bs_ctrl.cpp	/^#define IF_FIT(/;"	d	file:
IF_FIT	Analysis/Mesons/bs_ctrl.cpp	/^#undef IF_FIT$/;"	d	file:
IF_RATIO	Analysis/Mesons/bs_ctrl.cpp	/^#define IF_RATIO(/;"	d	file:
IF_RATIO	Analysis/Mesons/bs_ctrl.cpp	/^#undef IF_RATIO$/;"	d	file:
INCLIST	LibHR/Update/remez/Makefile	/^INCLIST = -I$(GMPHOME)\/include$/;"	m
INCLUDED_ALG_REMEZ_H	LibHR/Update/remez/alg_remez.h	/^#define INCLUDED_ALG_REMEZ_H$/;"	d
INCLUDED_BIGFLOAT_H	LibHR/Update/remez/bigfloat.h	/^#define INCLUDED_BIGFLOAT_H$/;"	d
INDEX	LibHR/Observables/measure_scattering.c	/^#define INDEX(/;"	d	file:
INDEX	Scattering/main_run.c	/^#define INDEX(/;"	d	file:
INDEX	Scattering/scatter_test.c	/^#define INDEX(/;"	d	file:
INNER	LibHR/Geometry/test_geometry_mpi.c	/^#define INNER /;"	d	file:
INPUT_PAR_H	Include/input_par.h	/^#define INPUT_PAR_H$/;"	d
INT_T	Include/input_par.h	/^  INT_T,$/;"	e	enum:_datatype_t
INVERSION	LibHR/Observables/trunc_hairpin.c	/^enum {INVERSION, TRUNCATION, CORRECTION};$/;"	e	enum:__anon53	file:
INVERTERS_H	Include/inverters.h	/^#define INVERTERS_H$/;"	d
IO_FLUSH	Include/macro_opt.h	/^#define IO_FLUSH$/;"	d
IO_H	Include/io.h	/^#define IO_H$/;"	d
ITEM	Fortran/su4dbl.f	/^        COMMON\/ITEM\//;"	c	subroutine:MBLINE
ITEM	Fortran/su4dbl.f	/^        COMMON\/ITEM\//;"	c	subroutine:MBPLAN
ITEM	Fortran/su4dbl.f	/^        COMMON\/ITEM\//;"	c	subroutine:MEASURE
ITEM	Fortran/su4dbl.f	/^        COMMON\/ITEM\//;"	c	subroutine:PLNCORB
ITEM	Fortran/su4dbl.f	/^        COMMON\/ITEM\//;"	c	subroutine:POTB
IX	LibHR/Update/rect_staples.c	/^static int IX,MU,NU;$/;"	v	file:
Implemented source types	Doc/disconnected.tex	/^stochastic sources for the purpose of avoiding unwanted biases. $/;"	b
Integrator	Doc/action.tex	/^\\begin{document}$/;"	b
JACK	Fortran/su4dbl.f	/^        SUBROUTINE JACK(/;"	s
JACKM	Fortran/su4dbl.f	/^      SUBROUTINE JACKM(/;"	s
JACKMR	Fortran/su4dbl.f	/^      SUBROUTINE JACKMR(/;"	s
JKavr	Analysis/Mesons/datasample.cpp	/^estimate datasample::JKavr(const int blsize) const {$/;"	f	class:datasample
JKcov	Analysis/Mesons/datasample.cpp	/^estimate JKcov(const datasample &dt1, const datasample &dt2, const int blsize) {$/;"	f
JKvar	Analysis/Mesons/datasample.cpp	/^estimate datasample::JKvar(const int blsize) const {$/;"	f	class:datasample
JMAX	LibHR/Update/remez/alg_remez.h	/^#define JMAX /;"	d
K	LibHR/Update/remez/Zolotarev/zolotarev.c	/^static real K(real kp) {$/;"	f	file:
KEYTYPE	Make/Utils/autosun/list.h	/^typedef long long int KEYTYPE;$/;"	t
LBORDER	LibHR/Geometry/test_geometry_mpi.c	/^#define LBORDER /;"	d	file:
LBUFFER	LibHR/Geometry/test_geometry_mpi.c	/^#define LBUFFER /;"	d	file:
LDFLAGS	LibHR/Update/remez/Makefile	/^LDFLAGS =  -L$(GMPHOME)\/lib -lmpfr -lgmp $/;"	m
LIBDIRS	LibHR/Makefile	/^LIBDIRS = $(SUBDIRS)$/;"	m
LIBNAME	LibHR/Error/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Geometry/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/IO/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Inverters/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Makefile	/^LIBNAME = .\/libhr.a$/;"	m
LIBNAME	LibHR/Memory/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Observables/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Random/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Statistics/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Update/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LIBNAME	LibHR/Utils/Makefile	/^LIBNAME = ..\/libhr.a$/;"	m
LINEAR_ALGEBRA_H	Include/linear_algebra.h	/^#define LINEAR_ALGEBRA_H$/;"	d
LINES	Fortran/su4dbl.f	/^        COMMON\/LINES\//;"	c	subroutine:POTB
LINES	Fortran/su4dbl.f	/^        COMMON\/LINES\//;"	c	subroutine:THERMLB
LOCAL	LibHR/Geometry/test_geometry_mpi.c	/^#define LOCAL /;"	d	file:
LOGGER_H	Include/logger.h	/^#define LOGGER_H$/;"	d
Ls	Analysis/Mesons/bs_mesons.cpp	/^int Ls=0;$/;"	v
Lt	Analysis/Mesons/bs_mesons.cpp	/^int Lt=0;$/;"	v
M	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
M	Scattering/IOroutines.c	/^double M;$/;"	v
M	Scattering/meson_scattering.c	/^double M;$/;"	v
M	TestProgram/DiracOperator/check_diracoperator_3.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_1.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_2.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_3.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_5.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_6.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_7.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_8.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
M	TestProgram/Inverters/check_inverters_SAP.c	/^void M(spinor_field *out, spinor_field *in){$/;"	f
MACRO	Make/Utils/autosun/Makefile	/^MACRO = -D_${REPR}_ -D_${GAUGE_GROUP}_ -D_PICA_STYLE_ -DNDEBUG$/;"	m
MACROS	HMC/cinfo.c	/^static char MACROS[     153+1] = "-DBC_T_ANTIPERIODIC -DBC_X_PERIODIC -DBC_Y_PERIODIC -DBC_Z_PERIODIC -DUPDATE_EO -DNDEBUG -DIO_FLUSH -DREPR_ADJOINT -DREPR_NAME=@REPR_ADJOINT@ -DGAUGE_SUN";$/;"	v	file:
MACROS	Spectrum/cinfo.c	/^static char MACROS[     153+1] = "-DBC_T_ANTIPERIODIC -DBC_X_PERIODIC -DBC_Y_PERIODIC -DBC_Z_PERIODIC -DUPDATE_EO -DNDEBUG -DIO_FLUSH -DREPR_ADJOINT -DREPR_NAME=@REPR_ADJOINT@ -DGAUGE_SUN";$/;"	v	file:
MAIN	Converter/ChromaUtils/Makefile	/^MAIN := chroma_converter$/;"	m
MAIN_PROGRAM	Converter/ChromaUtils/main.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Converter/converter.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Disconnected/compute_loops.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	GaugeFix/gaugefix_measure.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	GaugeFix/gaugefix_unittest.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	HMC/hmc.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	HMC/hmc_forces.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	ModeNumber/mk_eigvals.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	ModeNumber/mk_modenumber.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	PureGauge/suN.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	RenormalizationFactors/measure_Z_mom.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Reweight/reweight.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Scattering/main_run.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Scattering/meson_scattering.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Scattering/scatter_test.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/measure_formfactor.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/measure_spectrum.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/mk_mesons.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/mk_mesons_with_z2semwall.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/mk_mesons_with_z2semwall_new.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/mk_sfcoupling.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/random_cnfg.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/random_spinor.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	Spectrum/trunc_mesons.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	StaticPotential/mk_polyakov_loops.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	StaticPotential/mk_wilsonloops.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	StaticPotential/tune_HYP_smearing.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Algebra/check_algebra_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Algebra/check_algebra_2.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Deflate/check_deflate.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/check_diracoperator_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/check_diracoperator_2.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/check_diracoperator_3.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/check_diracoperator_4.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/check_diracoperator_5.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/check_diracoperator_6.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/speed_test_diracoperator.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/DiracOperator/speed_test_diracoperator_flt.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Geometry/check_geometry_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_2.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_3.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_4.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_5.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_6.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_7.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_8.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Inverters/check_inverters_SAP.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Propagator/check_propagator.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/PureGauge/check_puregauge_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/PureGauge/check_puregauge_2.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_10.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_2.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_3.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_4.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_5.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_6.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_7.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_8.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/RotatedSF/check_rotatedsf_9.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/SpinorField/check_spinorfield_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/TripletMesons/check_triplets_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/TripletMesons/check_triplets_2.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Update/check_update_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/Utils/check_suNg_op.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/WilsonLoops/check_wilsonloops_1.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/WilsonLoops/check_wilsonloops_2.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/WilsonLoops/check_wilsonloops_3.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	WilsonFlow/WF_measure.c	/^#define MAIN_PROGRAM$/;"	d	file:
MAIN_PROGRAM	WilsonFlow/WF_measure_adaptative.c	/^#define MAIN_PROGRAM$/;"	d	file:
MASK	LibHR/Random/ranlxd.c	/^#define MASK /;"	d	file:
MASK	LibHR/Random/ranlxs.c	/^#define MASK /;"	d	file:
MAX	LibHR/Update/mre.c	/^#define MAX /;"	d	file:
MAXREC	LibHR/Update/remez/Zolotarev/zolotarev.c	/^#define MAXREC /;"	d	file:
MAX_LENGTH	LibHR/IO/read_action.c	/^#define MAX_LENGTH /;"	d	file:
MAX_NLEVELS	Analysis/Mesons/bs_ctrl.h	/^#define MAX_NLEVELS /;"	d
MAX_PREC	LibHR/Inverters/cg_mshift_flt.c	/^#define MAX_PREC /;"	d	file:
MAX_PREC	LibHR/Inverters/cg_mshift_flt.c	/^#undef MAX_PREC$/;"	d	file:
MAX_ROTATE	LibHR/Inverters/eva.c	/^#define MAX_ROTATE /;"	d	file:
MAX_ROTATE	TestProgram/SpinorField/check_spinorfield_1.c	/^#define MAX_ROTATE /;"	d	file:
MAX_SECTIONS	LibHR/IO/read_action.c	/^#define MAX_SECTIONS /;"	d	file:
MAX_SWEEP	LibHR/Inverters/jacobi.c	/^#define MAX_SWEEP /;"	d	file:
MAX_VALUES	LibHR/IO/read_action.c	/^#define MAX_VALUES /;"	d	file:
MBLINE	Fortran/su4dbl.f	/^        SUBROUTINE MBLINE$/;"	s
MBPLAN	Fortran/su4dbl.f	/^        SUBROUTINE MBPLAN$/;"	s
MD_prec	Include/update.h	/^  double MD_prec; \/* molecular dynamics precision *\/$/;"	m	struct:_monomial_data
MEASURE	Fortran/su4dbl.f	/^        SUBROUTINE MEASURE(/;"	s
MEASURE_FORCE0	Include/global.h	/^#define MEASURE_FORCE0$/;"	d
MEASURE_FORCEHMC	Include/global.h	/^#define MEASURE_FORCEHMC$/;"	d
MEMORY_H	Include/memory.h	/^#define MEMORY_H$/;"	d
MESON_DEFINITION	LibHR/Observables/mesons.c	/^#define MESON_DEFINITION(/;"	d	file:
MESON_DEFINITION_TWO_IM	LibHR/Observables/mesons.c	/^#define MESON_DEFINITION_TWO_IM(/;"	d	file:
MESON_DEFINITION_TWO_RE	LibHR/Observables/mesons.c	/^#define MESON_DEFINITION_TWO_RE(/;"	d	file:
MESON_OBSERVABLES	Include/meson_observables.h	/^#define MESON_OBSERVABLES$/;"	d
MINRES	LibHR/Inverters/MINRES.c	/^int MINRES(MINRES_par *par, spinor_operator M, spinor_field *in, spinor_field *out, spinor_field *trial){$/;"	f
MINRES_core	LibHR/Inverters/MINRES.c	/^static int MINRES_core(short int *valid, MINRES_par *par, spinor_operator M, spinor_field *in, spinor_field *out, spinor_field *trial){$/;"	f	file:
MINRES_core_flt	LibHR/Inverters/MINRES.c	/^static int MINRES_core_flt(short int *valid, MINRES_par *par, spinor_operator_flt M, spinor_field_flt *in, spinor_field_flt *out, spinor_field_flt *trial){$/;"	f	file:
MINRES_flt	LibHR/Inverters/MINRES.c	/^int MINRES_flt(MINRES_par *par, spinor_operator_flt M, spinor_field_flt *in, spinor_field_flt *out, spinor_field_flt *trial){$/;"	f
MINRES_mshift	LibHR/Inverters/MINRES_mshift.c	/^int MINRES_mshift(mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out){$/;"	f
MINRES_mshift_core	LibHR/Inverters/MINRES_mshift.c	/^static int MINRES_mshift_core(short int *flags,mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out){$/;"	f	file:
MINRES_par	Include/inverters.h	/^} MINRES_par;$/;"	t	typeref:struct:_MINRES_par
MKDIR	Converter/ChromaUtils/Makefile	/^MKDIR=$(TOPDIR)\/Make$/;"	m
MKDIR	Converter/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Disconnected/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Fortran/Makefile	/^MKDIR=$(TOPDIR)\/Make$/;"	m
MKDIR	GaugeFix/Makefile	/^MKDIR=$(TOPDIR)\/Make$/;"	m
MKDIR	HMC/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Include/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Error/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Geometry/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/IO/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Inverters/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Memory/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Observables/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Random/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Statistics/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Update/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	LibHR/Utils/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Make/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Make/Utils/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Make/Utils/autosun/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	ModeNumber/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	PureGauge/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	RenormalizationFactors/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Reweight/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Scattering/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	Spectrum/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	StaticPotential/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Algebra/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Deflate/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/DiracOperator/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Geometry/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Inverters/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Propagator/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/PureGauge/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Random/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/RotatedSF/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/SpinorField/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/TripletMesons/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Update/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/Utils/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	TestProgram/WilsonLoops/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MKDIR	WilsonFlow/Makefile	/^MKDIR = $(TOPDIR)\/Make$/;"	m
MODDIR	Converter/ChromaUtils/Makefile	/^MODDIR := Error$/;"	m
MODDIR	Converter/ChromaUtils/Makefile	/^MODDIR := Geometry$/;"	m
MODDIR	Converter/ChromaUtils/Makefile	/^MODDIR := IO$/;"	m
MODDIR	Converter/ChromaUtils/Makefile	/^MODDIR := Memory$/;"	m
MODDIR	Converter/ChromaUtils/Makefile	/^MODDIR := Observables$/;"	m
MODDIR	Converter/ChromaUtils/Makefile	/^MODDIR := Random$/;"	m
MODDIR	Converter/ChromaUtils/Makefile	/^MODDIR := Utils$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := Converter$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := Error$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := Geometry$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := IO$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := Memory$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := Observables$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := Random$/;"	m
MODDIR	Fortran/Makefile	/^MODDIR := Utils$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := Error$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := GaugeFix$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := Geometry$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := IO$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := Memory$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := Observables$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := Random$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := Update$/;"	m
MODDIR	GaugeFix/Makefile	/^MODDIR := Utils$/;"	m
MODS	Converter/ChromaUtils/Makefile	/^MODS := amalloc field_alloc$/;"	m
MODS	Converter/ChromaUtils/Makefile	/^MODS := archive logger read_input$/;"	m
MODS	Converter/ChromaUtils/Makefile	/^MODS := avr_plaquette$/;"	m
MODS	Converter/ChromaUtils/Makefile	/^MODS := error$/;"	m
MODS	Converter/ChromaUtils/Makefile	/^MODS := gauss ranlxs ranlxd$/;"	m
MODS	Converter/ChromaUtils/Makefile	/^MODS := geometry_init geometry_mpi_eo communications$/;"	m
MODS	Converter/ChromaUtils/Makefile	/^MODS := suN_utils time boundary_conditions$/;"	m
MODS	Fortran/Makefile	/^MODS := amalloc field_alloc$/;"	m
MODS	Fortran/Makefile	/^MODS := archive_eolexi archive_fortran archive_more_mpieo$/;"	m
MODS	Fortran/Makefile	/^MODS := avr_plaquette$/;"	m
MODS	Fortran/Makefile	/^MODS := error$/;"	m
MODS	Fortran/Makefile	/^MODS := geometry_init geometry_mpi_eo communications$/;"	m
MODS	Fortran/Makefile	/^MODS := logger endian archive$/;"	m
MODS	Fortran/Makefile	/^MODS := ranlxd$/;"	m
MODS	Fortran/Makefile	/^MODS := time$/;"	m
MODS	GaugeFix/Makefile	/^MODS := amalloc field_alloc$/;"	m
MODS	GaugeFix/Makefile	/^MODS := archive logger read_input endian$/;"	m
MODS	GaugeFix/Makefile	/^MODS := avr_plaquette$/;"	m
MODS	GaugeFix/Makefile	/^MODS := error$/;"	m
MODS	GaugeFix/Makefile	/^MODS := gaugefix$/;"	m
MODS	GaugeFix/Makefile	/^MODS := gauss random_suNg ranlxs ranlxd random_fields ranz2$/;"	m
MODS	GaugeFix/Makefile	/^MODS := geometry_init geometry_mpi_eo communications process_init$/;"	m
MODS	GaugeFix/Makefile	/^MODS := representation random_su2 copy_gfield$/;"	m
MODS	GaugeFix/Makefile	/^MODS := suN_utils time boundary_conditions single_double_utils diag_hmat det_suNg$/;"	m
MOD_OBJS	Converter/ChromaUtils/Makefile	/^MOD_OBJS := $(MOD_OBJS) $(patsubst %, $(TOPDIR)\/$(MODDIR)\/%.o, $(MODS))$/;"	m
MOD_OBJS	Fortran/Makefile	/^MOD_OBJS := $(MOD_OBJS) $(patsubst %, $(TOPDIR)\/$(MODDIR)\/%.o, $(MODS))$/;"	m
MOD_OBJS	GaugeFix/Makefile	/^MOD_OBJS := $(MOD_OBJS) $(patsubst %, $(TOPDIR)\/$(MODDIR)\/%.o, $(MODS))$/;"	m
MOMENTM	Fortran/su4dbl.f	/^        SUBROUTINE MOMENTM$/;"	s
MOMS	Fortran/su4dbl.f	/^        COMMON\/MOMS\//;"	c	subroutine:MOMENTM
MOMS	Fortran/su4dbl.f	/^        COMMON\/MOMS\//;"	c	subroutine:THERMLB
MOREIO_H	Include/moreio.h	/^#define MOREIO_H$/;"	d
MT_prec	Include/update.h	/^  double MT_prec; \/* metropolis precision *\/$/;"	m	struct:_monomial_data
MU	LibHR/Update/rect_staples.c	/^static int IX,MU,NU;$/;"	v	file:
MULTI_RNDNUM	Fortran/luesher.f	/^      SUBROUTINE MULTI_RNDNUM(/;"	s
MVMcounter	LibHR/Update/Dphi.c	/^static unsigned long int MVMcounter=0;$/;"	v	file:
MVMcounter	LibHR/Update/Dphi_flt.c	/^static unsigned long int MVMcounter=0;$/;"	v	file:
M_PI	LibHR/Random/gauss.c	/^#define M_PI /;"	d	file:
M_PI	TestProgram/TripletMesons/check_triplets_1.c	/^#define M_PI /;"	d	file:
M_PI	WilsonFlow/wilsonflow.c	/^#define M_PI /;"	d	file:
M_flt	TestProgram/Inverters/check_inverters_6.c	/^void M_flt(spinor_field_flt *out, spinor_field_flt *in){$/;"	f
Matrix Vector operations	Doc/data_op.tex	/^double k$/;"	b
Matrix operations	Doc/data_op.tex	/^suN[gf] u$/;"	b
Mee_inv	LibHR/Update/force_hmc_tm.c	/^static void Mee_inv(spinor_field *out, double mass, double mu, spinor_field *in)$/;"	f	file:
MesonT	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	g	file:
ModeNumber	ModeNumber/modenumber.c	/^double ModeNumber(double M2) {$/;"	f
N	Make/Utils/autosun/sun.h	/^	int N;$/;"	m	namespace:group
NAME	LibHR/Observables/mesons.c	/^#define NAME /;"	d	file:
NAME	LibHR/Observables/mesons.c	/^#undef NAME$/;"	d	file:
NCHANNELS	LibHR/Observables/z2semwall.c	/^  #define NCHANNELS /;"	d	file:
NCHANNELS	LibHR/Observables/z2semwall_new.c	/^  #define NCHANNELS /;"	d	file:
NCHANNELSR	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
NCHANNELS_FF	LibHR/Observables/measure_ff.c	/^enum { _g5_ff= 0,_pipig_ff_re,_pipig_ff_im,_pipig_conserved_ff,NCHANNELS_FF };$/;"	e	enum:__anon51	file:
NDEBUG	Include/macro_opt.h	/^#define NDEBUG$/;"	d
NDEBUG	LibHR/Inverters/g5QMR_mshift.c	/^#undef NDEBUG$/;"	d	file:
NDIM	Converter/ChromaUtils/qdp-config.h	/^#define NDIM /;"	d
NEW	Include/update.h	/^   NEW=1,$/;"	e	enum:__anon42
NEXT	Fortran/su4dbl.f	/^        COMMON\/NEXT\//;"	c	subroutine:FFDACT
NEXT	Fortran/su4dbl.f	/^        COMMON\/NEXT\//;"	c	subroutine:SEARCH
NEXT	Fortran/su4dbl.f	/^      COMMON\/NEXT\//;"	c	subroutine:ACTION
NEXT	Fortran/su4dbl.f	/^      COMMON\/NEXT\//;"	c	subroutine:POLYLOOP
NEXT	Fortran/su4dbl.f	/^      COMMON\/NEXT\//;"	c	subroutine:SETUP
NEXT	Fortran/su4dbl.f	/^      COMMON\/NEXT\//;"	c	subroutine:UPDATG
NEXTB	Fortran/su4dbl.f	/^        COMMON\/NEXTB\//;"	c
NEXTB	Fortran/su4dbl.f	/^        COMMON\/NEXTB\//;"	c	subroutine:PLANARB
NEXTB	Fortran/su4dbl.f	/^        COMMON\/NEXTB\//;"	c	subroutine:THERMLB
NEXTB	Fortran/su4dbl.f	/^      COMMON\/NEXTB\//;"	c	subroutine:SETUPB
NF	Include/suN_types.h	/^#define NF /;"	d
NG	Include/suN_types.h	/^#define NG /;"	d
NGAMMA_IND	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
NMAX	ModeNumber/approx_for_modenumber.c	/^#define NMAX /;"	d	file:
NMAX	ModeNumber/modenumber.c	/^#define NMAX /;"	d	file:
NOT_ASSIGNED	LibHR/Geometry/test_geometry_mpi.c	/^#define NOT_ASSIGNED /;"	d	file:
NO_DILUTION	Include/observables.h	/^typedef enum {NO_DILUTION, TIME_DILUTION, TIME_SPIN_DILUTION, EXACT} dilution_mode;$/;"	e	enum:__anon17
NRAN	LibHR/Update/random_su2.c	/^#define NRAN /;"	d	file:
NU	LibHR/Update/rect_staples.c	/^static int IX,MU,NU;$/;"	v	file:
NVEC	LibHR/Update/random_su2.c	/^#define NVEC /;"	d	file:
NXD	TestProgram/Random/testlx.c	/^#define NXD /;"	d	file:
NXS	TestProgram/Random/testlx.c	/^#define NXS /;"	d	file:
N_BORDER	LibHR/Geometry/geometry_mpi_eo.c	/^static int N_BORDER;$/;"	v	file:
Nc	Converter/ChromaUtils/qdp-config.h	/^  int Nc;$/;"	m	struct:__anon5
Notation	Doc/hirep.tex	/^\\begin{document}$/;"	s
Nsource	Scattering/IOroutines.c	/^int Nsource;$/;"	v
Nsource	Scattering/meson_scattering.c	/^int Nsource;$/;"	v
O2MN_multistep	LibHR/Update/integrators.c	/^void O2MN_multistep(suNg_av_field *momenta, double tlen, integrator_par *int_par)$/;"	f
O4MN_multistep	LibHR/Update/integrators.c	/^void O4MN_multistep(suNg_av_field *momenta, double tlen, integrator_par *int_par)$/;"	f
OBJS	LibHR/Update/remez/Makefile	/^OBJS := $(notdir $(OBJS_SRC))$/;"	m
OBJS_SRC	LibHR/Update/remez/Makefile	/^OBJS_SRC = $(SOBJ) $(CCOBJ) $(COBJ)$/;"	m
OBSERVABLES_H	Include/observables.h	/^#define OBSERVABLES_H$/;"	d
OBSERVABLE_LIST	Scattering/main_run.c	/^#define OBSERVABLE_LIST /;"	d	file:
ODD	LibHR/Geometry/test_geometry_mpi.c	/^#define ODD /;"	d	file:
ORIGINAL	LibHR/Geometry/test_geometry_mpi.c	/^#define ORIGINAL /;"	d	file:
OVERSIZE_VOLUME	LibHR/Geometry/geometry_mpi_eo.c	/^static int OVERSIZE_VOLUME;$/;"	v	file:
One End Trick in HiRep	Doc/measure_spectrum.tex	/^\\end{equation}$/;"	b
One end Trick	Doc/measure_spectrum.tex	/^\\ref{eqn:pointcorr}.  We place the source at the time origin so $\\tau = 0$.$/;"	s
Op1	TestProgram/Inverters/check_inverters_4.c	/^static void Op1(spinor_field *out,spinor_field *in)$/;"	f	file:
Operations on simple data types	Doc/data_op.tex	/^Every data type has a corresponding single precision data type the name of which is obtained adding the suffix ``\\_flt''. $/;"	s
Output	Doc/disconnected.tex	/^\\end{itemize}$/;"	s
P	ModeNumber/approx_for_modenumber.c	/^static double P(int n, double *c, double y, double epsilon) {$/;"	f	file:
P99_PROTECT	LibHR/Update/force_hmc_ff.c	/^#define P99_PROTECT(/;"	d	file:
PARAM	Fortran/su4dbl.f	/^        COMMON\/PARAM\//;"	c
PBLOCK	Fortran/su4dbl.f	/^        COMMON\/PBLOCK\//;"	c	subroutine:MBLINE
PBLOCK	Fortran/su4dbl.f	/^        COMMON\/PBLOCK\//;"	c	subroutine:POTB
PBLOCK	Fortran/su4dbl.f	/^        COMMON\/PBLOCK\//;"	c	subroutine:TODISK
PCAC_CHANNEL	LibHR/Observables/z2semwall.c	/^  #define PCAC_CHANNEL$/;"	d	file:
PCAC_CHANNEL	LibHR/Observables/z2semwall_new.c	/^  #define PCAC_CHANNEL$/;"	d	file:
PHI_FLAVORS	Make/Utils/autosun/adjoint.h	/^	const int PHI_FLAVORS = 2;$/;"	m	namespace:representation
PHI_FLAVORS	Make/Utils/autosun/antisymmetric.h	/^	const int PHI_FLAVORS = 4;$/;"	m	namespace:representation
PHI_FLAVORS	Make/Utils/autosun/fundamental.h	/^	const int PHI_FLAVORS = 4;$/;"	m	namespace:representation
PHI_FLAVORS	Make/Utils/autosun/symmetric.h	/^	const int PHI_FLAVORS = 4;$/;"	m	namespace:representation
PI	Disconnected/compute_loops.c	/^#define PI /;"	d	file:
PI	Disconnected/loop_tools.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/calc_prop.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/calc_prop_ff.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/measure_baryons.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/measure_ff.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/measure_mesons.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/measure_mesons_ff.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/measure_renormalization.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/measure_scattering.c	/^#define PI /;"	d	file:
PI	LibHR/Observables/sources.c	/^#define PI /;"	d	file:
PI	LibHR/Update/random_su2.c	/^#define PI /;"	d	file:
PI	LibHR/Update/update_hb.c	/^#define PI /;"	d	file:
PI	LibHR/Utils/background_field.c	/^#define PI /;"	d	file:
PI	LibHR/Utils/boundary_conditions.c	/^#define PI /;"	d	file:
PI	RenormalizationFactors/measure_Z_mom.c	/^#define PI /;"	d	file:
PI	Scattering/main_run.c	/^#define PI /;"	d	file:
PI	Scattering/meson_scattering.c	/^#define PI /;"	d	file:
PI	Scattering/scattering_tools.c	/^#define PI /;"	d	file:
PI_HALF	LibHR/Update/random_su2.c	/^#define PI_HALF /;"	d	file:
PLAN	Fortran/su4dbl.f	/^        COMMON\/PLAN\//;"	c	subroutine:PLANARB
PLAN	Fortran/su4dbl.f	/^        COMMON\/PLAN\//;"	c	subroutine:PLNCORB
PLANARB	Fortran/su4dbl.f	/^        SUBROUTINE PLANARB(/;"	s
PLAQ_WEIGHTS	Include/check_options.h	/^# define PLAQ_WEIGHTS$/;"	d
PLAQ_WEIGHTS	Include/check_options.h	/^# undef PLAQ_WEIGHTS$/;"	d
PLNCORB	Fortran/su4dbl.f	/^        SUBROUTINE PLNCORB(/;"	s
POLYLOOP	Fortran/su4dbl.f	/^      SUBROUTINE POLYLOOP(/;"	s
POTB	Fortran/su4dbl.f	/^        SUBROUTINE POTB(/;"	s
PRINT_CORR	LibHR/Observables/z2semwall.c	/^#define PRINT_CORR(/;"	d	file:
PRINT_CORR	LibHR/Observables/z2semwall_new.c	/^#define PRINT_CORR(/;"	d	file:
PROGBAR_H	Analysis/Mesons/progbar.h	/^#define PROGBAR_H$/;"	d
PROJECT_INTERVAL	LibHR/Update/update_hb.c	/^#define PROJECT_INTERVAL /;"	d	file:
PROPAGATOR_H	Include/propagator.h	/^#define PROPAGATOR_H$/;"	d
P_AVE_COR	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_AVE_EFF	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_AVE_FIT	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_COR_B1	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_COR_B2	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_EFF_B1	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_EFF_B2	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_FIT	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
P_READ	Analysis/Mesons/bs_ctrl.h	/^enum { P_READ=0, P_COR_B1, P_EFF_B1, P_COR_B2, P_EFF_B2, P_FIT, P_AVE_COR, P_AVE_EFF, P_AVE_FIT };$/;"	e	enum:__anon1
Pi	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
Pi2	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
Polyakov	LibHR/Observables/wilsonloops.c	/^static suNg* Polyakov;$/;"	v	file:
Propagatore all to all	Doc/mesons.tex	/^\\end{eqnarray}$/;"	b
PureGauge	Include/update.h	/^  PureGauge,$/;"	e	enum:__anon41
Q	Spectrum/measure_spectrum.c	/^	double Q;$/;"	m	struct:_input_mesons	file:
QCOOL	Fortran/su4dbl.f	/^        SUBROUTINE QCOOL$/;"	s
QDIR	Converter/ChromaUtils/Makefile	/^QDIR=\/opt\/usqcd\/single\/$/;"	m
QDPTOP	Converter/ChromaUtils/Makefile	/^QDPTOP=${QDIR}\/qdp$/;"	m
QDP_CONFIG_A	Converter/ChromaUtils/qdp-config.h	/^#define QDP_CONFIG_A$/;"	d
QDP_Nc	Converter/ChromaUtils/qdp-config.h	/^#define QDP_Nc /;"	d
QDP_Precision	Converter/ChromaUtils/qdp-config.h	/^#define QDP_Precision /;"	d
QIOTOP	Converter/ChromaUtils/Makefile	/^QIOTOP=${QDIR}\/qio$/;"	m
QLATOP	Converter/ChromaUtils/Makefile	/^QLATOP=${QDIR}\/qla$/;"	m
QMPTOP	Converter/ChromaUtils/Makefile	/^QMPTOP=${QDIR}\/qmp$/;"	m
QMR2_sinks	LibHR/Observables/trunc_hairpin.c	/^static spinor_field *QMR2_sinks, *QMR2_sinks_trunc;$/;"	v	file:
QMR2_sinks_trunc	LibHR/Observables/trunc_hairpin.c	/^static spinor_field *QMR2_sinks, *QMR2_sinks_trunc;$/;"	v	file:
QMR2_source	LibHR/Observables/trunc_hairpin.c	/^static spinor_field *QMR2_source;$/;"	v	file:
QMR_INVERTER	LibHR/Observables/trunc_hairpin.c	/^#define QMR_INVERTER$/;"	d	file:
QMR_init	LibHR/Observables/trunc_hairpin.c	/^static void QMR_init() {$/;"	f	file:
QMR_noise	LibHR/Observables/calc_prop.c	/^static spinor_field *QMR_noise;$/;"	v	file:
QMR_noise	LibHR/Observables/z2semwall.c	/^static spinor_field *QMR_noise;$/;"	v	file:
QMR_noise	LibHR/Observables/z2semwall_new.c	/^static spinor_field *QMR_noise;$/;"	v	file:
QMR_par	LibHR/Observables/calc_prop.c	/^static mshift_par QMR_par;$/;"	v	file:
QMR_par	LibHR/Observables/calc_prop_ff.c	/^static mshift_par QMR_par;$/;"	v	file:
QMR_par	LibHR/Observables/z2semwall.c	/^static mshift_par QMR_par;$/;"	v	file:
QMR_par	LibHR/Observables/z2semwall_new.c	/^static mshift_par QMR_par;$/;"	v	file:
QMR_resdn	LibHR/Observables/calc_prop.c	/^static spinor_field *QMR_resdn;$/;"	v	file:
QMR_resdn	LibHR/Observables/z2semwall.c	/^static spinor_field *QMR_resdn;$/;"	v	file:
QMR_resdn	LibHR/Observables/z2semwall_new.c	/^static spinor_field *QMR_resdn;$/;"	v	file:
QOPTOP	Converter/ChromaUtils/Makefile	/^QOPTOP=${QDIR}\/qop$/;"	m
QUENCHED_CNFG	Converter/converter.c	/^enum {QUENCHED_CNFG, DYNAMICAL_CNFG, UNKNOWN_CNFG};$/;"	e	enum:__anon6	file:
QUENCHED_CNFG	GaugeFix/gaugefix_measure.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon7	file:
QUENCHED_CNFG	GaugeFix/gaugefix_unittest.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon9	file:
QUENCHED_CNFG	HMC/hmc_forces.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon11	file:
QUENCHED_CNFG	ModeNumber/mk_eigvals.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon70	file:
QUENCHED_CNFG	ModeNumber/mk_modenumber.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon72	file:
QUENCHED_CNFG	RenormalizationFactors/measure_Z_mom.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon74	file:
QUENCHED_CNFG	Scattering/IOroutines.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon77	file:
QUENCHED_CNFG	Scattering/meson_scattering.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon79	file:
QUENCHED_CNFG	Spectrum/measure_formfactor.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon82	file:
QUENCHED_CNFG	Spectrum/measure_spectrum.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon84	file:
QUENCHED_CNFG	Spectrum/mk_mesons.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon86	file:
QUENCHED_CNFG	Spectrum/mk_mesons_with_z2semwall.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon88	file:
QUENCHED_CNFG	Spectrum/mk_mesons_with_z2semwall_new.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon90	file:
QUENCHED_CNFG	Spectrum/mk_sfcoupling.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon92	file:
QUENCHED_CNFG	Spectrum/trunc_mesons.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon94	file:
QUENCHED_CNFG	StaticPotential/mk_polyakov_loops.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon96	file:
QUENCHED_CNFG	StaticPotential/mk_wilsonloops.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon98	file:
QUENCHED_CNFG	StaticPotential/tune_HYP_smearing.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon100	file:
QUENCHED_CNFG	TestProgram/Deflate/check_deflate.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon103	file:
QUENCHED_CNFG	TestProgram/Propagator/check_propagator.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon106	file:
QUENCHED_CNFG	WilsonFlow/WF_measure.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon112	file:
QUENCHED_CNFG	WilsonFlow/WF_measure_adaptative.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon114	file:
Qhat_eopre	LibHR/Update/Dphi.c	/^void Qhat_eopre(double m0, double mu, spinor_field* out, spinor_field *in){$/;"	f
Qhat_eopre_sq	LibHR/Update/Dphi.c	/^void Qhat_eopre_sq(double m0, double mu, spinor_field *out, spinor_field *in) {$/;"	f
QpQm_tm	LibHR/Update/D_update.c	/^void QpQm_tm(spinor_field *out, spinor_field *in){$/;"	f
QpQm_tm_alt	LibHR/Update/D_update.c	/^void QpQm_tm_alt(spinor_field *out, spinor_field *in){$/;"	f
Qtm_m	LibHR/Update/D_update.c	/^void Qtm_m(spinor_field *out, spinor_field *in){$/;"	f
Qtm_m_alt	LibHR/Update/D_update.c	/^void Qtm_m_alt(spinor_field *out, spinor_field *in){$/;"	f
Qtm_p	LibHR/Update/D_update.c	/^void Qtm_p(spinor_field *out, spinor_field *in){$/;"	f
Qtm_p_alt	LibHR/Update/D_update.c	/^void Qtm_p_alt(spinor_field *out, spinor_field *in){$/;"	f
RANDOM_H	Include/random.h	/^#define RANDOM_H$/;"	d
RANLUX_H	Include/ranlux.h	/^#define RANLUX_H$/;"	d
RANLXD_C	LibHR/Random/ranlxd.c	/^#define RANLXD_C$/;"	d	file:
RANLXS_C	LibHR/Random/ranlxs.c	/^#define RANLXS_C$/;"	d	file:
RANLXS_H	Analysis/Mesons/ranlxs.h	/^#define RANLXS_H$/;"	d
RATIONAL_FUNCTIONS_H	Include/rational_functions.h	/^#define RATIONAL_FUNCTIONS_H$/;"	d
RBORDER	LibHR/Geometry/test_geometry_mpi.c	/^#define RBORDER /;"	d	file:
RBUFFER	LibHR/Geometry/test_geometry_mpi.c	/^#define RBUFFER /;"	d	file:
RENORM	Fortran/su4dbl.f	/^        SUBROUTINE RENORM$/;"	s
RENORMBS	Fortran/su4dbl.f	/^        SUBROUTINE RENORMBS(/;"	s
REPORTLVL	LibHR/Geometry/geometry_mpi_eo.c	/^#define REPORTLVL /;"	d	file:
REPRESENTATION_H	Include/representation.h	/^#define REPRESENTATION_H$/;"	d
REPR_ADJOINT	Include/macro_opt.h	/^#define REPR_ADJOINT$/;"	d
REPR_NAME	Include/macro_opt.h	/^#define REPR_NAME /;"	d
REUNIT	GaugeFix/gaugefix.c	/^#define REUNIT /;"	d	file:
REWEIGHT_MASS	Reweight/reweight_mass.c	/^#define REWEIGHT_MASS$/;"	d	file:
REWEIGHT_THETA	Reweight/reweight_theta.c	/^#define REWEIGHT_THETA$/;"	d	file:
REWERIGHT_H	Reweight/reweight.h	/^#define REWERIGHT_H$/;"	d
RHMC	Doc/action.tex	/^\\newpage$/;"	b
RHMC	Include/update.h	/^  RHMC,$/;"	e	enum:__anon41
RHMC formulation	Doc/hirep.tex	/^distribution and keeping then fixed during the above HMC configuration generation for the remaining bosonic fields $\\phi$.$/;"	s
R_ACTIVE	Analysis/Mesons/bs_ctrl.h	/^enum { R_ACTIVE=0 };$/;"	e	enum:__anon3
Representations	Doc/hirep.tex	/^\\section{Conventions used in the code}$/;"	b
Rho	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
Rho2	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
SAFE_MOD_H	LibHR/Geometry/safe_mod.h	/^#define SAFE_MOD_H$/;"	d
SAFE_MOD_H	TestProgram/DiracOperator/check_diracoperator_2.c	/^#define SAFE_MOD_H$/;"	d	file:
SAP_prec	LibHR/Inverters/SAP_precondition.c	/^void SAP_prec(int nu, inverter_ptr inv, mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out)$/;"	f
SCATTERING_H	Include/scattering.h	/^#define SCATTERING_H$/;"	d
SEARCH	Fortran/su4dbl.f	/^        SUBROUTINE SEARCH$/;"	s
SETUP	Fortran/su4dbl.f	/^      SUBROUTINE SETUP$/;"	s
SETUPB	Fortran/su4dbl.f	/^      SUBROUTINE SETUPB$/;"	s
SF_BCs	Include/utils.h	/^  int SF_BCs;$/;"	m	struct:__anon43
SF_PCAC_wall_mass	LibHR/Observables/sf_pcac.c	/^void SF_PCAC_wall_mass(double mass, double acc )$/;"	f
SF_action	LibHR/Observables/sf_action.c	/^double SF_action(double beta)$/;"	f
SF_ct	Include/update.h	/^  double SF_ct;$/;"	m	struct:_ghmc_par
SF_ct	Spectrum/mk_sfcoupling.c	/^  double SF_ct;$/;"	m	struct:_input_bcpar	file:
SF_ds	Include/update.h	/^  double SF_ds;$/;"	m	struct:_ghmc_par
SF_ds	Spectrum/mk_sfcoupling.c	/^  double SF_ds;$/;"	m	struct:_input_bcpar	file:
SF_quark_propagator	LibHR/Observables/sf_pcac.c	/^void SF_quark_propagator(spinor_field *in, double mass, spinor_field *out, double acc) {$/;"	f
SF_sign	Include/update.h	/^  int SF_sign;$/;"	m	struct:_ghmc_par
SF_var	WilsonFlow/WF_measure.c	/^input_SF SF_var = init_input_SF(SF_var);$/;"	v
SF_var	WilsonFlow/WF_measure_adaptative.c	/^input_SF SF_var = init_input_SF(SF_var);$/;"	v
SF_zf	Include/update.h	/^  double SF_zf;$/;"	m	struct:_ghmc_par
SINGLE_TRACE_DEBUG	LibHR/Observables/mesons.c	/^#define SINGLE_TRACE_DEBUG(/;"	d	file:
SMEAR1	Fortran/su4dbl.f	/^        SUBROUTINE SMEAR1(/;"	s
SOURCE_LIST_Q	Scattering/main_run.c	/^#define SOURCE_LIST_Q /;"	d	file:
SOURCE_LIST_W	Scattering/main_run.c	/^#define SOURCE_LIST_W /;"	d	file:
SPECTRUM_H	Include/spectrum.h	/^#define SPECTRUM_H$/;"	d
SPINOR_FIELD_H	Include/spinor_field.h	/^#define SPINOR_FIELD_H$/;"	d
SPIN_2D_INDEX	Include/observables.h	/^#define SPIN_2D_INDEX(/;"	d
SPIN_MATRIX_H	Include/spin_matrix.h	/^#define SPIN_MATRIX_H$/;"	d
SRCS	LibHR/Error/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Geometry/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/IO/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Inverters/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Memory/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Observables/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Random/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Statistics/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Update/Makefile	/^SRCS = $(wildcard *.c)$/;"	m
SRCS	LibHR/Utils/Makefile	/^SRCS = $(wildcard *.c) suN_exp.c$/;"	m
ST	LibHR/Utils/boundary_conditions.c	/^#define ST /;"	d	file:
STARTF	Fortran/su4dbl.f	/^        SUBROUTINE STARTF$/;"	s
STD_MEM_TYPE	Include/global.h	/^#define STD_MEM_TYPE /;"	d
STEP	LibHR/Random/ranlxd.c	/^#define STEP(/;"	d	file:
STEP	LibHR/Random/ranlxs.c	/^#define STEP(/;"	d	file:
STRING_T	Include/input_par.h	/^  STRING_T$/;"	e	enum:_datatype_t
SUBDIRS	LibHR/Makefile	/^SUBDIRS = $(shell find * -maxdepth 0 -type d)$/;"	m
SUBDIRS	Make/Makefile	/^SUBDIRS := Utils$/;"	m
SUBDIRS	Make/Utils/Makefile	/^SUBDIRS := autosun$/;"	m
SUBDIRS	Makefile	/^SUBDIRS := $(filter-out $(EXCLUDEDIR), $(SUBDIRS))$/;"	m
SUBDIRS	Makefile	/^SUBDIRS := $(shell find * -maxdepth 0 -type d)$/;"	m
SUBDIRS	TestProgram/Makefile	/^SUBDIRS := $(filter-out $(EXCLUDEDIR), $(SUBDIRS))$/;"	m
SUBDIRS	TestProgram/Makefile	/^SUBDIRS := $(shell find * -maxdepth 0 -type d)$/;"	m
SUBGRB	Fortran/su4dbl.f	/^      SUBROUTINE SUBGRB(/;"	s
SUBGRH	Fortran/su4dbl.f	/^      SUBROUTINE SUBGRH(/;"	s
SUM_MAX	LibHR/Update/remez/alg_remez.h	/^#define SUM_MAX /;"	d
SUN_H	Include/suN.h	/^#define SUN_H$/;"	d
SUN_REPR_FUNC_H	Include/suN_repr_func.h	/^#define SUN_REPR_FUNC_H$/;"	d
SUN_TYPES_H	Include/suN_types.h	/^#define SUN_TYPES_H$/;"	d
SUN_UTILS_H	PureGauge/suN_utils.h	/^#define SUN_UTILS_H$/;"	d
Schema di implementazione	Doc/mesons.tex	/^\\end{eqnarray}$/;"	b
Simple data types	Doc/data_op.tex	/^\\begin{document}$/;"	s
Singlet two points functions	Doc/disconnected.tex	/^\\end{table}$/;"	s
Spinor operations	Doc/data_op.tex	/^suN[gf] u,v$/;"	b
T	Converter/ChromaUtils/qdp-config.h	/^  int T;$/;"	m	struct:__anon5
T	Make/Utils/autosun/sun.h	/^	smatrix* T;$/;"	m	namespace:group
TDIR	LibHR/Geometry/geometry_mpi_eo.c	/^#define TDIR /;"	d	file:
THERMLB	Fortran/su4dbl.f	/^        SUBROUTINE THERMLB(/;"	s
TI	LibHR/Utils/suN_exp.c	/^#define TI(/;"	d	file:
TIME_DILUTION	Include/observables.h	/^typedef enum {NO_DILUTION, TIME_DILUTION, TIME_SPIN_DILUTION, EXACT} dilution_mode;$/;"	e	enum:__anon17
TIME_SPIN_DILUTION	Include/observables.h	/^typedef enum {NO_DILUTION, TIME_DILUTION, TIME_SPIN_DILUTION, EXACT} dilution_mode;$/;"	e	enum:__anon17
TM	Doc/action.tex	/^\\newpage$/;"	b
TM	Include/update.h	/^  TM,$/;"	e	enum:__anon41
TM Alternative	Doc/action.tex	/^\\newpage$/;"	b
TM Hasenbusch	Doc/action.tex	/^\\newpage$/;"	b
TM Hasenbusch Alternative	Doc/action.tex	/^\\newpage$/;"	b
TMP_OBSERVABLE_LIST	Scattering/main_run.c	/^#define TMP_OBSERVABLE_LIST /;"	d	file:
TM_alt	Include/update.h	/^  TM_alt,$/;"	e	enum:__anon41
TODISK	Fortran/su4dbl.f	/^        SUBROUTINE TODISK$/;"	s
TOPDIR	Converter/ChromaUtils/Makefile	/^TOPDIR = ..\/..\/$/;"	m
TOPDIR	Converter/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	Disconnected/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	Fortran/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	GaugeFix/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	HMC/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	Include/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	LibHR/Error/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Geometry/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/IO/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Inverters/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	LibHR/Memory/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Observables/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Random/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Statistics/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Update/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	LibHR/Utils/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	Make/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	Make/Utils/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	Make/Utils/autosun/Makefile	/^TOPDIR = ..\/..\/..$/;"	m
TOPDIR	Makefile	/^TOPDIR = .$/;"	m
TOPDIR	ModeNumber/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	PureGauge/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	RenormalizationFactors/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	Reweight/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	Scattering/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	Spectrum/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	StaticPotential/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	TestProgram/Algebra/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/Deflate/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/DiracOperator/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/Geometry/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/Inverters/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/Makefile	/^TOPDIR = ..$/;"	m
TOPDIR	TestProgram/Propagator/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/PureGauge/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/Random/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/RotatedSF/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/SpinorField/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/TripletMesons/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/Update/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/Utils/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	TestProgram/WilsonLoops/Makefile	/^TOPDIR = ..\/..$/;"	m
TOPDIR	WilsonFlow/Makefile	/^TOPDIR = ..$/;"	m
TOTAL_VOLUME	LibHR/Geometry/geometry_mpi_eo.c	/^static int TOTAL_VOLUME;$/;"	v	file:
TRUNCATION	LibHR/Observables/trunc_hairpin.c	/^enum {INVERSION, TRUNCATION, CORRECTION};$/;"	e	enum:__anon53	file:
TRVMX	Fortran/su4dbl.f	/^        SUBROUTINE TRVMX(/;"	s
TWO_PI	LibHR/Update/random_su2.c	/^#define TWO_PI /;"	d	file:
TYPE	LibHR/Update/mre.c	/^#define TYPE /;"	d	file:
TYPE	Make/Utils/autosun/adjoint.h	/^	typedef FLOATING TYPE;$/;"	t	namespace:representation
TYPE	Make/Utils/autosun/antisymmetric.h	/^	typedef complex TYPE;$/;"	t	namespace:representation
TYPE	Make/Utils/autosun/fundamental.h	/^	typedef complex TYPE;$/;"	t	namespace:representation
TYPE	Make/Utils/autosun/symmetric.h	/^	typedef complex TYPE;$/;"	t	namespace:representation
The Dirac operator	Doc/hirep.tex	/^\\end{equation}$/;"	s
The tree level Symanzik action	Doc/hirep.tex	/^\\end{equation}$/;"	s
Time dilution	Doc/mesons.tex	/^McNeile\\&Michael utilizzano questo trucco solo per il calcolo del diagramma \\textit{hairpin}. C'\\`{e} da chiedersi se vale la pena di generalizzarlo anche alla parte di isotripletto, in alternativa al propagatore point-to-all. Per ora questo non sar\\`{a} fatto.$/;"	b
Tnorm	Make/Utils/autosun/sun.h	/^	FLOATING Tnorm;$/;"	m	namespace:group
Tr	TestProgram/Algebra/check_algebra_1.c	/^static float Tr=(float)(NG+2)\/2;$/;"	v	file:
Tr	TestProgram/Algebra/check_algebra_1.c	/^static float Tr=(float)(NG-2)\/2;$/;"	v	file:
Tr	TestProgram/Algebra/check_algebra_1.c	/^static float Tr=(float)NG;$/;"	v	file:
Tr	TestProgram/Algebra/check_algebra_1.c	/^static float Tr=0.5;$/;"	v	file:
Twisted mass shift	Doc/hirep.tex	/^\\end{eqnarray}$/;"	b
Twisted mass shift determinant ratio eo case	Doc/hirep.tex	/^\\gamma_5 M_{\\rm{oe}} \\gamma_5$.$/;"	b
Twisted mass shift eo case	Doc/hirep.tex	/^proportional to $\\mu_2^2$.$/;"	b
Twisted mass shift twisting the eo Wilson Dirac operator	Doc/hirep.tex	/^\\end{eqnarray}$/;"	b
Two point functions	Doc/hirep.tex	/^\\end{equation}$/;"	s
U11	Fortran/su4dbl.f	/^        COMPLEX U11$/;"	v
U11	Fortran/su4dbl.f	/^        COMPLEX U11,/;"	v
UB11	Fortran/su4dbl.f	/^        COMPLEX U11,UB11,/;"	v
UC11	Fortran/su4dbl.f	/^        COMPLEX U11,UB11,A11,B11,C11,UC11$/;"	v
UNKNOWN_CNFG	Converter/converter.c	/^enum {QUENCHED_CNFG, DYNAMICAL_CNFG, UNKNOWN_CNFG};$/;"	e	enum:__anon6	file:
UNKNOWN_CNFG	GaugeFix/gaugefix_measure.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon7	file:
UNKNOWN_CNFG	GaugeFix/gaugefix_unittest.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon9	file:
UNKNOWN_CNFG	HMC/hmc_forces.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon11	file:
UNKNOWN_CNFG	ModeNumber/mk_eigvals.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon70	file:
UNKNOWN_CNFG	ModeNumber/mk_modenumber.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon72	file:
UNKNOWN_CNFG	RenormalizationFactors/measure_Z_mom.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon74	file:
UNKNOWN_CNFG	Scattering/IOroutines.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon77	file:
UNKNOWN_CNFG	Scattering/meson_scattering.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon79	file:
UNKNOWN_CNFG	Spectrum/measure_formfactor.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon82	file:
UNKNOWN_CNFG	Spectrum/measure_spectrum.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon84	file:
UNKNOWN_CNFG	Spectrum/mk_mesons.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon86	file:
UNKNOWN_CNFG	Spectrum/mk_mesons_with_z2semwall.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon88	file:
UNKNOWN_CNFG	Spectrum/mk_mesons_with_z2semwall_new.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon90	file:
UNKNOWN_CNFG	Spectrum/mk_sfcoupling.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon92	file:
UNKNOWN_CNFG	Spectrum/trunc_mesons.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon94	file:
UNKNOWN_CNFG	StaticPotential/mk_polyakov_loops.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon96	file:
UNKNOWN_CNFG	StaticPotential/mk_wilsonloops.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon98	file:
UNKNOWN_CNFG	StaticPotential/tune_HYP_smearing.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon100	file:
UNKNOWN_CNFG	TestProgram/Deflate/check_deflate.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon103	file:
UNKNOWN_CNFG	TestProgram/Propagator/check_propagator.c	/^enum { UNKNOWN_CNFG, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon106	file:
UNKNOWN_CNFG	WilsonFlow/WF_measure.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon112	file:
UNKNOWN_CNFG	WilsonFlow/WF_measure_adaptative.c	/^enum { UNKNOWN_CNFG=0, DYNAMICAL_CNFG, QUENCHED_CNFG };$/;"	e	enum:__anon114	file:
UNSIGNED_T	Include/input_par.h	/^  UNSIGNED_T,$/;"	e	enum:_datatype_t
UPDATE_EO	Include/macro_opt.h	/^#define UPDATE_EO$/;"	d
UPDATE_H	Include/update.h	/^#define UPDATE_H$/;"	d
UPDATG	Fortran/su4dbl.f	/^      SUBROUTINE UPDATG(/;"	s
UTILS_H	Include/utils.h	/^#define UTILS_H$/;"	d
VMX	Fortran/su4dbl.f	/^        SUBROUTINE VMX(/;"	s
Vector operations label vop	Doc/data_op.tex	/^The following linear algebra operations are defined as C preprocessor macros and can act on both double and single precision data types.$/;"	b
Vprime	WilsonFlow/wilsonflow.c	/^static suNg_field* Vprime=NULL;$/;"	v	file:
WF_E	WilsonFlow/wilsonflow.c	/^double WF_E(suNg_field* V) {$/;"	f
WF_E_T	WilsonFlow/wilsonflow.c	/^void WF_E_T(double* E, suNg_field* V) {$/;"	f
WF_Esym	WilsonFlow/wilsonflow.c	/^double WF_Esym(suNg_field* V) {$/;"	f
WF_Esym_T	WilsonFlow/wilsonflow.c	/^void WF_Esym_T(double* E, suNg_field* V) {$/;"	f
WF_Exp	WilsonFlow/wilsonflow.c	/^static void WF_Exp(suNg *u, suNg *X) {$/;"	f	file:
WF_Exp_check	WilsonFlow/wilsonflow.c	/^static void WF_Exp_check(suNg *u, suNg *X) {$/;"	f	file:
WF_clover_F	WilsonFlow/wilsonflow.c	/^static void WF_clover_F(suNg_algebra_vector *F, suNg_field* V, int ix, int mu, int nu) {$/;"	f	file:
WF_free	WilsonFlow/wilsonflow.c	/^void WF_free() {$/;"	f
WF_initialize	WilsonFlow/wilsonflow.c	/^void WF_initialize() {$/;"	f
WF_measure_OBJS	WilsonFlow/Makefile	/^WF_measure_OBJS = wilsonflow.o$/;"	m
WF_measure_adaptative_OBJS	WilsonFlow/Makefile	/^WF_measure_adaptative_OBJS = wilsonflow.o$/;"	m
WF_plaq	WilsonFlow/wilsonflow.c	/^static void WF_plaq(double *ret,suNg_field* V,int ix,int mu,int nu)$/;"	f	file:
WF_topo	WilsonFlow/wilsonflow.c	/^double WF_topo(suNg_field* V) {$/;"	f
WF_var	WilsonFlow/WF_measure.c	/^input_WF WF_var = init_input_WF(WF_var);$/;"	v
WF_var	WilsonFlow/WF_measure_adaptative.c	/^input_WF WF_var = init_input_WF(WF_var);$/;"	v
WILSONFLOW_H	Include/wilsonflow.h	/^#define WILSONFLOW_H$/;"	d
WL_3Dpath	LibHR/Observables/wilsonloops.c	/^static void WL_3Dpath(int c[3], int* path) {$/;"	f	file:
WL_Hamiltonian_gauge	LibHR/Observables/wilsonloops.c	/^void WL_Hamiltonian_gauge(suNg_field* out, suNg_field* in) {$/;"	f
WL_broadcast_polyakov	LibHR/Observables/wilsonloops.c	/^void WL_broadcast_polyakov(suNg* poly, suNg_field* gf) {$/;"	f
WL_correlators	LibHR/Observables/wilsonloops.c	/^void WL_correlators(double** ret, const suNg_field* gf, const suNg* poly, const int nsteps, const int* path, const int length, const int perm[3], int sign[3]) {$/;"	f
WL_free	LibHR/Observables/wilsonloops.c	/^void WL_free() {$/;"	f
WL_init	LibHR/Observables/wilsonloops.c	/^static int WL_init=(1==0);$/;"	v	file:
WL_initialize	LibHR/Observables/wilsonloops.c	/^void WL_initialize() {$/;"	f
WL_load_path	LibHR/Observables/wilsonloops.c	/^void WL_load_path(int c[3], int nsteps) {$/;"	f
WL_max_nsteps	LibHR/Observables/wilsonloops.c	/^int WL_max_nsteps=0;$/;"	v
WL_npaths	LibHR/Observables/wilsonloops.c	/^int WL_npaths=0;$/;"	v
WL_parallel_transport	LibHR/Observables/wilsonloops.c	/^static void WL_parallel_transport(suNg* ret, const suNg_field* gf, int x, const int* path, const int length, const int perm[3], const int sign[3]) {$/;"	f	file:
WL_path	LibHR/Observables/wilsonloops.c	/^} WL_path[256];$/;"	v	typeref:struct:__anon54
WL_var	StaticPotential/mk_wilsonloops.c	/^input_WL WL_var = init_input_WL(WL_var);$/;"	v
WL_wilsonloops	LibHR/Observables/wilsonloops.c	/^void WL_wilsonloops(double HYP_weight[3]) {$/;"	f
Wilson mass shift	Doc/hirep.tex	/^This can be combined with even-odd preconditionning.$/;"	b
Wilson mass shift eo case	Doc/hirep.tex	/^Which matches one comment in the the {\\verb force_hmc.c } file.$/;"	b
WilsonFlow1	WilsonFlow/wilsonflow.c	/^void WilsonFlow1(suNg_field* V, const double epsilon) {$/;"	f
WilsonFlow3	WilsonFlow/wilsonflow.c	/^void WilsonFlow3(suNg_field* V, const double epsilon) {$/;"	f
WilsonFlow3_adaptative	WilsonFlow/wilsonflow.c	/^double WilsonFlow3_adaptative(suNg_field* V, double epsilon,double delta) {$/;"	f
X	Converter/ChromaUtils/qdp-config.h	/^  int X;$/;"	m	struct:__anon5
X	Scattering/main_run.c	/^#define X(/;"	d	file:
X	Scattering/main_run.c	/^#undef X$/;"	d	file:
XA	LibHR/Utils/suN_exp.c	/^#define XA(/;"	d	file:
XDIR	LibHR/Geometry/geometry_mpi_eo.c	/^#define XDIR /;"	d	file:
XF	LibHR/Update/representation.c	/^#define XF(/;"	d	file:
XF	LibHR/Update/representation.c	/^#undef XF$/;"	d	file:
XG	LibHR/Update/representation.c	/^#define XG(/;"	d	file:
XG	LibHR/Update/representation.c	/^#undef XG$/;"	d	file:
XG	LibHR/Utils/suN_exp.c	/^#define XG(/;"	d	file:
XSTORE	Fortran/su4dbl.f	/^        COMMON\/XSTORE\//;"	c	subroutine:MBPLAN
XSTORE	Fortran/su4dbl.f	/^        COMMON\/XSTORE\//;"	c	subroutine:PLNCORB
XSTORE	Fortran/su4dbl.f	/^        COMMON\/XSTORE\//;"	c	subroutine:TODISK
Xaa_perm	LibHR/Observables/wilsonloops.c	/^static int Xaa_perm[1][3]={{0,1,2}};$/;"	v	file:
Xab_perm	LibHR/Observables/wilsonloops.c	/^static int Xab_perm[2][3]={{0,1,2},{0,2,1}};$/;"	v	file:
Xs	LibHR/Update/force_hmc.c	/^spinor_field *Xs=NULL;$/;"	v
Xs	LibHR/Update/force_hmc_tm.c	/^static spinor_field *Xs = NULL;$/;"	v	file:
Xt	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
Y	Converter/ChromaUtils/qdp-config.h	/^  int Y;$/;"	m	struct:__anon5
YDIR	LibHR/Geometry/geometry_mpi_eo.c	/^#define YDIR /;"	d	file:
Ys	LibHR/Update/force_hmc.c	/^spinor_field *Ys=NULL;$/;"	v
Ys	LibHR/Update/force_hmc_tm.c	/^static spinor_field *Ys = NULL;$/;"	v	file:
Yt	TestProgram/TripletMesons/check_triplets_1.c	/^enum MesonT        {A=0,Pi, Rho,B, Pi2,Rho2,Xt,Yt};$/;"	e	enum:MesonT	file:
YtoU	LibHR/Utils/suN_exp.c	/^static void YtoU(double* u, double *y)$/;"	f	file:
Z	Converter/ChromaUtils/qdp-config.h	/^  int Z;$/;"	m	struct:__anon5
ZDIR	LibHR/Geometry/geometry_mpi_eo.c	/^#define ZDIR /;"	d	file:
Zeta	WilsonFlow/wilsonflow.c	/^static void Zeta(suNg_field *Z, const suNg_field* U, const double alpha){$/;"	f	file:
_4FIELD_AT	Include/spinor_field.h	/^#define _4FIELD_AT(/;"	d
_ALGEBRA_VECTOR_	Make/Utils/autosun/style.h	/^#define _ALGEBRA_VECTOR_ /;"	d
_ALLOC_GPU_CODE	LibHR/Memory/field_alloc.c	/^#define _ALLOC_GPU_CODE(/;"	d	file:
_ALLOC_GPU_CODE	LibHR/Memory/spinor_field_alloc.c	/^#define _ALLOC_GPU_CODE(/;"	d	file:
_ALLOC_MPI_CODE	LibHR/Memory/field_alloc.c	/^#define _ALLOC_MPI_CODE(/;"	d	file:
_ALLOC_MPI_CODE	LibHR/Memory/spinor_field_alloc.c	/^#define _ALLOC_MPI_CODE(/;"	d	file:
_ARRAY_SPINOR_MATCHING	Include/spinor_field.h	/^#define _ARRAY_SPINOR_MATCHING(/;"	d
_BAR_SIGN_	Spectrum/trunc_mesons.c	/^      #define _BAR_SIGN_ /;"	d	file:
_BAR_SIGN_	Spectrum/trunc_mesons.c	/^      #undef _BAR_SIGN_$/;"	d	file:
_BIG_ENDIAN_HRP	LibHR/IO/endian.c	/^enum { _BIG_ENDIAN_HRP, _LITTLE_ENDIAN_HRP };$/;"	e	enum:__anon46	file:
_C0_	LibHR/Observables/mesons.c	/^#define _C0_ /;"	d	file:
_C0_	LibHR/Observables/mesons.c	/^#undef _C0_$/;"	d	file:
_C1_	LibHR/Observables/mesons.c	/^#define _C1_ /;"	d	file:
_C1_	LibHR/Observables/mesons.c	/^#undef _C1_$/;"	d	file:
_C2_	LibHR/Observables/mesons.c	/^#define _C2_ /;"	d	file:
_C2_	LibHR/Observables/mesons.c	/^#undef _C2_$/;"	d	file:
_C3_	LibHR/Observables/mesons.c	/^#define _C3_ /;"	d	file:
_C3_	LibHR/Observables/mesons.c	/^#undef _C3_$/;"	d	file:
_CG	LibHR/Observables/calc_prop.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon49	file:
_CG	LibHR/Observables/calc_prop_ff.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon50	file:
_CG_4F	LibHR/Observables/calc_prop.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon49	file:
_CG_4F	LibHR/Observables/calc_prop_ff.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon50	file:
_COMPLEX	Include/linear_algebra.h	/^#define _COMPLEX /;"	d
_COMPLEX	Include/linear_algebra.h	/^#undef _COMPLEX$/;"	d
_COMPLEX	LibHR/Inverters/linear_algebra.c	/^#define _COMPLEX /;"	d	file:
_COMPLEX	LibHR/Inverters/linear_algebra.c	/^#undef _COMPLEX$/;"	d	file:
_D0_	LibHR/Observables/mesons.c	/^#define _D0_ /;"	d	file:
_D0_	LibHR/Observables/mesons.c	/^#undef _D0_$/;"	d	file:
_D1_	LibHR/Observables/mesons.c	/^#define _D1_ /;"	d	file:
_D1_	LibHR/Observables/mesons.c	/^#undef _D1_$/;"	d	file:
_D2_	LibHR/Observables/mesons.c	/^#define _D2_ /;"	d	file:
_D2_	LibHR/Observables/mesons.c	/^#undef _D2_$/;"	d	file:
_D3_	LibHR/Observables/mesons.c	/^#define _D3_ /;"	d	file:
_D3_	LibHR/Observables/mesons.c	/^#undef _D3_$/;"	d	file:
_DECLARE_ALLOC_FUNC	LibHR/Memory/field_alloc.c	/^#define _DECLARE_ALLOC_FUNC(/;"	d	file:
_DECLARE_ALLOC_FUNC	LibHR/Memory/spinor_field_alloc.c	/^#define _DECLARE_ALLOC_FUNC(/;"	d	file:
_DECLARE_FIELD_STRUCT	Include/spinor_field.h	/^#define _DECLARE_FIELD_STRUCT(/;"	d
_DECLARE_FREE_FUNC	LibHR/Memory/field_alloc.c	/^#define _DECLARE_FREE_FUNC(/;"	d	file:
_DECLARE_FREE_FUNC	LibHR/Memory/spinor_field_alloc.c	/^#define _DECLARE_FREE_FUNC(/;"	d	file:
_DECLARE_MEMORY_FUNC	LibHR/Memory/field_alloc.c	/^#define _DECLARE_MEMORY_FUNC(/;"	d	file:
_DECLARE_MEMORY_FUNC	LibHR/Memory/spinor_field_alloc.c	/^#define _DECLARE_MEMORY_FUNC(/;"	d	file:
_DO_PRAGMA	Include/hr_omp.h	/^#define _DO_PRAGMA(/;"	d
_ENDL_	Make/Utils/autosun/style.h	/^#define _ENDL_ /;"	d
_FIELD_AT	Include/spinor_field.h	/^#define _FIELD_AT(/;"	d
_FREE_GPU_CODE	LibHR/Memory/field_alloc.c	/^#define _FREE_GPU_CODE /;"	d	file:
_FREE_GPU_CODE	LibHR/Memory/spinor_field_alloc.c	/^#define _FREE_GPU_CODE /;"	d	file:
_FREE_MPI_CODE	LibHR/Memory/field_alloc.c	/^#define _FREE_MPI_CODE /;"	d	file:
_FREE_MPI_CODE	LibHR/Memory/spinor_field_alloc.c	/^#define _FREE_MPI_CODE /;"	d	file:
_FUNC	Include/linear_algebra.h	/^#define _FUNC(/;"	d
_FUNC	Include/linear_algebra.h	/^#undef _FUNC$/;"	d
_FUNC	LibHR/Inverters/linear_algebra.c	/^#define _FUNC(/;"	d	file:
_FUNC	LibHR/Inverters/linear_algebra.c	/^#undef _FUNC$/;"	d	file:
_FUND_NORM2	Include/suN_repr_func.h	/^#define _FUND_NORM2 /;"	d
_F_DIR0	LibHR/Update/force_fermion_core.c	/^#define _F_DIR0(/;"	d	file:
_F_DIR0	LibHR/Update/force_fermion_core.c	/^#undef _F_DIR0$/;"	d	file:
_F_DIR0	LibHR/Update/force_hmc_ff.c	/^#define _F_DIR0(/;"	d	file:
_F_DIR0	LibHR/Update/force_hmc_ff.c	/^#undef _F_DIR0$/;"	d	file:
_F_DIR1	LibHR/Update/force_fermion_core.c	/^#define _F_DIR1(/;"	d	file:
_F_DIR1	LibHR/Update/force_fermion_core.c	/^#undef _F_DIR1$/;"	d	file:
_F_DIR1	LibHR/Update/force_hmc_ff.c	/^#define _F_DIR1(/;"	d	file:
_F_DIR1	LibHR/Update/force_hmc_ff.c	/^#undef _F_DIR1$/;"	d	file:
_F_DIR2	LibHR/Update/force_fermion_core.c	/^#define _F_DIR2(/;"	d	file:
_F_DIR2	LibHR/Update/force_fermion_core.c	/^#undef _F_DIR2$/;"	d	file:
_F_DIR2	LibHR/Update/force_hmc_ff.c	/^#define _F_DIR2(/;"	d	file:
_F_DIR2	LibHR/Update/force_hmc_ff.c	/^#undef _F_DIR2$/;"	d	file:
_F_DIR3	LibHR/Update/force_fermion_core.c	/^#define _F_DIR3(/;"	d	file:
_F_DIR3	LibHR/Update/force_fermion_core.c	/^#undef _F_DIR3$/;"	d	file:
_F_DIR3	LibHR/Update/force_hmc_ff.c	/^#define _F_DIR3(/;"	d	file:
_F_DIR3	LibHR/Update/force_hmc_ff.c	/^#undef _F_DIR3$/;"	d	file:
_GPU_FIELD_DATA	Include/spinor_field.h	/^#define _GPU_FIELD_DATA(/;"	d
_GPU_FIELD_DATA	Include/spinor_field.h	/^#undef _GPU_FIELD_DATA$/;"	d
_GROUP_MATRIX_	Make/Utils/autosun/style.h	/^#define _GROUP_MATRIX_ /;"	d
_Givens_rot	LibHR/Inverters/g5QMR_mshift.c	/^#define _Givens_rot(/;"	d	file:
_Givens_rot	LibHR/Observables/g5QMR_trunc.c	/^#define _Givens_rot(/;"	d	file:
_INDENT_	Make/Utils/autosun/style.h	/^#define _INDENT_ /;"	d
_INDEX_	LibHR/Observables/mesons.c	/^#define _INDEX_(/;"	d	file:
_LASTENDL_	Make/Utils/autosun/style.h	/^#define _LASTENDL_ /;"	d
_LITTLE_ENDIAN_HRP	LibHR/IO/endian.c	/^enum { _BIG_ENDIAN_HRP, _LITTLE_ENDIAN_HRP };$/;"	e	enum:__anon46	file:
_MASTER_FOR	Include/geometry.h	/^#define _MASTER_FOR(/;"	d
_MASTER_FOR_MAX	Include/geometry.h	/^#define _MASTER_FOR_MAX(/;"	d
_MASTER_FOR_MIN	Include/geometry.h	/^#define _MASTER_FOR_MIN(/;"	d
_MASTER_FOR_RED	Include/geometry.h	/^#define _MASTER_FOR_RED(/;"	d
_MASTER_FOR_SUM	Include/geometry.h	/^#define _MASTER_FOR_SUM(/;"	d
_MINDEX_	Make/Utils/autosun/style.h	/^#define _MINDEX_ /;"	d
_MINRES	LibHR/Observables/calc_prop.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon49	file:
_MINRES	LibHR/Observables/calc_prop_ff.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon50	file:
_MINRES_par	Include/inverters.h	/^typedef struct _MINRES_par {$/;"	s
_MPI_FIELD_DATA	Include/spinor_field.h	/^#define _MPI_FIELD_DATA /;"	d
_MPI_FIELD_DATA	Include/spinor_field.h	/^#define _MPI_FIELD_DATA$/;"	d
_MPI_FIELD_DATA	Include/spinor_field.h	/^#undef _MPI_FIELD_DATA$/;"	d
_NOGAMMA	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_NUMBER_	Make/Utils/autosun/style.h	/^#define _NUMBER_ /;"	d
_OMP_PRAGMA	Include/hr_omp.h	/^#define _OMP_PRAGMA(/;"	d
_OMP_PRAGMA	LibHR/Inverters/eva.c	/^#define _OMP_PRAGMA(/;"	d	file:
_OMP_PRAGMA	LibHR/Inverters/eva.c	/^#undef _OMP_PRAGMA$/;"	d	file:
_OMP_PRAGMA	LibHR/Update/random_momenta.c	/^#define _OMP_PRAGMA(/;"	d	file:
_OMP_PRAGMA	LibHR/Update/random_momenta.c	/^#undef _OMP_PRAGMA$/;"	d	file:
_OMP_PRAGMA	TestProgram/SpinorField/check_spinorfield_1.c	/^#define _OMP_PRAGMA(/;"	d	file:
_OMP_PRAGMA	TestProgram/SpinorField/check_spinorfield_1.c	/^#undef _OMP_PRAGMA /;"	d	file:
_ONE_SPINOR_FOR	Include/spinor_field.h	/^#define _ONE_SPINOR_FOR(/;"	d
_ONE_SPINOR_FOR_RED	Include/spinor_field.h	/^#define _ONE_SPINOR_FOR_RED(/;"	d
_ONE_SPINOR_FOR_SUM	Include/spinor_field.h	/^#define _ONE_SPINOR_FOR_SUM(/;"	d
_PARAMETER_CHECK	Make/Utils/autosun/print.h	/^#define _PARAMETER_CHECK(/;"	d
_PARAMETER_CHECK	Make/Utils/autosun/print.h	/^#undef _PARAMETER_CHECK$/;"	d
_PIECE_FOR	Include/geometry.h	/^#define _PIECE_FOR(/;"	d
_PNUMBER_	Make/Utils/autosun/style.h	/^#define _PNUMBER_ /;"	d
_PROD	LibHR/Observables/wilsonloops.c	/^      #define _PROD(/;"	d	file:
_PROD	LibHR/Observables/wilsonloops.c	/^      #undef _PROD$/;"	d	file:
_PROJ_BIT	LibHR/Update/integrators.c	/^#define _PROJ_BIT /;"	d	file:
_PROJ_BIT	LibHR/Update/integrators.c	/^#undef _PROJ_BIT$/;"	d	file:
_PROJ_BIT	LibHR/Update/leapfrog.c	/^#define _PROJ_BIT /;"	d	file:
_PROJ_BIT	LibHR/Update/leapfrog.c	/^#undef _PROJ_BIT$/;"	d	file:
_PROP_AT	Include/propagator.h	/^#define _PROP_AT(/;"	d
_PROP_IDX	Include/propagator.h	/^#define _PROP_IDX(/;"	d
_REAL	Include/linear_algebra.h	/^#define _REAL /;"	d
_REAL	Include/linear_algebra.h	/^#undef _REAL$/;"	d
_REAL	LibHR/Inverters/linear_algebra.c	/^#define _REAL /;"	d	file:
_REAL	LibHR/Inverters/linear_algebra.c	/^#undef _REAL$/;"	d	file:
_REAL_	LibHR/Observables/mesons.c	/^#define _REAL_ /;"	d	file:
_REAL_	LibHR/Observables/mesons.c	/^#undef _REAL_$/;"	d	file:
_REPR_MATRIX_	Make/Utils/autosun/style.h	/^#define _REPR_MATRIX_ /;"	d
_REPR_NORM2	Include/suN_repr_func.h	/^#define _REPR_NORM2 /;"	d
_REPR_VECTOR_	Make/Utils/autosun/style.h	/^#define _REPR_VECTOR_ /;"	d
_S0_	LibHR/Observables/mesons.c	/^#define _S0_ /;"	d	file:
_S0_	LibHR/Observables/mesons.c	/^#undef _S0_$/;"	d	file:
_S1_	LibHR/Observables/mesons.c	/^#define _S1_ /;"	d	file:
_S1_	LibHR/Observables/mesons.c	/^#undef _S1_$/;"	d	file:
_S2_	LibHR/Observables/mesons.c	/^#define _S2_ /;"	d	file:
_S2_	LibHR/Observables/mesons.c	/^#undef _S2_$/;"	d	file:
_S3_	LibHR/Observables/mesons.c	/^#define _S3_ /;"	d	file:
_S3_	LibHR/Observables/mesons.c	/^#undef _S3_$/;"	d	file:
_SIGN_	LibHR/Observables/mesons.c	/^#define _SIGN_ /;"	d	file:
_SIGN_	LibHR/Observables/mesons.c	/^#undef _SIGN_$/;"	d	file:
_SIGN_DAG_	LibHR/Observables/mesons.c	/^#define _SIGN_DAG_ /;"	d	file:
_SIGN_DAG_	LibHR/Observables/mesons.c	/^#undef _SIGN_DAG_$/;"	d	file:
_SITE_FOR	Include/geometry.h	/^#define _SITE_FOR(/;"	d
_SITE_FOR_MAX	Include/geometry.h	/^#define _SITE_FOR_MAX(/;"	d
_SITE_FOR_MIN	Include/geometry.h	/^#define _SITE_FOR_MIN(/;"	d
_SITE_FOR_RED	Include/geometry.h	/^#define _SITE_FOR_RED(/;"	d
_SITE_FOR_SUM	Include/geometry.h	/^#define _SITE_FOR_SUM(/;"	d
_SPINOR_FIELD_TYPE	Include/linear_algebra.h	/^#define _SPINOR_FIELD_TYPE /;"	d
_SPINOR_FIELD_TYPE	Include/linear_algebra.h	/^#undef _SPINOR_FIELD_TYPE$/;"	d
_SPINOR_FIELD_TYPE	LibHR/Inverters/linear_algebra.c	/^#define _SPINOR_FIELD_TYPE /;"	d	file:
_SPINOR_FIELD_TYPE	LibHR/Inverters/linear_algebra.c	/^#undef _SPINOR_FIELD_TYPE$/;"	d	file:
_SPINOR_PTR	Include/spinor_field.h	/^#define _SPINOR_PTR(/;"	d
_SPINOR_TYPE	LibHR/Inverters/linear_algebra.c	/^#define _SPINOR_TYPE /;"	d	file:
_SPINOR_TYPE	LibHR/Inverters/linear_algebra.c	/^#undef _SPINOR_TYPE$/;"	d	file:
_SQUARE	LibHR/Observables/wilsonloops.c	/^      #define _SQUARE(/;"	d	file:
_SQUARE	LibHR/Observables/wilsonloops.c	/^      #undef _SQUARE$/;"	d	file:
_SWAP	LibHR/Observables/wilsonloops.c	/^  #define _SWAP(/;"	d	file:
_SWAP	LibHR/Observables/wilsonloops.c	/^  #undef _SWAP$/;"	d	file:
_Sin	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_Sout	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_T0_	LibHR/Observables/mesons.c	/^#define _T0_ /;"	d	file:
_T0_	LibHR/Observables/mesons.c	/^#undef _T0_$/;"	d	file:
_T1_	LibHR/Observables/mesons.c	/^#define _T1_ /;"	d	file:
_T1_	LibHR/Observables/mesons.c	/^#undef _T1_$/;"	d	file:
_T2_	LibHR/Observables/mesons.c	/^#define _T2_ /;"	d	file:
_T2_	LibHR/Observables/mesons.c	/^#undef _T2_$/;"	d	file:
_T3_	LibHR/Observables/mesons.c	/^#define _T3_ /;"	d	file:
_T3_	LibHR/Observables/mesons.c	/^#undef _T3_$/;"	d	file:
_THREE_SPINORS_FOR	Include/spinor_field.h	/^#define _THREE_SPINORS_FOR(/;"	d
_THREE_SPINORS_FOR_RED	Include/spinor_field.h	/^#define _THREE_SPINORS_FOR_RED(/;"	d
_TWO_SPINORS_FOR	Include/spinor_field.h	/^#define _TWO_SPINORS_FOR(/;"	d
_TWO_SPINORS_FOR_RED	Include/spinor_field.h	/^#define _TWO_SPINORS_FOR_RED(/;"	d
_TWO_SPINORS_FOR_SUM	Include/spinor_field.h	/^#define _TWO_SPINORS_FOR_SUM(/;"	d
_TWO_SPINORS_MATCHING	Include/spinor_field.h	/^#define _TWO_SPINORS_MATCHING(/;"	d
_T_theta_mulc	LibHR/Update/force_fermion_core.c	/^#define _T_theta_mulc(/;"	d	file:
_T_theta_mulc	LibHR/Update/force_hmc_ff.c	/^#define _T_theta_mulc(/;"	d	file:
_VINDEX_	Make/Utils/autosun/style.h	/^#define _VINDEX_ /;"	d
_WL_3VOL_INDEX	Include/observables.h	/^#define _WL_3VOL_INDEX(/;"	d
_WL_4VOL_INDEX	LibHR/Observables/wilsonloops.c	/^#define _WL_4VOL_INDEX(/;"	d	file:
_X_theta_mulc	LibHR/Update/force_fermion_core.c	/^#define _X_theta_mulc(/;"	d	file:
_X_theta_mulc	LibHR/Update/force_hmc_ff.c	/^#define _X_theta_mulc(/;"	d	file:
_Y_theta_mulc	LibHR/Update/force_fermion_core.c	/^#define _Y_theta_mulc(/;"	d	file:
_Y_theta_mulc	LibHR/Update/force_hmc_ff.c	/^#define _Y_theta_mulc(/;"	d	file:
_ZERO_	Make/Utils/autosun/polynomial.h	/^#define _ZERO_ /;"	d
_Z_theta_mulc	LibHR/Update/force_fermion_core.c	/^#define _Z_theta_mulc(/;"	d	file:
_Z_theta_mulc	LibHR/Update/force_hmc_ff.c	/^#define _Z_theta_mulc(/;"	d	file:
__BS_CTRL	Analysis/Mesons/bs_ctrl.h	/^#define __BS_CTRL$/;"	d
__BS_OBSERVABLES	Analysis/Mesons/bs_observables.h	/^#define __BS_OBSERVABLES$/;"	d
__BS_READER	Analysis/Mesons/bs_reader.h	/^#define __BS_READER$/;"	d
__BS_TYPE	Analysis/Mesons/bs_type.h	/^#define __BS_TYPE$/;"	d
_algebra_project	Include/suN_repr_func.h	/^#define _algebra_project(/;"	d
_algebra_represent	Include/suN_repr_func.h	/^#define _algebra_represent(/;"	d
_algebra_vector_add_assign_g	Include/suN.h	/^#define _algebra_vector_add_assign_g(/;"	d
_algebra_vector_mul_add_assign_g	Include/suN.h	/^#define _algebra_vector_mul_add_assign_g(/;"	d
_algebra_vector_mul_add_assign_gpu_f	Include/suN.h	/^#define _algebra_vector_mul_add_assign_gpu_f(/;"	d
_algebra_vector_mul_add_assign_gpu_f_flt	Include/suN.h	/^#define _algebra_vector_mul_add_assign_gpu_f_flt(/;"	d
_algebra_vector_mul_add_assign_gpu_g	Include/suN.h	/^#define _algebra_vector_mul_add_assign_gpu_g(/;"	d
_algebra_vector_mul_add_assign_gpu_g_flt	Include/suN.h	/^#define _algebra_vector_mul_add_assign_gpu_g_flt(/;"	d
_algebra_vector_mul_g	Include/suN.h	/^#define _algebra_vector_mul_g(/;"	d
_algebra_vector_sqnorm_g	Include/suN.h	/^#define _algebra_vector_sqnorm_g(/;"	d
_algebra_vector_sub_assign_g	Include/suN.h	/^#define _algebra_vector_sub_assign_g(/;"	d
_algebra_vector_zero_g	Include/suN.h	/^#define _algebra_vector_zero_g(/;"	d
_asize	Include/rational_functions.h	/^	unsigned int _asize; \/* allocated space for arrays *\/$/;"	m	struct:_rational_app
_ata_qprop_pars	Include/observables.h	/^typedef struct _ata_qprop_pars {$/;"	s
_block_info	LibHR/Geometry/test_geometry_mpi.c	/^typedef struct _block_info {$/;"	s	file:
_cg0r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_cg1r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_cg2r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_cg3r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_complex_0	Include/complex.h	/^#define _complex_0(/;"	d
_complex_1	Include/complex.h	/^#define _complex_1(/;"	d
_complex_add	Include/complex.h	/^#define _complex_add(/;"	d
_complex_add_1	Include/complex.h	/^#define _complex_add_1(/;"	d
_complex_add_assign	Include/complex.h	/^#define _complex_add_assign(/;"	d
_complex_add_star	Include/complex.h	/^#define _complex_add_star(/;"	d
_complex_add_star_assign	Include/complex.h	/^#define _complex_add_star_assign(/;"	d
_complex_clc	Include/complex.h	/^#define _complex_clc(/;"	d
_complex_clc_assign	Include/complex.h	/^#define _complex_clc_assign(/;"	d
_complex_div	Include/complex.h	/^#define _complex_div(/;"	d
_complex_i	Include/complex.h	/^#define _complex_i(/;"	d
_complex_i_add	Include/complex.h	/^#define _complex_i_add(/;"	d
_complex_i_add_assign	Include/complex.h	/^#define _complex_i_add_assign(/;"	d
_complex_i_minus	Include/complex.h	/^#define _complex_i_minus(/;"	d
_complex_i_plus	Include/complex.h	/^#define _complex_i_plus(/;"	d
_complex_i_sub	Include/complex.h	/^#define _complex_i_sub(/;"	d
_complex_i_sub_assign	Include/complex.h	/^#define _complex_i_sub_assign(/;"	d
_complex_im	Include/complex.h	/^#define _complex_im(/;"	d
_complex_inv	Include/complex.h	/^#define _complex_inv(/;"	d
_complex_minus	Include/complex.h	/^#define _complex_minus(/;"	d
_complex_mul	Include/complex.h	/^#define _complex_mul(/;"	d
_complex_mul_assign	Include/complex.h	/^#define _complex_mul_assign(/;"	d
_complex_mul_star	Include/complex.h	/^#define _complex_mul_star(/;"	d
_complex_mul_star_assign	Include/complex.h	/^#define _complex_mul_star_assign(/;"	d
_complex_mul_star_assign_re	Include/complex.h	/^#define _complex_mul_star_assign_re(/;"	d
_complex_mul_star_star_assign	Include/complex.h	/^#define _complex_mul_star_star_assign(/;"	d
_complex_mul_sub_assign	Include/complex.h	/^#define _complex_mul_sub_assign(/;"	d
_complex_mulcr_assign	Include/complex.h	/^#define _complex_mulcr_assign(/;"	d
_complex_mulr	Include/complex.h	/^#define _complex_mulr(/;"	d
_complex_mulr_assign	Include/complex.h	/^#define _complex_mulr_assign(/;"	d
_complex_prod_assign	Include/complex.h	/^#define _complex_prod_assign(/;"	d
_complex_prod_im	Include/complex.h	/^#define _complex_prod_im(/;"	d
_complex_prod_m1_re	Include/complex.h	/^#define _complex_prod_m1_re(/;"	d
_complex_prod_re	Include/complex.h	/^#define _complex_prod_re(/;"	d
_complex_re	Include/complex.h	/^#define _complex_re(/;"	d
_complex_rlc	Include/complex.h	/^#define _complex_rlc(/;"	d
_complex_rlc_assign	Include/complex.h	/^#define _complex_rlc_assign(/;"	d
_complex_star	Include/complex.h	/^#define _complex_star(/;"	d
_complex_star_assign	Include/complex.h	/^#define _complex_star_assign(/;"	d
_complex_star_minus	Include/complex.h	/^#define _complex_star_minus(/;"	d
_complex_sub	Include/complex.h	/^#define _complex_sub(/;"	d
_complex_sub_assign	Include/complex.h	/^#define _complex_sub_assign(/;"	d
_complex_sub_star	Include/complex.h	/^#define _complex_sub_star(/;"	d
_compute_z	LibHR/Inverters/BiCGstab_mshift.c	/^__inline static void _compute_z(complex *res, complex *z1, complex *z2, $/;"	f	file:
_datatype_t	Include/input_par.h	/^typedef enum _datatype_t {$/;"	g
_eva_prec	Include/utils.h	/^typedef struct _eva_prec {$/;"	s
_filename_type	Converter/ChromaUtils/main.c	/^typedef struct _filename_type {$/;"	s	file:
_filename_type	Converter/converter.c	/^typedef struct _filename_type {$/;"	s	file:
_format_type	Converter/converter.c	/^typedef struct _format_type {$/;"	s	file:
_fund_algebra_project	Include/suN_repr_func.h	/^#define _fund_algebra_project(/;"	d
_fund_algebra_represent	Include/suN_repr_func.h	/^#define _fund_algebra_represent(/;"	d
_g0	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0_propagator	Include/propagator.h	/^#define _g0_propagator(/;"	d
_g0_spinmatrix	Include/spin_matrix.h	/^#define _g0_spinmatrix(/;"	d
_g0g1	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0g1_propagator	Include/propagator.h	/^#define _g0g1_propagator(/;"	d
_g0g1_spinmatrix	Include/spin_matrix.h	/^#define _g0g1_spinmatrix(/;"	d
_g0g1r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g0g2	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0g2_propagator	Include/propagator.h	/^#define _g0g2_propagator(/;"	d
_g0g2_spinmatrix	Include/spin_matrix.h	/^#define _g0g2_spinmatrix(/;"	d
_g0g2r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g0g3	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0g3_propagator	Include/propagator.h	/^#define _g0g3_propagator(/;"	d
_g0g3_spinmatrix	Include/spin_matrix.h	/^#define _g0g3_spinmatrix(/;"	d
_g0g3r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g0g5	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0g5_spinmatrix	Include/spin_matrix.h	/^#define _g0g5_spinmatrix(/;"	d
_g0g5g1	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0g5g2	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0g5g3	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g0r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g1	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g1	LibHR/Observables/z2semwall_new.c	/^  enum { _g5=0, _g1, _g5_g0g5_re };$/;"	e	enum:__anon55	file:
_g1_propagator	Include/propagator.h	/^#define _g1_propagator(/;"	d
_g1_spinmatrix	Include/spin_matrix.h	/^#define _g1_spinmatrix(/;"	d
_g1r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g2	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g2_propagator	Include/propagator.h	/^#define _g2_propagator(/;"	d
_g2_spinmatrix	Include/spin_matrix.h	/^#define _g2_spinmatrix(/;"	d
_g2r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g3	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g3_propagator	Include/propagator.h	/^#define _g3_propagator(/;"	d
_g3_spinmatrix	Include/spin_matrix.h	/^#define _g3_spinmatrix(/;"	d
_g3r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g5	LibHR/Observables/z2semwall_new.c	/^  enum { _g5=0, _g1, _g5_g0g5_re };$/;"	e	enum:__anon55	file:
_g5QMR	LibHR/Observables/calc_prop.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon49	file:
_g5QMR	LibHR/Observables/calc_prop_ff.c	/^enum {_g5QMR=0, _MINRES, _CG, _CG_4F};$/;"	e	enum:__anon50	file:
_g5_disc	LibHR/Observables/z2semwall_new.c	/^  enum {_g5_g0g5_re=NCHANNELS-3, _id_disc,_g5_disc };$/;"	e	enum:__anon56	file:
_g5_ff	LibHR/Observables/measure_ff.c	/^enum { _g5_ff= 0,_pipig_ff_re,_pipig_ff_im,_pipig_conserved_ff,NCHANNELS_FF };$/;"	e	enum:__anon51	file:
_g5_g0g5_re	LibHR/Observables/z2semwall.c	/^static const int _g5_g0g5_re=NCHANNELS-1;$/;"	v	file:
_g5_g0g5_re	LibHR/Observables/z2semwall_new.c	/^  enum { _g5=0, _g1, _g5_g0g5_re };$/;"	e	enum:__anon55	file:
_g5_g0g5_re	LibHR/Observables/z2semwall_new.c	/^  enum {_g5_g0g5_re=NCHANNELS-3, _id_disc,_g5_disc };$/;"	e	enum:__anon56	file:
_g5_propagator	Include/propagator.h	/^#define _g5_propagator(/;"	d
_g5_spinmatrix	Include/spin_matrix.h	/^#define _g5_spinmatrix(/;"	d
_g5g0_propagator	Include/propagator.h	/^#define _g5g0_propagator(/;"	d
_g5g0_spinmatrix	Include/spin_matrix.h	/^#define _g5g0_spinmatrix(/;"	d
_g5g0g1_propagator	Include/propagator.h	/^#define _g5g0g1_propagator(/;"	d
_g5g0g1_spinmatrix	Include/spin_matrix.h	/^#define _g5g0g1_spinmatrix(/;"	d
_g5g0g1r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5g0g2_propagator	Include/propagator.h	/^#define _g5g0g2_propagator(/;"	d
_g5g0g2_spinmatrix	Include/spin_matrix.h	/^#define _g5g0g2_spinmatrix(/;"	d
_g5g0g2r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5g0g3_propagator	Include/propagator.h	/^#define _g5g0g3_propagator(/;"	d
_g5g0g3_spinmatrix	Include/spin_matrix.h	/^#define _g5g0g3_spinmatrix(/;"	d
_g5g0g3r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5g0r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5g1	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g5g1_propagator	Include/propagator.h	/^#define _g5g1_propagator(/;"	d
_g5g1_spinmatrix	Include/spin_matrix.h	/^#define _g5g1_spinmatrix(/;"	d
_g5g1r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5g2	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g5g2_propagator	Include/propagator.h	/^#define _g5g2_propagator(/;"	d
_g5g2_spinmatrix	Include/spin_matrix.h	/^#define _g5g2_spinmatrix(/;"	d
_g5g2r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5g3	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_g5g3_propagator	Include/propagator.h	/^#define _g5g3_propagator(/;"	d
_g5g3_spinmatrix	Include/spin_matrix.h	/^#define _g5g3_spinmatrix(/;"	d
_g5g3r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_g5r	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_geometry_descriptor	Include/geometry.h	/^typedef struct _geometry_descriptor {$/;"	s
_ghmc_par	Include/update.h	/^typedef struct _ghmc_par {$/;"	s
_group_represent	Include/suN_repr_func.h	/^#define _group_represent(/;"	d
_group_represent2	LibHR/Update/representation.c	/^void _group_represent2(suNf* v, suNg *u) {$/;"	f
_group_represent2_flt	LibHR/Update/representation.c	/^void _group_represent2_flt(suNf_flt* v, suNg_flt *u) {$/;"	f
_guess_inf	LibHR/Update/remez/main.C	/^typedef struct _guess_inf {$/;"	s	file:
_hmc_flow	HMC/hmc_utils.h	/^typedef struct _hmc_flow {$/;"	s
_id	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	e	enum:__anon16
_id_disc	LibHR/Observables/z2semwall_new.c	/^  enum {_g5_g0g5_re=NCHANNELS-3, _id_disc,_g5_disc };$/;"	e	enum:__anon56	file:
_id_propagator	Include/propagator.h	/^#define _id_propagator(/;"	d
_idr	LibHR/Observables/measure_renormalization.c	/^enum { _Sin=0, _Sout, _g5r, _idr, _g0r, _g1r, _g2r, _g3r,  _g0g1r, _g0g2r, _g0g3r, _g5g0r, _g5g1r, _g5g2r, _g5g3r, _g5g0g1r, _g5g0g2r, _g5g0g3r, _cg0r, _cg1r, _cg2r, _cg3r, NCHANNELSR };$/;"	e	enum:__anon52	file:
_input_HYP	StaticPotential/mk_wilsonloops.c	/^typedef struct _input_HYP {$/;"	s	file:
_input_SF	WilsonFlow/WF_measure.c	/^typedef struct _input_SF {$/;"	s	file:
_input_SF	WilsonFlow/WF_measure_adaptative.c	/^typedef struct _input_SF {$/;"	s	file:
_input_WF	WilsonFlow/WF_measure.c	/^typedef struct _input_WF {$/;"	s	file:
_input_WF	WilsonFlow/WF_measure_adaptative.c	/^typedef struct _input_WF {$/;"	s	file:
_input_ata_qprop	Spectrum/trunc_mesons.c	/^typedef struct _input_ata_qprop {$/;"	s	file:
_input_bcpar	Spectrum/mk_sfcoupling.c	/^typedef struct _input_bcpar {$/;"	s	file:
_input_eigval	HMC/hmc.c	/^typedef struct _input_eigval {$/;"	s	file:
_input_eigval	ModeNumber/mk_eigvals.c	/^typedef struct _input_eigval {$/;"	s	file:
_input_eigval	TestProgram/Deflate/check_deflate.c	/^typedef struct _input_eigval {$/;"	s	file:
_input_ff	Spectrum/measure_spectrum.c	/^typedef struct _input_ff {$/;"	s	file:
_input_glb	Include/input_par.h	/^typedef struct _input_glb {$/;"	s
_input_hmc	HMC/hmc_utils.h	/^typedef struct _input_hmc {$/;"	s
_input_logger	Include/input_par.h	/^typedef struct _input_logger {$/;"	s
_input_loops	Disconnected/compute_loops.c	/^typedef struct _input_loops {$/;"	s	file:
_input_mesons	HMC/hmc.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	Spectrum/measure_formfactor.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	Spectrum/measure_spectrum.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	Spectrum/mk_mesons.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	Spectrum/mk_mesons_with_z2semwall.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	Spectrum/mk_mesons_with_z2semwall_new.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	TestProgram/Deflate/check_deflate.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	TestProgram/Propagator/check_propagator.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_mesons	TestProgram/TripletMesons/check_triplets_1.c	/^typedef struct _input_mesons {$/;"	s	file:
_input_nu	ModeNumber/mk_modenumber.c	/^typedef struct _input_nu {$/;"	s	file:
_input_pg	PureGauge/suN_utils.h	/^typedef struct _input_pg {$/;"	s
_input_polyakov	HMC/hmc.c	/^typedef struct _input_polyakov {$/;"	s	file:
_input_polyakov	PureGauge/suN.c	/^typedef struct _input_polyakov {$/;"	s	file:
_input_record_t	Include/input_par.h	/^typedef struct _input_record_t {$/;"	s
_input_renormalization	RenormalizationFactors/measure_Z_mom.c	/^typedef struct _input_renormalization {$/;"	s	file:
_input_rlx	Include/input_par.h	/^typedef struct _input_rlx {$/;"	s
_input_scatt	Scattering/IOroutines.c	/^typedef struct _input_scatt {$/;"	s	file:
_input_scatt	Scattering/meson_scattering.c	/^typedef struct _input_scatt {$/;"	s	file:
_input_sfc	Spectrum/mk_sfcoupling.c	/^typedef struct _input_sfc {$/;"	s	file:
_input_wilson	StaticPotential/mk_wilsonloops.c	/^typedef struct _input_wilson {$/;"	s	file:
_integrator_par	Include/update.h	/^typedef struct _integrator_par {$/;"	s
_lrecord	LibHR/IO/logger.c	/^typedef struct _lrecord {$/;"	s	file:
_mem_t	Include/global.h	/^typedef enum _mem_t {$/;"	g
_mon_ff_par	Include/update.h	/^typedef struct _mon_ff_par {$/;"	s
_mon_hasenbusch_par	Include/update.h	/^typedef struct _mon_hasenbusch_par {$/;"	s
_mon_hasenbusch_tm_par	Include/update.h	/^typedef struct _mon_hasenbusch_tm_par {$/;"	s
_mon_hmc_par	Include/update.h	/^typedef struct _mon_hmc_par {$/;"	s
_mon_list	LibHR/Update/monomials.c	/^typedef struct _mon_list {$/;"	s	file:
_mon_pg_par	Include/update.h	/^typedef struct _mon_pg_par {$/;"	s
_mon_rhmc_par	Include/update.h	/^typedef struct _mon_rhmc_par {$/;"	s
_mon_tm_par	Include/update.h	/^typedef struct _mon_tm_par {$/;"	s
_monomial	Include/update.h	/^typedef struct _monomial {$/;"	s
_monomial_data	Include/update.h	/^typedef struct _monomial_data {$/;"	s
_mshift_par	Include/inverters.h	/^typedef struct _mshift_par {$/;"	s
_omp_for	Include/hr_omp.h	/^#define _omp_for /;"	d
_omp_max	Include/hr_omp.h	/^#define _omp_max(/;"	d
_omp_min	Include/hr_omp.h	/^#define _omp_min(/;"	d
_omp_parallel	Include/hr_omp.h	/^#define _omp_parallel /;"	d
_omp_sum	Include/hr_omp.h	/^#define _omp_sum(/;"	d
_pg_flow	PureGauge/suN_utils.h	/^typedef struct _pg_flow {$/;"	s
_pipig_conserved_ff	LibHR/Observables/measure_ff.c	/^enum { _g5_ff= 0,_pipig_ff_re,_pipig_ff_im,_pipig_conserved_ff,NCHANNELS_FF };$/;"	e	enum:__anon51	file:
_pipig_ff_im	LibHR/Observables/measure_ff.c	/^enum { _g5_ff= 0,_pipig_ff_re,_pipig_ff_im,_pipig_conserved_ff,NCHANNELS_FF };$/;"	e	enum:__anon51	file:
_pipig_ff_re	LibHR/Observables/measure_ff.c	/^enum { _g5_ff= 0,_pipig_ff_re,_pipig_ff_im,_pipig_conserved_ff,NCHANNELS_FF };$/;"	e	enum:__anon51	file:
_print_avect	LibHR/Update/force0.c	/^#define _print_avect(/;"	d	file:
_print_avect	LibHR/Update/force_hmc_ff.c	/^#define _print_avect(/;"	d	file:
_print_complex	LibHR/Inverters/BiCGstab_mshift.c	/^#define _print_complex(/;"	d	file:
_print_mat	LibHR/Update/force0.c	/^#define _print_mat(/;"	d	file:
_print_mat	LibHR/Update/force_hmc_ff.c	/^#define _print_mat(/;"	d	file:
_print_par	LibHR/Inverters/HBiCGstab_mshift.c	/^#define _print_par(/;"	d	file:
_print_par	LibHR/Inverters/MINRES.c	/^#define _print_par(/;"	d	file:
_print_par	LibHR/Inverters/MINRES_mshift.c	/^#define _print_par(/;"	d	file:
_print_par	LibHR/Inverters/g5QMR_mshift.c	/^#define _print_par(/;"	d	file:
_print_par	LibHR/Observables/g5QMR_trunc.c	/^#define _print_par(/;"	d	file:
_proj_gfield	LibHR/Update/integrators.c	/^#define _proj_gfield(/;"	d	file:
_proj_gfield	LibHR/Update/integrators.c	/^#undef _proj_gfield$/;"	d	file:
_proj_gfield	LibHR/Update/leapfrog.c	/^#define _proj_gfield(/;"	d	file:
_proj_leapfrog	LibHR/Update/leapfrog.c	/^#undef _proj_leapfrog$/;"	d	file:
_propagator_add	Include/propagator.h	/^#define _propagator_add(/;"	d
_propagator_assign	Include/propagator.h	/^#define _propagator_assign(/;"	d
_propagator_assign_spin_matrix	Include/propagator.h	/^#define _propagator_assign_spin_matrix(/;"	d
_propagator_baryon1_mul2	LibHR/Observables/measure_baryons.c	/^void _propagator_baryon1_mul2(complex C[4][4],suNf_propagator S,suNf_propagator Stilde,int i,int ip,int j,int jp,int k,int kp)$/;"	f
_propagator_baryon2_mul2	LibHR/Observables/measure_baryons.c	/^void _propagator_baryon2_mul2(complex C[4][4],suNf_propagator S,suNf_propagator Stilde,int i,int ip,int j,int jp,int k,int kp)$/;"	f
_propagator_dagger	Include/propagator.h	/^#define _propagator_dagger(/;"	d
_propagator_g0	Include/propagator.h	/^#define _propagator_g0(/;"	d
_propagator_g0g2	Include/propagator.h	/^#define _propagator_g0g2(/;"	d
_propagator_g2	Include/propagator.h	/^#define _propagator_g2(/;"	d
_propagator_g5	Include/propagator.h	/^#define _propagator_g5(/;"	d
_propagator_g5g0	Include/propagator.h	/^#define _propagator_g5g0(/;"	d
_propagator_g5g0g2	Include/propagator.h	/^#define _propagator_g5g0g2(/;"	d
_propagator_g5g1	Include/propagator.h	/^#define _propagator_g5g1(/;"	d
_propagator_g5g3	Include/propagator.h	/^#define _propagator_g5g3(/;"	d
_propagator_leftmul_spinor	Include/propagator.h	/^#define _propagator_leftmul_spinor(/;"	d
_propagator_mul	Include/propagator.h	/^#define _propagator_mul(/;"	d
_propagator_mul_assign	Include/propagator.h	/^#define _propagator_mul_assign(/;"	d
_propagator_mul_spinor	Include/propagator.h	/^#define _propagator_mul_spinor(/;"	d
_propagator_mul_trace	Include/propagator.h	/^#define _propagator_mul_trace(/;"	d
_propagator_mulc_assign	Include/propagator.h	/^#define _propagator_mulc_assign(/;"	d
_propagator_muldag_trace	Include/propagator.h	/^#define _propagator_muldag_trace(/;"	d
_propagator_one	Include/propagator.h	/^#define _propagator_one(/;"	d
_propagator_sub	Include/propagator.h	/^#define _propagator_sub(/;"	d
_propagator_trace	Include/propagator.h	/^#define _propagator_trace(/;"	d
_propagator_transpose	Include/propagator.h	/^#define _propagator_transpose(/;"	d
_propagator_zero	Include/propagator.h	/^#define _propagator_zero(/;"	d
_rational_app	Include/rational_functions.h	/^typedef struct _rational_app {$/;"	s
_record	LibHR/IO/logger.c	/^typedef struct _record {$/;"	s	file:
_site_info	LibHR/Geometry/test_geometry_mpi.c	/^typedef struct _site_info {$/;"	s	file:
_spinmatrix_add	Include/spin_matrix.h	/^#define _spinmatrix_add(/;"	d
_spinmatrix_assign_row	Include/spin_matrix.h	/^#define _spinmatrix_assign_row(/;"	d
_spinmatrix_g0	Include/spin_matrix.h	/^#define _spinmatrix_g0(/;"	d
_spinmatrix_g0g1	Include/spin_matrix.h	/^#define _spinmatrix_g0g1(/;"	d
_spinmatrix_g0g2	Include/spin_matrix.h	/^#define _spinmatrix_g0g2(/;"	d
_spinmatrix_g0g3	Include/spin_matrix.h	/^#define _spinmatrix_g0g3(/;"	d
_spinmatrix_g0g5	Include/spin_matrix.h	/^#define _spinmatrix_g0g5(/;"	d
_spinmatrix_g1	Include/spin_matrix.h	/^#define _spinmatrix_g1(/;"	d
_spinmatrix_g2	Include/spin_matrix.h	/^#define _spinmatrix_g2(/;"	d
_spinmatrix_g3	Include/spin_matrix.h	/^#define _spinmatrix_g3(/;"	d
_spinmatrix_g5	Include/spin_matrix.h	/^#define _spinmatrix_g5(/;"	d
_spinmatrix_g5g0	Include/spin_matrix.h	/^#define _spinmatrix_g5g0(/;"	d
_spinmatrix_g5g0g1	Include/spin_matrix.h	/^#define _spinmatrix_g5g0g1(/;"	d
_spinmatrix_g5g0g2	Include/spin_matrix.h	/^#define _spinmatrix_g5g0g2(/;"	d
_spinmatrix_g5g0g3	Include/spin_matrix.h	/^#define _spinmatrix_g5g0g3(/;"	d
_spinmatrix_g5g1	Include/spin_matrix.h	/^#define _spinmatrix_g5g1(/;"	d
_spinmatrix_g5g2	Include/spin_matrix.h	/^#define _spinmatrix_g5g2(/;"	d
_spinmatrix_g5g3	Include/spin_matrix.h	/^#define _spinmatrix_g5g3(/;"	d
_spinmatrix_mul_trace	Include/spin_matrix.h	/^#define _spinmatrix_mul_trace(/;"	d
_spinmatrix_mul_trace_assign	Include/spin_matrix.h	/^#define _spinmatrix_mul_trace_assign(/;"	d
_spinmatrix_mul_trace_re	Include/spin_matrix.h	/^#define _spinmatrix_mul_trace_re(/;"	d
_spinmatrix_sub	Include/spin_matrix.h	/^#define _spinmatrix_sub(/;"	d
_spinmatrix_zero	Include/spin_matrix.h	/^#define _spinmatrix_zero(/;"	d
_spinor_add_assign_f	Include/suN.h	/^#define _spinor_add_assign_f(/;"	d
_spinor_add_assign_g	Include/suN.h	/^#define _spinor_add_assign_g(/;"	d
_spinor_add_f	Include/suN.h	/^#define _spinor_add_f(/;"	d
_spinor_add_g	Include/suN.h	/^#define _spinor_add_g(/;"	d
_spinor_c_	LibHR/Observables/mesons.c	/^#define _spinor_c_(/;"	d	file:
_spinor_clc_add_assign_f	Include/suN.h	/^#define _spinor_clc_add_assign_f(/;"	d
_spinor_clc_add_assign_g	Include/suN.h	/^#define _spinor_clc_add_assign_g(/;"	d
_spinor_clc_f	Include/suN.h	/^#define _spinor_clc_f(/;"	d
_spinor_clc_g	Include/suN.h	/^#define _spinor_clc_g(/;"	d
_spinor_g0_f	Include/gamma_spinor.h	/^#define _spinor_g0_f(/;"	d
_spinor_g0g1_f	Include/gamma_spinor.h	/^#define _spinor_g0g1_f(/;"	d
_spinor_g0g2_f	Include/gamma_spinor.h	/^#define _spinor_g0g2_f(/;"	d
_spinor_g0g3_f	Include/gamma_spinor.h	/^#define _spinor_g0g3_f(/;"	d
_spinor_g0g5_f	Include/gamma_spinor.h	/^#define _spinor_g0g5_f(/;"	d
_spinor_g1_f	Include/gamma_spinor.h	/^#define _spinor_g1_f(/;"	d
_spinor_g2_f	Include/gamma_spinor.h	/^#define _spinor_g2_f(/;"	d
_spinor_g3_f	Include/gamma_spinor.h	/^#define _spinor_g3_f(/;"	d
_spinor_g5_assign_f	Include/suN.h	/^#define _spinor_g5_assign_f(/;"	d
_spinor_g5_assign_g	Include/suN.h	/^#define _spinor_g5_assign_g(/;"	d
_spinor_g5_f	Include/suN.h	/^#define _spinor_g5_f(/;"	d
_spinor_g5_g	Include/suN.h	/^#define _spinor_g5_g(/;"	d
_spinor_g5_prod_im_f	Include/suN.h	/^#define _spinor_g5_prod_im_f(/;"	d
_spinor_g5_prod_im_g	Include/suN.h	/^#define _spinor_g5_prod_im_g(/;"	d
_spinor_g5_prod_re_f	Include/suN.h	/^#define _spinor_g5_prod_re_f(/;"	d
_spinor_g5_prod_re_g	Include/suN.h	/^#define _spinor_g5_prod_re_g(/;"	d
_spinor_g5g0_f	Include/gamma_spinor.h	/^#define _spinor_g5g0_f(/;"	d
_spinor_g5g0g1_f	Include/gamma_spinor.h	/^#define _spinor_g5g0g1_f(/;"	d
_spinor_g5g0g2_f	Include/gamma_spinor.h	/^#define _spinor_g5g0g2_f(/;"	d
_spinor_g5g0g3_f	Include/gamma_spinor.h	/^#define _spinor_g5g0g3_f(/;"	d
_spinor_g5g1_f	Include/gamma_spinor.h	/^#define _spinor_g5g1_f(/;"	d
_spinor_g5g2_f	Include/gamma_spinor.h	/^#define _spinor_g5g2_f(/;"	d
_spinor_g5g3_f	Include/gamma_spinor.h	/^#define _spinor_g5g3_f(/;"	d
_spinor_i_add_assign_f	Include/suN.h	/^#define _spinor_i_add_assign_f(/;"	d
_spinor_i_add_assign_g	Include/suN.h	/^#define _spinor_i_add_assign_g(/;"	d
_spinor_i_minus_f	Include/gamma_spinor.h	/^#define _spinor_i_minus_f(/;"	d
_spinor_i_plus_f	Include/gamma_spinor.h	/^#define _spinor_i_plus_f(/;"	d
_spinor_i_sub_assign_f	Include/suN.h	/^#define _spinor_i_sub_assign_f(/;"	d
_spinor_i_sub_assign_g	Include/suN.h	/^#define _spinor_i_sub_assign_g(/;"	d
_spinor_lc_add_assign_f	Include/suN.h	/^#define _spinor_lc_add_assign_f(/;"	d
_spinor_lc_add_assign_g	Include/suN.h	/^#define _spinor_lc_add_assign_g(/;"	d
_spinor_lc_f	Include/suN.h	/^#define _spinor_lc_f(/;"	d
_spinor_lc_g	Include/suN.h	/^#define _spinor_lc_g(/;"	d
_spinor_minus_f	Include/suN.h	/^#define _spinor_minus_f(/;"	d
_spinor_minus_g	Include/suN.h	/^#define _spinor_minus_g(/;"	d
_spinor_mul_add_assign_f	Include/suN.h	/^#define _spinor_mul_add_assign_f(/;"	d
_spinor_mul_add_assign_g	Include/suN.h	/^#define _spinor_mul_add_assign_g(/;"	d
_spinor_mul_f	Include/suN.h	/^#define _spinor_mul_f(/;"	d
_spinor_mul_g	Include/suN.h	/^#define _spinor_mul_g(/;"	d
_spinor_mulc_add_assign_f	Include/suN.h	/^#define _spinor_mulc_add_assign_f(/;"	d
_spinor_mulc_add_assign_g	Include/suN.h	/^#define _spinor_mulc_add_assign_g(/;"	d
_spinor_mulc_f	Include/suN.h	/^#define _spinor_mulc_f(/;"	d
_spinor_mulc_g	Include/suN.h	/^#define _spinor_mulc_g(/;"	d
_spinor_perm_prod_im	LibHR/Observables/mesons.c	/^#define _spinor_perm_prod_im(/;"	d	file:
_spinor_perm_prod_re	LibHR/Observables/mesons.c	/^#define _spinor_perm_prod_re(/;"	d	file:
_spinor_plus_f	Include/gamma_spinor.h	/^#define _spinor_plus_f(/;"	d
_spinor_pminus_f	Include/suN.h	/^#define _spinor_pminus_f(/;"	d
_spinor_pminus_g	Include/suN.h	/^#define _spinor_pminus_g(/;"	d
_spinor_pplus_f	Include/suN.h	/^#define _spinor_pplus_f(/;"	d
_spinor_pplus_g	Include/suN.h	/^#define _spinor_pplus_g(/;"	d
_spinor_prod_assign_f	Include/suN.h	/^#define _spinor_prod_assign_f(/;"	d
_spinor_prod_assign_g	Include/suN.h	/^#define _spinor_prod_assign_g(/;"	d
_spinor_prod_f	Include/suN.h	/^#define _spinor_prod_f(/;"	d
_spinor_prod_g	Include/suN.h	/^#define _spinor_prod_g(/;"	d
_spinor_prod_im_f	Include/suN.h	/^#define _spinor_prod_im_f(/;"	d
_spinor_prod_im_g	Include/suN.h	/^#define _spinor_prod_im_g(/;"	d
_spinor_prod_re_f	Include/suN.h	/^#define _spinor_prod_re_f(/;"	d
_spinor_prod_re_g	Include/suN.h	/^#define _spinor_prod_re_g(/;"	d
_spinor_project_f	Include/suN.h	/^#define _spinor_project_f(/;"	d
_spinor_project_g	Include/suN.h	/^#define _spinor_project_g(/;"	d
_spinor_sub_assign_f	Include/suN.h	/^#define _spinor_sub_assign_f(/;"	d
_spinor_sub_assign_g	Include/suN.h	/^#define _spinor_sub_assign_g(/;"	d
_spinor_sub_f	Include/suN.h	/^#define _spinor_sub_f(/;"	d
_spinor_sub_g	Include/suN.h	/^#define _spinor_sub_g(/;"	d
_spinor_zero_f	Include/suN.h	/^#define _spinor_zero_f(/;"	d
_spinor_zero_g	Include/suN.h	/^#define _spinor_zero_g(/;"	d
_suNf_FMAT	Include/suN.h	/^#define _suNf_FMAT(/;"	d
_suNf_FMAT_zero	Include/suN.h	/^#define _suNf_FMAT_zero(/;"	d
_suNf_add_assign	Include/suN.h	/^#define _suNf_add_assign(/;"	d
_suNf_av_flt_read_gpu	Include/suN.h	/^#define _suNf_av_flt_read_gpu(/;"	d
_suNf_av_flt_write_gpu	Include/suN.h	/^#define _suNf_av_flt_write_gpu(/;"	d
_suNf_av_read_gpu	Include/suN.h	/^#define _suNf_av_read_gpu(/;"	d
_suNf_av_write_gpu	Include/suN.h	/^#define _suNf_av_write_gpu(/;"	d
_suNf_dagger	Include/suN.h	/^#define _suNf_dagger(/;"	d
_suNf_dagger_times_suNf	Include/suN.h	/^#define _suNf_dagger_times_suNf(/;"	d
_suNf_flt_read_gpu	Include/suN.h	/^#define _suNf_flt_read_gpu(/;"	d
_suNf_flt_write_gpu	Include/suN.h	/^#define _suNf_flt_write_gpu(/;"	d
_suNf_inverse_multiply	Include/suN.h	/^#define _suNf_inverse_multiply(/;"	d
_suNf_inverse_prop_multiply	Include/propagator.h	/^#define _suNf_inverse_prop_multiply(/;"	d
_suNf_minus	Include/suN.h	/^#define _suNf_minus(/;"	d
_suNf_mul	Include/suN.h	/^#define _suNf_mul(/;"	d
_suNf_multiply	Include/suN.h	/^#define _suNf_multiply(/;"	d
_suNf_prop_multiply	Include/propagator.h	/^#define _suNf_prop_multiply(/;"	d
_suNf_read_gpu	Include/suN.h	/^#define _suNf_read_gpu(/;"	d
_suNf_read_spinor_flt_gpu	Include/suN.h	/^#define _suNf_read_spinor_flt_gpu(/;"	d
_suNf_read_spinor_gpu	Include/suN.h	/^#define _suNf_read_spinor_gpu(/;"	d
_suNf_sqnorm	Include/suN.h	/^#define _suNf_sqnorm(/;"	d
_suNf_sub_assign	Include/suN.h	/^#define _suNf_sub_assign(/;"	d
_suNf_theta_T_inverse_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_T_inverse_multiply(/;"	d	file:
_suNf_theta_T_inverse_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_T_inverse_multiply(/;"	d	file:
_suNf_theta_T_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_T_multiply(/;"	d	file:
_suNf_theta_T_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_T_multiply(/;"	d	file:
_suNf_theta_X_inverse_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_X_inverse_multiply(/;"	d	file:
_suNf_theta_X_inverse_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_X_inverse_multiply(/;"	d	file:
_suNf_theta_X_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_X_multiply(/;"	d	file:
_suNf_theta_X_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_X_multiply(/;"	d	file:
_suNf_theta_Y_inverse_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_Y_inverse_multiply(/;"	d	file:
_suNf_theta_Y_inverse_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_Y_inverse_multiply(/;"	d	file:
_suNf_theta_Y_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_Y_multiply(/;"	d	file:
_suNf_theta_Y_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_Y_multiply(/;"	d	file:
_suNf_theta_Z_inverse_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_Z_inverse_multiply(/;"	d	file:
_suNf_theta_Z_inverse_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_Z_inverse_multiply(/;"	d	file:
_suNf_theta_Z_multiply	LibHR/Update/Dphi.c	/^#define _suNf_theta_Z_multiply(/;"	d	file:
_suNf_theta_Z_multiply	LibHR/Update/Dphi_flt.c	/^#define _suNf_theta_Z_multiply(/;"	d	file:
_suNf_times_suNf	Include/suN.h	/^#define _suNf_times_suNf(/;"	d
_suNf_times_suNf_dagger	Include/suN.h	/^#define _suNf_times_suNf_dagger(/;"	d
_suNf_trace_re	Include/suN.h	/^#define _suNf_trace_re(/;"	d
_suNf_unit	Include/suN.h	/^#define _suNf_unit(/;"	d
_suNf_write_gpu	Include/suN.h	/^#define _suNf_write_gpu(/;"	d
_suNf_write_spinor_flt_gpu	Include/suN.h	/^#define _suNf_write_spinor_flt_gpu(/;"	d
_suNf_write_spinor_gpu	Include/suN.h	/^#define _suNf_write_spinor_gpu(/;"	d
_suNf_zero	Include/suN.h	/^#define _suNf_zero(/;"	d
_suNfc_FMAT	Include/suN.h	/^#define _suNfc_FMAT(/;"	d
_suNfc_FMAT_zero	Include/suN.h	/^#define _suNfc_FMAT_zero(/;"	d
_suNfc_add_assign	Include/suN.h	/^#define _suNfc_add_assign(/;"	d
_suNfc_dagger	Include/suN.h	/^#define _suNfc_dagger(/;"	d
_suNfc_dagger_times_suNfc	Include/suN.h	/^#define _suNfc_dagger_times_suNfc(/;"	d
_suNfc_flt_read_gpu	Include/suN.h	/^#define _suNfc_flt_read_gpu(/;"	d
_suNfc_flt_write_gpu	Include/suN.h	/^#define _suNfc_flt_write_gpu(/;"	d
_suNfc_inverse_multiply	Include/suN.h	/^#define _suNfc_inverse_multiply(/;"	d
_suNfc_minus	Include/suN.h	/^#define _suNfc_minus(/;"	d
_suNfc_mul	Include/suN.h	/^#define _suNfc_mul(/;"	d
_suNfc_mulc	Include/suN.h	/^#define _suNfc_mulc(/;"	d
_suNfc_multiply	Include/suN.h	/^#define _suNfc_multiply(/;"	d
_suNfc_read_gpu	Include/suN.h	/^#define _suNfc_read_gpu(/;"	d
_suNfc_sqnorm	Include/suN.h	/^#define _suNfc_sqnorm(/;"	d
_suNfc_sqnorm_m1	Include/suN.h	/^#define _suNfc_sqnorm_m1(/;"	d
_suNfc_sub_assign	Include/suN.h	/^#define _suNfc_sub_assign(/;"	d
_suNfc_times_suNfc	Include/suN.h	/^#define _suNfc_times_suNfc(/;"	d
_suNfc_times_suNfc_dagger	Include/suN.h	/^#define _suNfc_times_suNfc_dagger(/;"	d
_suNfc_trace_im	Include/suN.h	/^#define _suNfc_trace_im(/;"	d
_suNfc_trace_re	Include/suN.h	/^#define _suNfc_trace_re(/;"	d
_suNfc_unit	Include/suN.h	/^#define _suNfc_unit(/;"	d
_suNfc_write_gpu	Include/suN.h	/^#define _suNfc_write_gpu(/;"	d
_suNfc_zero	Include/suN.h	/^#define _suNfc_zero(/;"	d
_suNg_FMAT	Include/suN.h	/^#define _suNg_FMAT(/;"	d
_suNg_FMAT_zero	Include/suN.h	/^#define _suNg_FMAT_zero(/;"	d
_suNg_add_assign	Include/suN.h	/^#define _suNg_add_assign(/;"	d
_suNg_av_flt_read_gpu	Include/suN.h	/^#define _suNg_av_flt_read_gpu(/;"	d
_suNg_av_flt_write_gpu	Include/suN.h	/^#define _suNg_av_flt_write_gpu(/;"	d
_suNg_av_read_gpu	Include/suN.h	/^#define _suNg_av_read_gpu(/;"	d
_suNg_av_write_gpu	Include/suN.h	/^#define _suNg_av_write_gpu(/;"	d
_suNg_dagger	Include/suN.h	/^#define _suNg_dagger(/;"	d
_suNg_dagger_times_suNg	Include/suN.h	/^#define _suNg_dagger_times_suNg(/;"	d
_suNg_flt_read_gpu	Include/suN.h	/^#define _suNg_flt_read_gpu(/;"	d
_suNg_flt_write_gpu	Include/suN.h	/^#define _suNg_flt_write_gpu(/;"	d
_suNg_inverse_multiply	Include/suN.h	/^#define _suNg_inverse_multiply(/;"	d
_suNg_minus	Include/suN.h	/^#define _suNg_minus(/;"	d
_suNg_mul	Include/suN.h	/^#define _suNg_mul(/;"	d
_suNg_mulc	Include/suN.h	/^#define _suNg_mulc(/;"	d
_suNg_multiply	Include/suN.h	/^#define _suNg_multiply(/;"	d
_suNg_read_gpu	Include/suN.h	/^#define _suNg_read_gpu(/;"	d
_suNg_read_spinor_flt_gpu	Include/suN.h	/^#define _suNg_read_spinor_flt_gpu(/;"	d
_suNg_read_spinor_gpu	Include/suN.h	/^#define _suNg_read_spinor_gpu(/;"	d
_suNg_sqnorm	Include/suN.h	/^#define _suNg_sqnorm(/;"	d
_suNg_sqnorm_m1	Include/suN.h	/^#define _suNg_sqnorm_m1(/;"	d
_suNg_sub_assign	Include/suN.h	/^#define _suNg_sub_assign(/;"	d
_suNg_times_suNg	Include/suN.h	/^#define _suNg_times_suNg(/;"	d
_suNg_times_suNg_dagger	Include/suN.h	/^#define _suNg_times_suNg_dagger(/;"	d
_suNg_trace_im	Include/suN.h	/^#define _suNg_trace_im(/;"	d
_suNg_trace_re	Include/suN.h	/^#define _suNg_trace_re(/;"	d
_suNg_unit	Include/suN.h	/^#define _suNg_unit(/;"	d
_suNg_write_gpu	Include/suN.h	/^#define _suNg_write_gpu(/;"	d
_suNg_write_spinor_flt_gpu	Include/suN.h	/^#define _suNg_write_spinor_flt_gpu(/;"	d
_suNg_write_spinor_gpu	Include/suN.h	/^#define _suNg_write_spinor_gpu(/;"	d
_suNg_zero	Include/suN.h	/^#define _suNg_zero(/;"	d
_update_par	TestProgram/RotatedSF/check_rotatedsf_1.c	/^rhmc_par _update_par={0};$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_10.c	/^rhmc_par _update_par;$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_2.c	/^rhmc_par _update_par={0};$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_3.c	/^rhmc_par _update_par={0};$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_4.c	/^rhmc_par _update_par={0};$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_5.c	/^rhmc_par _update_par;$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_6.c	/^rhmc_par _update_par;$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_7.c	/^rhmc_par _update_par;$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_8.c	/^rhmc_par _update_par;$/;"	v
_update_par	TestProgram/RotatedSF/check_rotatedsf_9.c	/^rhmc_par _update_par;$/;"	v
_vector_add_assign_f	Include/suN.h	/^#define _vector_add_assign_f(/;"	d
_vector_add_assign_g	Include/suN.h	/^#define _vector_add_assign_g(/;"	d
_vector_add_f	Include/suN.h	/^#define _vector_add_f(/;"	d
_vector_add_g	Include/suN.h	/^#define _vector_add_g(/;"	d
_vector_clc_add_assign_f	Include/suN.h	/^#define _vector_clc_add_assign_f(/;"	d
_vector_clc_add_assign_g	Include/suN.h	/^#define _vector_clc_add_assign_g(/;"	d
_vector_clc_f	Include/suN.h	/^#define _vector_clc_f(/;"	d
_vector_clc_g	Include/suN.h	/^#define _vector_clc_g(/;"	d
_vector_i_add_assign_f	Include/suN.h	/^#define _vector_i_add_assign_f(/;"	d
_vector_i_add_assign_g	Include/suN.h	/^#define _vector_i_add_assign_g(/;"	d
_vector_i_add_f	Include/suN.h	/^#define _vector_i_add_f(/;"	d
_vector_i_add_g	Include/suN.h	/^#define _vector_i_add_g(/;"	d
_vector_i_minus_f	Include/suN.h	/^#define _vector_i_minus_f(/;"	d
_vector_i_minus_g	Include/suN.h	/^#define _vector_i_minus_g(/;"	d
_vector_i_plus_f	Include/suN.h	/^#define _vector_i_plus_f(/;"	d
_vector_i_plus_g	Include/suN.h	/^#define _vector_i_plus_g(/;"	d
_vector_i_sub_assign_f	Include/suN.h	/^#define _vector_i_sub_assign_f(/;"	d
_vector_i_sub_assign_g	Include/suN.h	/^#define _vector_i_sub_assign_g(/;"	d
_vector_i_sub_f	Include/suN.h	/^#define _vector_i_sub_f(/;"	d
_vector_i_sub_g	Include/suN.h	/^#define _vector_i_sub_g(/;"	d
_vector_lc_add_assign_f	Include/suN.h	/^#define _vector_lc_add_assign_f(/;"	d
_vector_lc_add_assign_g	Include/suN.h	/^#define _vector_lc_add_assign_g(/;"	d
_vector_lc_f	Include/suN.h	/^#define _vector_lc_f(/;"	d
_vector_lc_g	Include/suN.h	/^#define _vector_lc_g(/;"	d
_vector_minus_f	Include/suN.h	/^#define _vector_minus_f(/;"	d
_vector_minus_g	Include/suN.h	/^#define _vector_minus_g(/;"	d
_vector_mul_add_assign_f	Include/suN.h	/^#define _vector_mul_add_assign_f(/;"	d
_vector_mul_add_assign_g	Include/suN.h	/^#define _vector_mul_add_assign_g(/;"	d
_vector_mul_f	Include/suN.h	/^#define _vector_mul_f(/;"	d
_vector_mul_g	Include/suN.h	/^#define _vector_mul_g(/;"	d
_vector_mulc_add_assign_f	Include/suN.h	/^#define _vector_mulc_add_assign_f(/;"	d
_vector_mulc_add_assign_g	Include/suN.h	/^#define _vector_mulc_add_assign_g(/;"	d
_vector_mulc_f	Include/suN.h	/^#define _vector_mulc_f(/;"	d
_vector_mulc_g	Include/suN.h	/^#define _vector_mulc_g(/;"	d
_vector_mulc_star_f	Include/suN.h	/^#define _vector_mulc_star_f(/;"	d
_vector_mulc_star_g	Include/suN.h	/^#define _vector_mulc_star_g(/;"	d
_vector_prod_add_assign_im_f	Include/suN.h	/^#define _vector_prod_add_assign_im_f(/;"	d
_vector_prod_add_assign_im_g	Include/suN.h	/^#define _vector_prod_add_assign_im_g(/;"	d
_vector_prod_add_assign_re_f	Include/suN.h	/^#define _vector_prod_add_assign_re_f(/;"	d
_vector_prod_add_assign_re_g	Include/suN.h	/^#define _vector_prod_add_assign_re_g(/;"	d
_vector_prod_assign_f	Include/suN.h	/^#define _vector_prod_assign_f(/;"	d
_vector_prod_assign_g	Include/suN.h	/^#define _vector_prod_assign_g(/;"	d
_vector_prod_im_f	Include/suN.h	/^#define _vector_prod_im_f(/;"	d
_vector_prod_im_g	Include/suN.h	/^#define _vector_prod_im_g(/;"	d
_vector_prod_re_f	Include/suN.h	/^#define _vector_prod_re_f(/;"	d
_vector_prod_re_g	Include/suN.h	/^#define _vector_prod_re_g(/;"	d
_vector_prod_sub_assign_im_f	Include/suN.h	/^#define _vector_prod_sub_assign_im_f(/;"	d
_vector_prod_sub_assign_im_g	Include/suN.h	/^#define _vector_prod_sub_assign_im_g(/;"	d
_vector_prod_sub_assign_re_f	Include/suN.h	/^#define _vector_prod_sub_assign_re_f(/;"	d
_vector_prod_sub_assign_re_g	Include/suN.h	/^#define _vector_prod_sub_assign_re_g(/;"	d
_vector_project_f	Include/suN.h	/^#define _vector_project_f(/;"	d
_vector_project_g	Include/suN.h	/^#define _vector_project_g(/;"	d
_vector_sub_assign_f	Include/suN.h	/^#define _vector_sub_assign_f(/;"	d
_vector_sub_assign_g	Include/suN.h	/^#define _vector_sub_assign_g(/;"	d
_vector_sub_f	Include/suN.h	/^#define _vector_sub_f(/;"	d
_vector_sub_g	Include/suN.h	/^#define _vector_sub_g(/;"	d
_vector_zero_f	Include/suN.h	/^#define _vector_zero_f(/;"	d
_vector_zero_g	Include/suN.h	/^#define _vector_zero_g(/;"	d
a	Include/rational_functions.h	/^  double *a;$/;"	m	struct:_rational_app
a	LibHR/Update/remez/alg_remez.h	/^  bigfloat *a;$/;"	m	class:AlgRemez
aXa_perm	LibHR/Observables/wilsonloops.c	/^static int aXa_perm[1][3]={{0,1,2}};$/;"	v	file:
aXb_perm	LibHR/Observables/wilsonloops.c	/^static int aXb_perm[2][3]={{0,1,2},{2,1,0}};$/;"	v	file:
a_length	LibHR/Update/remez/alg_remez.h	/^  int a_length;$/;"	m	class:AlgRemez
a_power	LibHR/Update/remez/alg_remez.h	/^  int *a_power;$/;"	m	class:AlgRemez
aa	LibHR/Inverters/eva.c	/^static complex *aa,*bb,*cc,*vv;$/;"	v	file:
aaX_perm	LibHR/Observables/wilsonloops.c	/^static int aaX_perm[1][3]={{0,1,2}};$/;"	v	file:
aaa_perm	LibHR/Observables/wilsonloops.c	/^static int aaa_perm[1][3]={{0,1,2}};$/;"	v	file:
aab_perm	LibHR/Observables/wilsonloops.c	/^static int aab_perm[3][3]={{0,1,2},{0,2,1},{2,1,0}};$/;"	v	file:
abX_perm	LibHR/Observables/wilsonloops.c	/^static int abX_perm[2][3]={{0,1,2},{1,0,2}};$/;"	v	file:
abb_perm	LibHR/Observables/wilsonloops.c	/^static int abb_perm[3][3]={{0,1,2},{1,0,2},{2,1,0}};$/;"	v	file:
abc_perm	LibHR/Observables/wilsonloops.c	/^static int abc_perm[6][3]={{0,1,2},{1,2,0},{2,0,1},{2,1,0},{1,0,2},{0,2,1}};$/;"	v	file:
abs	LibHR/Geometry/geometry_mpi_eo.c	/^inline int abs(int n){$/;"	f
abs	Make/Utils/autosun/complex.h	/^	friend FLOATING abs(const complex& z) { return sqrt(z.re*z.re+z.im*z.im); }$/;"	f	class:complex
abs_bf	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat abs_bf(const bigfloat& x){$/;"	f	class:bigfloat
action	LibHR/Update/monomials.c	/^static mon_list *action=NULL;$/;"	v	file:
add	Make/Utils/autosun/complex.h	/^	void add(const complex& a)$/;"	f	class:complex
add	Make/Utils/autosun/list.h	/^	virtual void add(const orderedlist<INDEX,VALUE>& list)$/;"	f	class:orderedlist
add	Make/Utils/autosun/list.h	/^	void add(const INDEX& index, const VALUE& value)$/;"	f	class:orderedlist
add	Make/Utils/autosun/sparse.h	/^	virtual void add(const orderedlist<INDEX,VALUE>& l)$/;"	f	class:sparselinear
add	Make/Utils/autosun/sparse.h	/^	void add(int row, const VALUE& value)$/;"	f	class:sparsevector
add	Make/Utils/autosun/sparse.h	/^	void add(int row, int col, const VALUE& value)$/;"	f	class:sparsematrix
add_channel	Analysis/Mesons/bs_ctrl.cpp	/^void primary_ctrl::add_channel(const char * c1){$/;"	f	class:primary_ctrl
add_dirname	HMC/hmc_utils.c	/^static char *add_dirname(char *dirname, char *filename) {$/;"	f	file:
add_dirname	PureGauge/suN_utils.c	/^static char *add_dirname(char *dirname, char *filename) {$/;"	f	file:
add_dot	Make/Utils/autosun/sparse.h	/^	void add_dot(const sparsematrix<VALUE>& p, const sparsevector<VALUE>& v)$/;"	f	class:sparsevector
add_local_action	Include/update.h	/^  void (*add_local_action)(const struct _monomial *m, scalar_field *loc_action);$/;"	m	struct:_monomial
add_meson_observable	LibHR/Observables/measure_mesons.c	/^static void add_meson_observable(meson_observable** mop, gamma_ind ind1, gamma_ind ind2, char* channel_name, char* channel_type,double sign){$/;"	f	file:
add_meson_observable	LibHR/Observables/measure_mesons_ff.c	/^static void add_meson_observable(meson_observable** mop, gamma_ind ind1, gamma_ind ind2, char* channel_name, char* channel_type,double sign){$/;"	f	file:
add_momentum	LibHR/Observables/sources.c	/^void add_momentum(spinor_field* out, spinor_field* in, int px, int py, int pz)$/;"	f
add_mon	LibHR/Update/monomials.c	/^const monomial *add_mon(monomial_data *mon_dat) {$/;"	f
add_monomial_to_integrator	LibHR/IO/read_action.c	/^static void add_monomial_to_integrator(const monomial *m, int level)$/;"	f	file:
add_mult	Make/Utils/autosun/complex.h	/^	void add_mult(const complex& a, const complex& b)$/;"	f	class:complex
add_mult	Make/Utils/autosun/polynomial.h	/^	void add_mult(const polynomial& a, const polynomial& b)$/;"	f	class:polynomial
add_mult	Make/Utils/autosun/sparse.h	/^	void add_mult(const sparsematrix<VALUE>& p, const sparsematrix<VALUE>& q)$/;"	f	class:sparsematrix
add_par	Include/inverters.h	/^	 void *add_par; \/* additional parameters for specific inverters *\/$/;"	m	struct:_mshift_par
add_source_sink_contraction	LibHR/Observables/trunc_hairpin.c	/^static void add_source_sink_contraction(complex *out, spinor_field *source, spinor_field *sink, double z) {$/;"	f	file:
add_to_v	LibHR/Update/rect_staples.c	/^static void add_to_v(suNg *v){$/;"	f	file:
addlrecord	LibHR/IO/logger.c	/^static void addlrecord(lrecord **list, char* name, int level) {$/;"	f	file:
addr	LibHR/Memory/amalloc.c	/^   char *addr;$/;"	m	struct:addr_t	file:
addr	LibHR/Memory/amalloc.c	/^  void* addr;$/;"	m	struct:__anon48	file:
addr_t	LibHR/Memory/amalloc.c	/^struct addr_t$/;"	s	file:
addrecord	LibHR/IO/logger.c	/^static void addrecord(record **list, char* name, FILE* file) {$/;"	f	file:
adj_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define adj_mat(/;"	d	file:
adjoint	Make/Utils/autosun/sparse.h	/^	virtual void adjoint()$/;"	f	class:sparsematrix
afree	LibHR/Memory/amalloc.c	/^void afree(void *addr)$/;"	f
algebra_project	Make/Utils/autosun/representation.h	/^string algebra_project(const char* hname, const char* mname)$/;"	f
algebra_represent	Make/Utils/autosun/representation.h	/^string algebra_represent(const char* mname, const char* hname)$/;"	f
all	Analysis/Mesons/bs_ctrl.cpp	/^set<eval_ctrl*> eval_ctrl::all;$/;"	m	class:eval_ctrl	file:
all	Analysis/Mesons/bs_ctrl.h	/^  static std::set<eval_ctrl*> all;$/;"	m	class:eval_ctrl
all_der	Analysis/Mesons/bs_ctrl.cpp	/^set<derived_ctrl*> derived_ctrl::all_der;$/;"	m	class:derived_ctrl	file:
all_der	Analysis/Mesons/bs_ctrl.h	/^  static std::set<derived_ctrl*> all_der;$/;"	m	class:derived_ctrl
all_pr	Analysis/Mesons/bs_ctrl.cpp	/^set<primary_ctrl*> primary_ctrl::all_pr;$/;"	m	class:primary_ctrl	file:
all_pr	Analysis/Mesons/bs_ctrl.h	/^  static std::set<primary_ctrl*> all_pr;$/;"	m	class:primary_ctrl
alloc	LibHR/Update/remez/alg_remez.h	/^  int alloc;$/;"	m	class:AlgRemez
alloc_aux	LibHR/Inverters/eva.c	/^static int alloc_aux(int nevt)$/;"	f	file:
alloc_loc_mem	LibHR/Utils/eva_deflation.c	/^static int alloc_loc_mem(unsigned int nevt, geometry_descriptor *type) {$/;"	f	file:
alloc_mem	LibHR/Geometry/geometry_init.c	/^static int *alloc_mem=NULL;$/;"	v	file:
alloc_ws_rotate	LibHR/Inverters/eva.c	/^static void alloc_ws_rotate(void) {$/;"	f	file:
alloc_ws_rotate	TestProgram/SpinorField/check_spinorfield_1.c	/^static void alloc_ws_rotate(void)$/;"	f	file:
allocate	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::allocate(int num_degree, int den_degree)$/;"	f	class:AlgRemez
allocate_datamemory	Analysis/Mesons/bs_ctrl.cpp	/^void derived_ctrl::allocate_datamemory(int lt) {$/;"	f	class:derived_ctrl
allocate_datamemory	Analysis/Mesons/bs_ctrl.cpp	/^void primary_ctrl::allocate_datamemory(int lt) {$/;"	f	class:primary_ctrl
allocate_datamemory	Analysis/Mesons/bs_ctrl.cpp	/^void ratio_ctrl::allocate_datamemory(int lt) {$/;"	f	class:ratio_ctrl
allocate_datamemory	Analysis/Mesons/bs_ctrl.h	/^  virtual void allocate_datamemory(int lt) {};$/;"	f	class:eval_ctrl
allocated	LibHR/Memory/amalloc.c	/^static mem_map_t *allocated = NULL;$/;"	v	file:
amalloc	LibHR/Memory/amalloc.c	/^void *amalloc(size_t size,int p)$/;"	f
antisym	Analysis/Mesons/bs_reader.cpp	/^static void antisym(int n, double *data) {$/;"	f	file:
apend	LibHR/Update/remez/alg_remez.h	/^  bigfloat apstrt, apwidt, apend;$/;"	m	class:AlgRemez
append_block	LibHR/Geometry/test_geometry_mpi.c	/^static void append_block(block_info* nb) {$/;"	f	file:
apply_BCs_on_fundamental_gauge_field	LibHR/Utils/boundary_conditions.c	/^void apply_BCs_on_fundamental_gauge_field() {$/;"	f
apply_BCs_on_momentum_field	LibHR/Utils/boundary_conditions.c	/^void apply_BCs_on_momentum_field(suNg_av_field *force) {$/;"	f
apply_BCs_on_represented_gauge_field	LibHR/Utils/boundary_conditions.c	/^void apply_BCs_on_represented_gauge_field() {$/;"	f
apply_BCs_on_spinor_field	LibHR/Utils/boundary_conditions.c	/^void apply_BCs_on_spinor_field(spinor_field *sp) {$/;"	f
apply_BCs_on_spinor_field_flt	LibHR/Utils/boundary_conditions.c	/^void apply_BCs_on_spinor_field_flt(spinor_field_flt *sp) {$/;"	f
apply_background_field_zdir	LibHR/Utils/background_field.c	/^void apply_background_field_zdir(suNg_field* V,double Q,int n) {$/;"	f
apply_cheby	LibHR/Inverters/eva.c	/^static void apply_cheby(int k,double lbnd,double ubnd,$/;"	f	file:
apply_operator	Reweight/reweight.c	/^double apply_operator(double *old, double *new, spinor_field *in)$/;"	f
approx	LibHR/Update/remez/alg_remez.C	/^bigfloat AlgRemez::approx(const bigfloat x) {$/;"	f	class:AlgRemez
approx	ModeNumber/mk_modenumber.c	/^  char approx[512];$/;"	m	struct:_input_nu	file:
apstrt	LibHR/Update/remez/alg_remez.h	/^  bigfloat apstrt, apwidt, apend;$/;"	m	class:AlgRemez
apwidt	LibHR/Update/remez/alg_remez.h	/^  bigfloat apstrt, apwidt, apend;$/;"	m	class:AlgRemez
arg	Make/Utils/autosun/complex.h	/^	friend FLOATING arg(const complex& z) { return atan2(z.im, z.re); }$/;"	f	class:complex
arithgeom3	LibHR/Update/remez/Zolotarev/zolotarev.c	/^static real arithgeom3(real z, real a, real b) {$/;"	f	file:
arithgeom_old	LibHR/Update/remez/Zolotarev/zolotarev.c	/^static real arithgeom_old(real z, real a, real b) {$/;"	f	file:
assign_s2sd	LibHR/Utils/single_double_utils.c	/^void assign_s2sd(spinor_field *out, spinor_field_flt *in) {$/;"	f
assign_sd2s	LibHR/Utils/single_double_utils.c	/^void assign_sd2s(spinor_field_flt *out, spinor_field *in) {$/;"	f
assign_ud2u_f	LibHR/Utils/single_double_utils.c	/^void assign_ud2u_f(void)$/;"	f
assignment	Make/Utils/autosun/matrix.h	/^	string assignment(const char* op, const char* name) const$/;"	f	class:pmatrix
assignment	Make/Utils/autosun/matrix.h	/^	string assignment(const char* op, const char* name) const$/;"	f	class:pvector
ata_qprop_free	LibHR/Observables/trunc_hairpin.c	/^void ata_qprop_free() {$/;"	f
ata_qprop_init	LibHR/Observables/trunc_hairpin.c	/^void ata_qprop_init(ata_qprop_pars *p) {$/;"	f
ata_qprop_pars	Include/observables.h	/^} ata_qprop_pars;$/;"	t	typeref:struct:_ata_qprop_pars
ata_qprop_var	Spectrum/trunc_mesons.c	/^input_ata_qprop ata_qprop_var = init_input_ata_qprop(ata_qprop_var);$/;"	v
auto_corr	LibHR/Statistics/base_stat.c	/^void auto_corr(int n,double a[],int tmax,double gamma[])$/;"	f
auto_corr_time	LibHR/Statistics/jacknife.c	/^double auto_corr_time(int n,int tmax,double g[],int *flag)$/;"	f
autocorr	Analysis/Mesons/datasample.cpp	/^estimate datasample::autocorr() const {$/;"	f	class:datasample
average	LibHR/Statistics/base_stat.c	/^double average(int n,double a[])$/;"	f
avr	Analysis/Mesons/datasample.cpp	/^estimate datasample::avr() const {$/;"	f	class:datasample
avr_plaquette	LibHR/Observables/avr_plaquette.c	/^double avr_plaquette()$/;"	f
avr_rect_1x2	LibHR/Observables/avr_rect.c	/^double avr_rect_1x2()$/;"	f
b	GaugeFix/gaugefix_measure.c	/^  double b, m;$/;"	m	struct:__anon8	file:
b	GaugeFix/gaugefix_unittest.c	/^  double b, m;$/;"	m	struct:__anon10	file:
b	HMC/hmc_forces.c	/^  double b, m;$/;"	m	struct:__anon12	file:
b	Include/rational_functions.h	/^  double *b;$/;"	m	struct:_rational_app
b	Include/update.h	/^  double b;$/;"	m	struct:__anon39
b	LibHR/Update/mre.c	/^static complex b[MAX];$/;"	v	file:
b	ModeNumber/mk_eigvals.c	/^  double b, m;$/;"	m	struct:__anon71	file:
b	ModeNumber/mk_modenumber.c	/^  double b, m;$/;"	m	struct:__anon73	file:
b	RenormalizationFactors/measure_Z_mom.c	/^  double b, m;$/;"	m	struct:__anon75	file:
b	Scattering/IOroutines.c	/^	double b, m;$/;"	m	struct:__anon78	file:
b	Scattering/meson_scattering.c	/^	double b, m;$/;"	m	struct:__anon80	file:
b	Spectrum/measure_formfactor.c	/^  double b, m;$/;"	m	struct:__anon83	file:
b	Spectrum/measure_spectrum.c	/^  double b, m;$/;"	m	struct:__anon85	file:
b	Spectrum/mk_mesons.c	/^  double b, m;$/;"	m	struct:__anon87	file:
b	Spectrum/mk_mesons_with_z2semwall.c	/^  double b, m;$/;"	m	struct:__anon89	file:
b	Spectrum/mk_mesons_with_z2semwall_new.c	/^  double b, m;$/;"	m	struct:__anon91	file:
b	Spectrum/mk_sfcoupling.c	/^  double b, m;$/;"	m	struct:__anon93	file:
b	Spectrum/trunc_mesons.c	/^  double b, m;$/;"	m	struct:__anon95	file:
b	StaticPotential/mk_polyakov_loops.c	/^  double b, m;$/;"	m	struct:__anon97	file:
b	StaticPotential/mk_wilsonloops.c	/^  double b, m;$/;"	m	struct:__anon99	file:
b	StaticPotential/tune_HYP_smearing.c	/^  double b, m;$/;"	m	struct:__anon101	file:
b	TestProgram/Deflate/check_deflate.c	/^  double b, m;$/;"	m	struct:__anon104	file:
b	TestProgram/Propagator/check_propagator.c	/^  double b, m;$/;"	m	struct:__anon107	file:
b	WilsonFlow/WF_measure.c	/^  double b, m;$/;"	m	struct:__anon113	file:
b	WilsonFlow/WF_measure_adaptative.c	/^  double b, m;$/;"	m	struct:__anon115	file:
b_sample	Analysis/Mesons/bootstrap.cpp	/^void b_sample(int len, int elen, int *bs){$/;"	f
b_start	LibHR/Geometry/geometry_mpi_eo.c	/^  int b_start[4];$/;"	m	struct:__anon44	file:
b_type	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int b_type[4];          \/* NOT_ASSIGNED ; INNER ; LBORDER ; RBORDER ; LBUFFER ; RBUFFER *\/$/;"	m	struct:_site_info	file:
b_width	LibHR/Geometry/geometry_mpi_eo.c	/^  int b_width[4];$/;"	m	struct:__anon44	file:
background_field	Spectrum/measure_spectrum.c	/^	int background_field;$/;"	m	struct:_input_mesons	file:
base	Analysis/Mesons/ranlxs.cpp	/^static double sbase,sone_bit,base,one_bit,shift;$/;"	v	file:
bb	LibHR/Inverters/eva.c	/^static complex *aa,*bb,*cc,*vv;$/;"	v	file:
bcast	LibHR/Geometry/communications.c	/^void bcast(double *d, int n) {$/;"	f
bcast_int	LibHR/Geometry/communications.c	/^void bcast_int(int *i, int n) {$/;"	f
bcpar_var	Spectrum/mk_sfcoupling.c	/^input_bcpar bcpar_var = init_input_bcpar( bcpar_var );$/;"	v
beta	Converter/ChromaUtils/main.c	/^  double beta;    int beta_f;$/;"	m	struct:_filename_type	file:
beta	Converter/ChromaUtils/qdp-config.h	/^  double beta;$/;"	m	struct:__anon5
beta	Converter/converter.c	/^  double beta;    int beta_f;$/;"	m	struct:_filename_type	file:
beta	HMC/hmc_utils.c	/^static double beta(){$/;"	f	file:
beta	Include/update.h	/^  double beta;$/;"	m	struct:_mon_pg_par
beta	PureGauge/suN_utils.h	/^  double beta;$/;"	m	struct:_input_pg
beta	Spectrum/mk_sfcoupling.c	/^  double beta;$/;"	m	struct:_input_sfc	file:
beta	TestProgram/Inverters/check_inverters_1.c	/^double beta;$/;"	v
beta	TestProgram/Inverters/check_inverters_2.c	/^double beta;$/;"	v
beta	TestProgram/Inverters/check_inverters_3.c	/^double beta;$/;"	v
beta	TestProgram/Inverters/check_inverters_5.c	/^double beta;$/;"	v
beta	TestProgram/Inverters/check_inverters_6.c	/^double beta;$/;"	v
beta	TestProgram/Inverters/check_inverters_7.c	/^double beta;$/;"	v
beta	TestProgram/Inverters/check_inverters_8.c	/^double beta;$/;"	v
beta	TestProgram/Inverters/check_inverters_SAP.c	/^double beta;$/;"	v
beta	TestProgram/Update/check_update_1.c	/^double beta;$/;"	v
beta	WilsonFlow/WF_measure.c	/^  double beta;$/;"	m	struct:_input_SF	file:
beta	WilsonFlow/WF_measure_adaptative.c	/^  double beta;$/;"	m	struct:_input_SF	file:
beta_f	Converter/ChromaUtils/main.c	/^  double beta;    int beta_f;$/;"	m	struct:_filename_type	file:
beta_f	Converter/converter.c	/^  double beta;    int beta_f;$/;"	m	struct:_filename_type	file:
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat() { mpf_init(x); }$/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat(const bigfloat& y) { mpf_init_set(x, y.x); }$/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat(const char *str) { mpf_init_set_str(x, (char*)str, 10); }$/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat(const double d) { mpf_init_set_d(x, d); }  $/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat(const float d) { mpf_init_set_d(x, (double)d); }$/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat(const int i) {mpf_init_set_si(x,(long)i);}$/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat(const long i) { mpf_init_set_si(x, i); }$/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^  bigfloat(const unsigned long u) { mpf_init_set_ui(x, u); }$/;"	f	class:bigfloat
bigfloat	LibHR/Update/remez/bigfloat.h	/^class bigfloat {$/;"	c
bin	Analysis/Mesons/effective_mass.cpp	/^double bin(int n, int k) {$/;"	f
block_cond	LibHR/Geometry/geometry_mpi_eo.c	/^static unsigned int block_cond(int b1,int b2,int x){$/;"	f	file:
block_info	LibHR/Geometry/test_geometry_mpi.c	/^} block_info;$/;"	t	typeref:struct:_block_info	file:
block_size	LibHR/Geometry/blocked.c	/^static int block_size(int L)$/;"	f	file:
blocks	LibHR/Geometry/test_geometry_mpi.c	/^static block_info* blocks=NULL;$/;"	v	file:
blsize	Analysis/Mesons/bs_mesons.cpp	/^int blsize=0;$/;"	v
border	LibHR/Geometry/geometry_mpi_eo.c	/^static border_id *border=NULL;$/;"	v	file:
border_checksum	LibHR/Geometry/geometry_mpi_eo.c	/^static void border_checksum(int* checksum,int id_mask, int* bl_start,int* bl_width )$/;"	f	file:
border_id	LibHR/Geometry/geometry_mpi_eo.c	/^} border_id;$/;"	t	typeref:struct:__anon44	file:
bs_2nd	Analysis/Mesons/bs_ctrl.cpp	/^bool eval_ctrl::bs_2nd=false;$/;"	m	class:eval_ctrl	file:
bs_2nd	Analysis/Mesons/bs_ctrl.h	/^  static bool bs_2nd;$/;"	m	class:eval_ctrl
buf_gtf	LibHR/Observables/wilsonloops.c	/^static suNg* buf_gtf[3];$/;"	v	file:
buffer_size	LibHR/Geometry/geometry_mpi_eo.c	/^static void buffer_size(int i,int *tmp_width, int* tmp_start){$/;"	f	file:
buffer_thickness	LibHR/Geometry/test_geometry_mpi.c	/^static int buffer_thickness[4];$/;"	v	file:
build_y	Analysis/Mesons/effective_mass.cpp	/^void build_y(double *c, int n, double *dst) {$/;"	f
c	Include/propagator.h	/^  suNf_spin_matrix c[NF]; $/;"	m	struct:__anon19
c	Include/spin_matrix.h	/^   suNf_spinor c[4];$/;"	m	struct:__anon20
c	Include/suN_types.h	/^   complex c[2];$/;"	m	struct:__anon21
c	Include/suN_types.h	/^   complex c[3];$/;"	m	struct:__anon29
c	Include/suN_types.h	/^   complex c[4];$/;"	m	struct:__anon23
c	Include/suN_types.h	/^   complex c[9];$/;"	m	struct:__anon31
c	Include/suN_types.h	/^   complex_flt c[2];$/;"	m	struct:__anon22
c	Include/suN_types.h	/^   complex_flt c[3];$/;"	m	struct:__anon30
c	Include/suN_types.h	/^   complex_flt c[4];$/;"	m	struct:__anon24
c	Include/suN_types.h	/^   complex_flt c[9];$/;"	m	struct:__anon32
c	Include/suN_types.h	/^   double c[3];$/;"	m	struct:__anon27
c	Include/suN_types.h	/^   double c[9];$/;"	m	struct:__anon33
c	Include/suN_types.h	/^   float c[3];$/;"	m	struct:__anon28
c	Include/suN_types.h	/^   float c[9];$/;"	m	struct:__anon34
c	Include/suN_types.h	/^   suNf_vector c[4];$/;"	m	struct:__anon35
c	Include/suN_types.h	/^   suNf_vector_flt c[4];$/;"	m	struct:__anon36
c	Include/suN_types.h	/^   suNg_vector c[4];$/;"	m	struct:__anon25
c	Include/suN_types.h	/^   suNg_vector_flt c[4];$/;"	m	struct:__anon26
c	LibHR/Observables/wilsonloops.c	/^  int c[3];$/;"	m	struct:__anon54	file:
c	LibHR/Update/remez/main.C	/^	int c;$/;"	m	struct:_guess_inf	file:
c	ModeNumber/approx_for_modenumber.c	/^  double *c;$/;"	m	struct:__anon69	file:
c	ModeNumber/modenumber.c	/^static double c[NMAX+1];$/;"	v	file:
c	StaticPotential/mk_wilsonloops.c	/^  int c[10][3];$/;"	m	struct:_input_wilson	file:
c	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^  int c[3];$/;"	m	struct:__anon108	file:
c	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^  int c[3];$/;"	m	struct:__anon109	file:
c	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^  int c[3];$/;"	m	struct:__anon110	file:
c	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^  int c[3];$/;"	m	struct:__anon111	file:
c1	LibHR/Random/ranlxd.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon57	file:
c1	LibHR/Random/ranlxd.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon60	file:
c1	LibHR/Random/ranlxd.c	/^   vec_t c1,c2;$/;"	m	struct:__anon58	file:
c1	LibHR/Random/ranlxd.c	/^   vec_t c1,c2;$/;"	m	struct:__anon61	file:
c1	LibHR/Random/ranlxs.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon63	file:
c1	LibHR/Random/ranlxs.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon66	file:
c1	LibHR/Random/ranlxs.c	/^   vec_t c1,c2;$/;"	m	struct:__anon64	file:
c1	LibHR/Random/ranlxs.c	/^   vec_t c1,c2;$/;"	m	struct:__anon67	file:
c2	LibHR/Random/ranlxd.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon57	file:
c2	LibHR/Random/ranlxd.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon60	file:
c2	LibHR/Random/ranlxd.c	/^   vec_t c1,c2;$/;"	m	struct:__anon58	file:
c2	LibHR/Random/ranlxd.c	/^   vec_t c1,c2;$/;"	m	struct:__anon61	file:
c2	LibHR/Random/ranlxs.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon63	file:
c2	LibHR/Random/ranlxs.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon66	file:
c2	LibHR/Random/ranlxs.c	/^   vec_t c1,c2;$/;"	m	struct:__anon64	file:
c2	LibHR/Random/ranlxs.c	/^   vec_t c1,c2;$/;"	m	struct:__anon67	file:
c3	LibHR/Random/ranlxd.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon57	file:
c3	LibHR/Random/ranlxd.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon60	file:
c3	LibHR/Random/ranlxs.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon63	file:
c3	LibHR/Random/ranlxs.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon66	file:
c4	LibHR/Random/ranlxd.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon57	file:
c4	LibHR/Random/ranlxd.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon60	file:
c4	LibHR/Random/ranlxs.c	/^   float c1,c2,c3,c4;$/;"	m	struct:__anon63	file:
c4	LibHR/Random/ranlxs.c	/^   int c1,c2,c3,c4;$/;"	m	struct:__anon66	file:
c_type	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int c_type;             \/* NOT_ASSIGNED ; ORIGINAL; DUPLICATE *\/$/;"	m	struct:_site_info	file:
cabmar	LibHR/Update/cabmar.c	/^void cabmar(double beta,suNg *u,suNg *v,int type)$/;"	f
cabs	LibHR/Update/mre.c	/^#define cabs(/;"	d	file:
calc_deflated_propagator	LibHR/Observables/calc_prop.c	/^void calc_deflated_propagator(spinor_field *psi, spinor_field* eta, int ndilute, int Nuse){$/;"	f
calc_one_force	LibHR/Update/update_mt.c	/^void calc_one_force(int n_force){$/;"	f
calc_plaq	GaugeFix/gaugefix.c	/^double calc_plaq(suNg_field* V){$/;"	f
calc_propagator	LibHR/Observables/calc_prop.c	/^void calc_propagator(spinor_field *psi, spinor_field* eta, int ndilute){$/;"	f
calc_propagator_core	LibHR/Observables/calc_prop.c	/^static void calc_propagator_core(spinor_field *psi, spinor_field *eta, int solver) {$/;"	f	file:
calc_propagator_eo	LibHR/Observables/calc_prop.c	/^void calc_propagator_eo(spinor_field *psi, spinor_field *eta, int ndilute) {$/;"	f
calc_propagator_eo_core	LibHR/Observables/calc_prop.c	/^static void calc_propagator_eo_core(spinor_field *psi, spinor_field *eta, int solver) {$/;"	f	file:
calc_propagator_ff	LibHR/Observables/calc_prop_ff.c	/^void calc_propagator_ff(spinor_field *psi, spinor_field* eta, int ndilute){$/;"	f
calc_propagator_ff_core	LibHR/Observables/calc_prop_ff.c	/^static void calc_propagator_ff_core(spinor_field *psi, spinor_field *eta, int solver) {$/;"	f	file:
calc_propagator_ff_eo	LibHR/Observables/calc_prop_ff.c	/^void calc_propagator_ff_eo(spinor_field *psi, spinor_field *eta, int ndilute) {$/;"	f
calc_propagator_ff_eo_core	LibHR/Observables/calc_prop_ff.c	/^static void calc_propagator_ff_eo_core(spinor_field *psi, spinor_field *eta, int solver) {$/;"	f	file:
calc_propagator_ff_hopping_eo	LibHR/Observables/calc_prop_ff.c	/^void calc_propagator_ff_hopping_eo(spinor_field *psi, spinor_field *eta, int hopping, int ndilute) {$/;"	f
calc_propagator_ff_hopping_oe	LibHR/Observables/calc_prop_ff.c	/^void calc_propagator_ff_hopping_oe(spinor_field *psi, spinor_field *eta, int hopping, int ndilute) {$/;"	f
calc_propagator_ff_hopping_series	LibHR/Observables/calc_prop_ff.c	/^void calc_propagator_ff_hopping_series(spinor_field *psi, spinor_field *eta, int hopping, int ndilute) {$/;"	f
calc_propagator_ff_hopping_series_core	LibHR/Observables/calc_prop_ff.c	/^static void calc_propagator_ff_hopping_series_core(spinor_field *psi, spinor_field *eta) {$/;"	f	file:
calc_propagator_ff_oe	LibHR/Observables/calc_prop_ff.c	/^void calc_propagator_ff_oe(spinor_field *psi, spinor_field *eta, int ndilute) {$/;"	f
calc_propagator_ff_oe_core	LibHR/Observables/calc_prop_ff.c	/^static void calc_propagator_ff_oe_core(spinor_field *psi, spinor_field *eta, int solver) {$/;"	f	file:
calc_propagator_multisource	LibHR/Observables/calc_prop.c	/^void calc_propagator_multisource(spinor_field *psi, spinor_field* eta, int ndilute){$/;"	f
carry	Analysis/Mesons/ranlxs.cpp	/^static double zero,one,carry;$/;"	v	file:
carry	LibHR/Random/ranlxd.c	/^static vec_t carry;$/;"	v	file:
carry	LibHR/Random/ranlxd.c	/^static vec_t one,one_bit,carry;$/;"	v	file:
carry	LibHR/Random/ranlxs.c	/^static vec_t carry;$/;"	v	file:
carry	LibHR/Random/ranlxs.c	/^static vec_t one,one_bit,carry;$/;"	v	file:
cc	LibHR/Inverters/eva.c	/^static complex *aa,*bb,*cc,*vv;$/;"	v	file:
centered_prony_eff_mass_1	Analysis/Mesons/effective_mass.cpp	/^int centered_prony_eff_mass_1(double *y, double *m1) {$/;"	f
centered_prony_eff_mass_2	Analysis/Mesons/effective_mass.cpp	/^int centered_prony_eff_mass_2(double *y, double *m1, double *m2) {$/;"	f
cg_mshift	LibHR/Inverters/cg_mshift.c	/^int cg_mshift(mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out){ $/;"	f
cg_mshift_core	LibHR/Inverters/cg_mshift.c	/^static int cg_mshift_core(short int *sflags, mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out){$/;"	f	file:
cg_mshift_core	LibHR/Inverters/cg_mshift_def.c	/^static int cg_mshift_core(short int *sflags, mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out) {$/;"	f	file:
cg_mshift_def	LibHR/Inverters/cg_mshift_def.c	/^int cg_mshift_def(mshift_par *par, spinor_operator M, spinor_operator P, spinor_operator_m Pinv, spinor_field *in, spinor_field *out){ $/;"	f
cg_mshift_flt	LibHR/Inverters/cg_mshift_flt.c	/^int cg_mshift_flt(mshift_par *par, spinor_operator M, spinor_operator_flt F, spinor_field *in, spinor_field *out){ $/;"	f
cg_mshift_flt_core	LibHR/Inverters/cg_mshift_flt.c	/^static int cg_mshift_flt_core(short int *sflags, mshift_par *par, spinor_operator_flt M, spinor_field_flt *in, spinor_field_flt *out){$/;"	f	file:
chan_counter	Analysis/Mesons/bs_ctrl.h	/^  int chan_counter;$/;"	m	class:primary_ctrl
channel	Analysis/Mesons/bs_ctrl.h	/^  char** channel;$/;"	m	class:primary_ctrl
channel	Analysis/Mesons/bs_mesons.cpp	/^string channel;$/;"	v
channel_map	Analysis/Mesons/bs_ctrl.cpp	/^std::map<std::string, Corr_t*> eval_ctrl::channel_map;$/;"	m	class:eval_ctrl	file:
channel_map	Analysis/Mesons/bs_ctrl.h	/^  static std::map<std::string, Corr_t*> channel_map;$/;"	m	class:eval_ctrl
channel_name	Include/meson_observables.h	/^  char channel_name[100];$/;"	m	struct:meson_observable_s
channel_type	Include/meson_observables.h	/^  char channel_type[100];$/;"	m	struct:meson_observable_s
check	Converter/converter.c	/^int check=false;$/;"	v
check	LibHR/IO/read_action.c	/^static void check(int test, const char* format, ...)$/;"	f	file:
check_g5herm	TestProgram/Propagator/check_propagator.c	/^static void check_g5herm(spinor_field *prop1, int t1, spinor_field *prop2, int t2){$/;"	f	file:
check_geometry_variables	LibHR/Geometry/geometry_init.c	/^static void check_geometry_variables() {$/;"	f	file:
check_ortho	LibHR/Utils/eva_deflation.c	/^static void check_ortho(spinor_field *in, int n) {$/;"	f	file:
check_sequential	TestProgram/Propagator/check_propagator.c	/^static void check_sequential(spinor_field *prop_seq, spinor_field *prop_1, int tau){$/;"	f	file:
check_sequential_point	TestProgram/Propagator/check_propagator.c	/^static void check_sequential_point(spinor_field *prop_1, spinor_field *prop_2, spinor_field *prop_seq, int ti){$/;"	f	file:
checksum	LibHR/Geometry/geometry_mpi_eo.c	/^  int checksum[8];$/;"	m	struct:__anon44	file:
chi	LibHR/Update/force_rhmc.c	/^static spinor_field *chi = NULL;$/;"	v	file:
chiSF_boundary_improvement_ds	Include/utils.h	/^  double chiSF_boundary_improvement_ds;$/;"	m	struct:__anon43
chiSF_ds_BT	LibHR/Utils/boundary_conditions.c	/^static void chiSF_ds_BT(double ds) {$/;"	f	file:
chisf_mem	Include/observables.h	/^} chisf_mem;$/;"	t	typeref:struct:__anon18
chroma_to_HiRep	Converter/ChromaUtils/translate.c	/^void chroma_to_HiRep(QDP_ColorMatrix *link[])$/;"	f
ci	Analysis/Mesons/datasample.cpp	/^void datasample::ci(double low, double med, double hi, double *il, double *im, double *ih) const {$/;"	f	class:datasample
cleanup	LibHR/IO/logger.c	/^static void cleanup() {$/;"	f	file:
clear	Make/Utils/autosun/complex.h	/^	void clear()$/;"	f	class:complex
clear	Make/Utils/autosun/list.h	/^	void clear()$/;"	f	class:orderedlist
close_border	LibHR/Geometry/geometry_mpi_eo.c	/^static void close_border(int i ){$/;"	f	file:
cmatrix	Make/Utils/autosun/matrix.h	/^	cmatrix(int N, char* name) : pmatrix(N)$/;"	f	class:cmatrix
cmatrix	Make/Utils/autosun/matrix.h	/^	cmatrix(int N, const string& name) : pmatrix(N)$/;"	f	class:cmatrix
cmatrix	Make/Utils/autosun/matrix.h	/^class cmatrix : public pmatrix$/;"	c
cmplx_norm2	TestProgram/TripletMesons/check_triplets_1.c	/^#define cmplx_norm2(/;"	d	file:
cmplx_norm2	TestProgram/TripletMesons/check_triplets_1.c	/^#undef cmplx_norm2$/;"	d	file:
cname	LibHR/Update/remez/alg_remez.h	/^  char *cname;$/;"	m	class:AlgRemez
cnfg_filename	GaugeFix/gaugefix_measure.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	GaugeFix/gaugefix_unittest.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	HMC/hmc_forces.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	ModeNumber/mk_eigvals.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	ModeNumber/mk_modenumber.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	RenormalizationFactors/measure_Z_mom.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Scattering/IOroutines.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Scattering/meson_scattering.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Spectrum/measure_formfactor.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Spectrum/measure_spectrum.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Spectrum/mk_mesons.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Spectrum/mk_mesons_with_z2semwall.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Spectrum/mk_mesons_with_z2semwall_new.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Spectrum/mk_sfcoupling.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	Spectrum/trunc_mesons.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	StaticPotential/mk_polyakov_loops.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	StaticPotential/mk_wilsonloops.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	StaticPotential/tune_HYP_smearing.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	TestProgram/Deflate/check_deflate.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	TestProgram/Propagator/check_propagator.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	WilsonFlow/WF_measure.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_filename	WilsonFlow/WF_measure_adaptative.c	/^char cnfg_filename[256]="";$/;"	v
cnfg_number	Reweight/reweight.c	/^static int cnfg_number = 0;$/;"	v	file:
cnfg_type	Converter/converter.c	/^  int cnfg_type;$/;"	m	struct:_filename_type	file:
coefficient	LibHR/Update/mre.c	/^int coefficient(int k, int n)$/;"	f
col	Make/Utils/autosun/sparse.h	/^	int col;$/;"	m	struct:mindex
communication_info	LibHR/Geometry/test_geometry_mpi.c	/^} communication_info;$/;"	t	typeref:struct:__anon45	file:
compareSources	Scattering/scatter_test.c	/^int compareSources(spinor_field* s1, spinor_field* s2, double tol)$/;"	f
compare_to_b_mask	LibHR/Geometry/test_geometry_mpi.c	/^static int compare_to_b_mask(const site_info *s, const unsigned int b_mask[4]) {$/;"	f	file:
compare_to_parity	LibHR/Geometry/test_geometry_mpi.c	/^static int compare_to_parity(const site_info *s, const int parity) {$/;"	f	file:
complete_gf_sendrecv	LibHR/Geometry/communications.c	/^void complete_gf_sendrecv(suNg_field *gf) {$/;"	f
complete_gf_sendrecv_flt	LibHR/Geometry/communications_flt.c	/^void complete_gf_sendrecv_flt(suNg_field_flt *gf) {$/;"	f
complete_gt_sendrecv	LibHR/Geometry/communications.c	/^void complete_gt_sendrecv(suNg_field *gf) {$/;"	f
complete_sf_sendrecv	LibHR/Geometry/communications.c	/^void complete_sf_sendrecv(spinor_field *sf) {$/;"	f
complete_sf_sendrecv_flt	LibHR/Geometry/communications_flt.c	/^void complete_sf_sendrecv_flt(spinor_field_flt *sf) {$/;"	f
complex	Include/complex.h	/^} complex;$/;"	t	typeref:struct:__anon13
complex	Make/Utils/autosun/complex.h	/^	complex() { re = 0.0; im = 0.0; }$/;"	f	class:complex
complex	Make/Utils/autosun/complex.h	/^	complex(const FLOATING& r) { re = r; im = 0.0; }$/;"	f	class:complex
complex	Make/Utils/autosun/complex.h	/^	complex(const FLOATING& r, const FLOATING& i) { re = r; im = i; }$/;"	f	class:complex
complex	Make/Utils/autosun/complex.h	/^	complex(const complex& z) { re = z.re; im = z.im; }$/;"	f	class:complex
complex	Make/Utils/autosun/complex.h	/^class complex$/;"	c
complex_flt	Include/complex.h	/^} complex_flt;$/;"	t	typeref:struct:__anon14
compute_dim	LibHR/Geometry/geometry_init.c	/^static int compute_dim(int cx, int glb_x, int npx) {$/;"	f	file:
compute_evs	LibHR/Observables/trunc_hairpin.c	/^static void compute_evs() {$/;"	f	file:
compute_evs_ws	LibHR/Observables/trunc_hairpin.c	/^static spinor_field* compute_evs_ws;$/;"	v	file:
compute_gamma	TestProgram/DiracOperator/check_diracoperator_4.c	/^void compute_gamma(int g[4], int ic) {$/;"	f
compute_loops_OBJS	Disconnected/Makefile	/^compute_loops_OBJS = loop_tools.o ..\/GaugeFix\/gaugefix.o$/;"	m
compute_psign	LibHR/Geometry/geometry_init.c	/^static void compute_psign() {$/;"	f	file:
conf_dir	HMC/hmc_utils.h	/^  char conf_dir[64]; \/* directory to store gconfs *\/$/;"	m	struct:_hmc_flow
conf_dir	PureGauge/suN_utils.h	/^  char conf_dir[64]; \/* directory to store gconfs *\/$/;"	m	struct:_pg_flow
config_filename	Reweight/reweight.c	/^static char config_filename[64] = "";$/;"	v	file:
conj	Make/Utils/autosun/complex.h	/^	friend complex conj(const complex& z) { return complex(z.re,-z.im); }$/;"	f	class:complex
conjugate	Make/Utils/autosun/complex.h	/^	void conjugate()$/;"	f	class:complex
conjugate	Make/Utils/autosun/polynomial.h	/^	void conjugate()$/;"	f	class:polynomial
contract_baryons	LibHR/Observables/measure_baryons.c	/^void contract_baryons(spinor_field* psi0, int tau)$/;"	f
contract_pion_scatt	Scattering/scattering_tools.c	/^void contract_pion_scatt(spinor_field* phi_ts,spinor_field* phi_tsp1,int k,int ts){$/;"	f
contract_pion_scatt_1spinorfield	Scattering/scattering_tools.c	/^void contract_pion_scatt_1spinorfield(spinor_field* phi_ts,spinor_field* phi_tsp1,int k,int ts){$/;"	f
converter_OBJS	Converter/Makefile	/^converter_OBJS = archive_eolexi.o archive_milc.o archive_more_mpieo.o archive_ascii.o archive_fortran.o$/;"	m
coord	LibHR/Geometry/test_geometry_mpi.c	/^  int coord[4];                    \/* local coordinates *\/$/;"	m	struct:_site_info	file:
coord_to_index	Include/field_ordering.h	/^#define coord_to_index(/;"	d
copies	LibHR/Geometry/test_geometry_mpi.c	/^  struct _site_info** copies;      \/* if it is an ORIGINAL: list of copies *\/$/;"	m	struct:_site_info	typeref:struct:_site_info::_site_info	file:
copy_evec	LibHR/Observables/calc_prop.c	/^void copy_evec( int n, spinor_field* psi1, double *eval ){$/;"	f
copy_from	Include/geometry.h	/^  int *copy_from, *copy_to, *copy_len;$/;"	m	struct:_geometry_descriptor
copy_from	LibHR/Geometry/test_geometry_mpi.c	/^static int* copy_from;$/;"	v	file:
copy_gd_no_comm	LibHR/Geometry/geometry_SAP.c	/^static void copy_gd_no_comm(geometry_descriptor * to, geometry_descriptor * from){$/;"	f	file:
copy_len	Include/geometry.h	/^  int *copy_from, *copy_to, *copy_len;$/;"	m	struct:_geometry_descriptor
copy_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define copy_mat(/;"	d	file:
copy_shift	Include/geometry.h	/^  int copy_shift; \/*  this is the odd spinor's shift, i.e. the index of the first odd copy in the full geometry *\/$/;"	m	struct:_geometry_descriptor
copy_to	Include/geometry.h	/^  int *copy_from, *copy_to, *copy_len;$/;"	m	struct:_geometry_descriptor
copy_to	LibHR/Geometry/test_geometry_mpi.c	/^static int* copy_to;$/;"	v	file:
cor_b0	Analysis/Mesons/bs_ctrl.h	/^  Corr_t** cor_b0;$/;"	m	class:primary_ctrl
cor_b1	Analysis/Mesons/bs_ctrl.h	/^  Corr_t* cor_b1;$/;"	m	class:primary_ctrl
cor_b2	Analysis/Mesons/bs_ctrl.h	/^  Corr_t* cor_b2;$/;"	m	class:primary_ctrl
corr	LibHR/Observables/measure_ff.c	/^static double* corr[NCHANNELS_FF];$/;"	v	file:
corr_im	Include/meson_observables.h	/^  double* corr_im;$/;"	m	struct:meson_observable_s
corr_ind	LibHR/Observables/measure_ff.c	/^#define corr_ind(/;"	d	file:
corr_ind	LibHR/Observables/measure_mesons.c	/^#define corr_ind(/;"	d	file:
corr_ind	LibHR/Observables/measure_mesons_ff.c	/^#define corr_ind(/;"	d	file:
corr_ind	Scattering/main_run.c	/^#define corr_ind(/;"	d	file:
corr_ind	Scattering/scatter_test.c	/^#define corr_ind(/;"	d	file:
corr_ind	Spectrum/meson_measurements.c	/^#define corr_ind(/;"	d	file:
corr_ind	Spectrum/meson_measurements_ff.c	/^#define corr_ind(/;"	d	file:
corr_left_mult_g5	LibHR/Observables/measure_baryons.c	/^#define corr_left_mult_g5(/;"	d	file:
corr_re	Include/meson_observables.h	/^  double* corr_re;$/;"	m	struct:meson_observable_s
corr_right_mult_g5	LibHR/Observables/measure_baryons.c	/^#define corr_right_mult_g5(/;"	d	file:
corr_size	Include/meson_observables.h	/^  int corr_size;$/;"	m	struct:meson_observable_s
correct_la_pf	Include/update.h	/^  void (*correct_la_pf)(const struct _monomial *m);$/;"	m	struct:_monomial
correct_pf	Include/update.h	/^  void (*correct_pf)(const struct _monomial *m);$/;"	m	struct:_monomial
correnspondig_buffer	LibHR/Geometry/geometry_mpi_eo.c	/^static int correnspondig_buffer(int * bf , int i){$/;"	f	file:
corret_pf_dist_hmc	LibHR/Update/update_mt.c	/^void corret_pf_dist_hmc(){$/;"	f
count	LibHR/Update/integrators.c	/^static unsigned int count = 0; \/*used to project gfield *\/$/;"	v	file:
cplaq	LibHR/Observables/avr_plaquette.c	/^void cplaq(complex *ret,int ix,int mu,int nu)$/;"	f
create_diluted_source	LibHR/Observables/trunc_hairpin.c	/^static void create_diluted_source(spinor_field *source, int di, int dilution) {$/;"	f	file:
create_diluted_source_equal	LibHR/Observables/sources.c	/^int create_diluted_source_equal(spinor_field *source) {$/;"	f
create_diluted_source_equal_atau	LibHR/Observables/sources.c	/^void create_diluted_source_equal_atau(spinor_field *source, int tau) {$/;"	f
create_diluted_source_equal_atau_col	LibHR/Observables/sources.c	/^void create_diluted_source_equal_atau_col(spinor_field *source, int tau,int col) {$/;"	f
create_diluted_source_equal_atau_eo	LibHR/Observables/sources.c	/^void create_diluted_source_equal_atau_eo(spinor_field *source, int tau){$/;"	f
create_diluted_source_equal_eo	LibHR/Observables/sources.c	/^int create_diluted_source_equal_eo(spinor_field *source) {$/;"	f
create_diluted_source_equal_even	LibHR/Observables/z2semwall_new.c	/^static void create_diluted_source_equal_even(spinor_field *source, int tau) {$/;"	f	file:
create_diluted_source_equal_spinorfield1	LibHR/Observables/sources.c	/^void create_diluted_source_equal_spinorfield1(spinor_field *source,int tau) {$/;"	f
create_diluted_source_even	LibHR/Observables/z2semwall.c	/^static void create_diluted_source_even(spinor_field *source, int tau, int beta) {$/;"	f	file:
create_diluted_volume_source	LibHR/Observables/sources.c	/^void create_diluted_volume_source(spinor_field *source, int parity_component, int mod) {$/;"	f
create_full_point_source	LibHR/Observables/sources.c	/^void create_full_point_source(spinor_field *source, int tau) {$/;"	f
create_gauge_fixed_momentum_source	LibHR/Observables/sources.c	/^void create_gauge_fixed_momentum_source(spinor_field *source, int pt, int px, int py, int pz, int color) {$/;"	f
create_gauge_fixed_wall_source	LibHR/Observables/sources.c	/^void create_gauge_fixed_wall_source(spinor_field *source, int tau, int color) {$/;"	f
create_noise_source_equal_col_dil	LibHR/Observables/sources.c	/^void create_noise_source_equal_col_dil(spinor_field *source,int col) {$/;"	f
create_noise_source_equal_eo	LibHR/Observables/sources.c	/^void create_noise_source_equal_eo(spinor_field *source) {$/;"	f
create_noise_source_equal_oe	LibHR/Observables/sources.c	/^void create_noise_source_equal_oe(spinor_field *source) {$/;"	f
create_point_source	LibHR/Observables/sources.c	/^void create_point_source(spinor_field *source,int tau, int color) {$/;"	f
create_point_source_even	LibHR/Observables/z2semwall.c	/^static void create_point_source_even(spinor_field *source, int beta, int b) {$/;"	f	file:
create_point_source_loc	LibHR/Observables/sources.c	/^void create_point_source_loc(spinor_field *source, int t, int x, int y, int z, int color) {$/;"	f
create_sequential_source	LibHR/Observables/sources.c	/^void create_sequential_source(spinor_field *source, int tf, spinor_field* prop){$/;"	f
create_sequential_source_point	TestProgram/Propagator/check_propagator.c	/^void create_sequential_source_point(spinor_field *source, int tf, spinor_field* prop){$/;"	f
create_sinks_QMR	LibHR/Observables/trunc_hairpin.c	/^static void create_sinks_QMR(spinor_field *source, spinor_field *sink, int mode) {$/;"	f	file:
create_sinks_QMR_ws	LibHR/Observables/trunc_hairpin.c	/^static spinor_field* create_sinks_QMR_ws;$/;"	v	file:
create_z2_volume_source	LibHR/Observables/sources.c	/^void create_z2_volume_source(spinor_field *source) {$/;"	f
crect_1x2	LibHR/Observables/avr_rect.c	/^void crect_1x2(complex *ret,int ix,int mu,int nu)$/;"	f
ct	WilsonFlow/WF_measure.c	/^  double ct;$/;"	m	struct:_input_SF	file:
ct	WilsonFlow/WF_measure_adaptative.c	/^  double ct;$/;"	m	struct:_input_SF	file:
cumhist	Analysis/Mesons/datasample.cpp	/^void datasample::cumhist(double *n, int npt, double *x) const {$/;"	f	class:datasample
cutfilename	Analysis/Mesons/bs_mesons.cpp	/^string cutfilename;$/;"	v
cvariable	Make/Utils/autosun/polynomial.h	/^	cvariable(const char* name) : polynomial()$/;"	f	class:cvariable
cvariable	Make/Utils/autosun/polynomial.h	/^class cvariable : public polynomial$/;"	c
cvc_correlators	LibHR/Observables/measure_mesons.c	/^meson_observable *cvc_correlators = NULL;$/;"	v
cvector	Make/Utils/autosun/matrix.h	/^	cvector(int N, char* name) : pvector(N)$/;"	f	class:cvector
cvector	Make/Utils/autosun/matrix.h	/^	cvector(int N, const string& name) : pvector(N)$/;"	f	class:cvector
cvector	Make/Utils/autosun/matrix.h	/^class cvector : public pvector$/;"	c
d	Analysis/Mesons/bs_type.h	/^  datasample* d;$/;"	m	class:Corr_t
d	Include/rational_functions.h	/^	int n,d;$/;"	m	struct:_rational_app
d	LibHR/Update/remez/alg_remez.h	/^  int n, d;$/;"	m	class:AlgRemez
dAdj	TestProgram/Algebra/check_algebra_1.c	/^static int dAdj=NG*NG-1;$/;"	v	file:
data	Include/update.h	/^  monomial_data data;$/;"	m	struct:_monomial
data	Make/Utils/autosun/list.h	/^	ELEMENT** data;$/;"	m	class:orderedlist
datasample	Analysis/Mesons/datasample.h	/^  datasample(){}$/;"	f	class:datasample
datasample	Analysis/Mesons/datasample.h	/^class datasample: public vector<double> {$/;"	c
datatype_t	Include/input_par.h	/^} datatype_t;$/;"	t	typeref:enum:_datatype_t
dble_vec_t	LibHR/Random/ranlxd.c	/^} dble_vec_t __attribute__ ((aligned (16)));$/;"	t	typeref:struct:__anon58	file:
dble_vec_t	LibHR/Random/ranlxd.c	/^} dble_vec_t;$/;"	t	typeref:struct:__anon61	file:
dble_vec_t	LibHR/Random/ranlxs.c	/^} dble_vec_t __attribute__ ((aligned (16)));$/;"	t	typeref:struct:__anon64	file:
dble_vec_t	LibHR/Random/ranlxs.c	/^} dble_vec_t;$/;"	t	typeref:struct:__anon67	file:
dc	LibHR/Geometry/geometry_mpi_eo.c	/^static char dc[4]={'T','X','Y','Z'};$/;"	v	file:
dd	LibHR/Inverters/eva.c	/^static double *dd,*ee;$/;"	v	file:
debug_group_represent	Make/Utils/autosun/adjoint.h	/^string debug_group_represent(const char* vname, const char* uname)$/;"	f
debug_group_represent	Make/Utils/autosun/antisymmetric.h	/^string debug_group_represent(const char* vname, const char* uname)$/;"	f
debug_group_represent	Make/Utils/autosun/fundamental.h	/^string debug_group_represent(const char* vname, const char* uname)$/;"	f
debug_group_represent	Make/Utils/autosun/symmetric.h	/^string debug_group_represent(const char* vname, const char* uname)$/;"	f
def_baryon	Spectrum/measure_spectrum.c	/^	int def_baryon;$/;"	m	struct:_input_mesons	file:
def_gfwall	Spectrum/measure_spectrum.c	/^  int def_gfwall;$/;"	m	struct:_input_mesons	file:
def_glueball	Spectrum/measure_spectrum.c	/^	int def_glueball;$/;"	m	struct:_input_mesons	file:
def_glueball	WilsonFlow/WF_measure_adaptative.c	/^  int def_glueball;$/;"	m	struct:_input_WF	file:
def_log_lvl	Include/input_par.h	/^  int def_log_lvl;$/;"	m	struct:_input_logger
def_point	Spectrum/measure_spectrum.c	/^  int def_point;$/;"	m	struct:_input_mesons	file:
def_semwall	Spectrum/measure_spectrum.c	/^  int def_semwall;$/;"	m	struct:_input_mesons	file:
default_out	LibHR/IO/logger.c	/^static record *default_out=0; \/* this is a special list with only one element if stdout is mapped *\/$/;"	v	file:
define_constants	Analysis/Mesons/ranlxs.cpp	/^  void define_constants()$/;"	f	namespace:__anon4
define_constants	LibHR/Random/ranlxd.c	/^static void define_constants(void)$/;"	f	file:
define_constants	LibHR/Random/ranlxs.c	/^static void define_constants(void)$/;"	f	file:
degree_hopping	Spectrum/measure_spectrum.c	/^  int degree_hopping;  \/\/ The degree of the hopping parameter expasion  $/;"	m	struct:_input_mesons	file:
delerr	Analysis/plaqfilter.pl	/^sub delerr {$/;"	s
dellrecord	LibHR/IO/logger.c	/^static void dellrecord(lrecord **list, lrecord *rd) {$/;"	f	file:
delrecord	LibHR/IO/logger.c	/^static void delrecord(record **list, record *rd) {$/;"	f	file:
delta	LibHR/Update/remez/alg_remez.h	/^  bigfloat delta, spread, tolerance;$/;"	m	class:AlgRemez
delta	ModeNumber/modenumber.c	/^static double delta;$/;"	v	file:
delta	WilsonFlow/WF_measure_adaptative.c	/^	double delta;$/;"	m	struct:_input_WF	file:
dep	Analysis/Mesons/bs_ctrl.h	/^  eval_ctrl** dep;$/;"	m	class:ratio_ctrl
dep	Analysis/Mesons/bs_ctrl.h	/^  eval_ctrl** dep[3];$/;"	m	class:derived_ctrl
dep_level	Analysis/Mesons/bs_ctrl.h	/^  int* dep_level;$/;"	m	class:ratio_ctrl
dep_level	Analysis/Mesons/bs_ctrl.h	/^  int* dep_level[3];$/;"	m	class:derived_ctrl
derP	ModeNumber/approx_for_modenumber.c	/^static double derP(int n, double *c, double y, double epsilon) {$/;"	f	file:
dererrh	ModeNumber/approx_for_modenumber.c	/^static double dererrh(int n, double *c, double y, double epsilon) {$/;"	f	file:
derived_ctrl	Analysis/Mesons/bs_ctrl.cpp	/^derived_ctrl::derived_ctrl(const char* n){$/;"	f	class:derived_ctrl
derived_ctrl	Analysis/Mesons/bs_ctrl.h	/^class derived_ctrl : public eval_ctrl {$/;"	c
descr	Include/input_par.h	/^  char *descr;$/;"	m	struct:_input_record_t
det_suNg	LibHR/Utils/det_suNg.c	/^void det_suNg(complex* res,suNg* a){$/;"	f
det_suNg	LibHR/Utils/det_suNg.c	/^void det_suNg(double* res, suNg *a){$/;"	f
determine_sign	LibHR/Observables/measure_mesons.c	/^static double determine_sign(gamma_ind ind){$/;"	f	file:
diag_hmat	LibHR/Utils/diag_hmat.c	/^void diag_hmat(suNg *hmat, double *diag){$/;"	f
diag_tridiag	LibHR/Utils/diag_hmat.c	/^void diag_tridiag(suNg* hmat, double *diag, double* offdiag){$/;"	f
dilution	Include/observables.h	/^  dilution_mode dilution;$/;"	m	struct:_ata_qprop_pars
dilution	Spectrum/measure_spectrum.c	/^  int dilution;$/;"	m	struct:_input_mesons	file:
dilution_mode	Include/observables.h	/^typedef enum {NO_DILUTION, TIME_DILUTION, TIME_SPIN_DILUTION, EXACT} dilution_mode;$/;"	t	typeref:enum:__anon17
dir_mask	LibHR/Geometry/geometry_mpi_eo.c	/^static int ** dir_mask;$/;"	v	file:
discon_correlators	LibHR/Observables/measure_mesons.c	/^meson_observable *discon_correlators = NULL;$/;"	v
discon_gfwall	Spectrum/measure_spectrum.c	/^  int discon_gfwall;$/;"	m	struct:_input_mesons	file:
discon_semwall	Spectrum/measure_spectrum.c	/^  int discon_semwall;$/;"	m	struct:_input_mesons	file:
discon_volume	Spectrum/measure_spectrum.c	/^  int discon_volume;$/;"	m	struct:_input_mesons	file:
dm	Include/update.h	/^  double dm;$/;"	m	struct:_mon_hasenbusch_par
dmu	Include/update.h	/^  double dmu;$/;"	m	struct:_mon_hasenbusch_tm_par
dn	LibHR/Update/remez/Zolotarev/zolotarev.c	/^static real dn(real z, real kp) {$/;"	f	file:
do_global_sum	LibHR/Observables/measure_mesons.c	/^static void do_global_sum(meson_observable* mo, double norm){$/;"	f	file:
do_global_sum	Scattering/main_run.c	/^static void do_global_sum(meson_observable* mo, double norm){$/;"	f	file:
do_global_sum	Scattering/scatter_test.c	/^static void do_global_sum(meson_observable* mo, double norm){$/;"	f	file:
dot	Make/Utils/autosun/sparse.h	/^	void dot(const sparsematrix<VALUE>& p, const sparsevector<VALUE>& v)$/;"	f	class:sparsevector
dt	Spectrum/measure_formfactor.c	/^  int dt;$/;"	m	struct:_input_mesons	file:
dt	Spectrum/measure_spectrum.c	/^  int dt;$/;"	m	struct:_input_mesons	file:
dt	TestProgram/Propagator/check_propagator.c	/^  int dt;$/;"	m	struct:_input_mesons	file:
dyn_gauge	LibHR/Update/update_hb.c	/^static int *dyn_gauge=NULL;$/;"	v	file:
e	Make/Utils/autosun/adjoint.h	/^	static smatrix* e;$/;"	m	namespace:representation
e	Make/Utils/autosun/antisymmetric.h	/^	static smatrix* e;$/;"	m	namespace:representation
e	Make/Utils/autosun/symmetric.h	/^	static smatrix* e;$/;"	m	namespace:representation
ee	LibHR/Inverters/eva.c	/^static double *dd,*ee;$/;"	v	file:
eff_b1	Analysis/Mesons/bs_ctrl.h	/^  Corr_t* eff_b1;$/;"	m	class:derived_ctrl
eff_b1	Analysis/Mesons/bs_ctrl.h	/^  Corr_t* eff_b1;$/;"	m	class:primary_ctrl
eff_b2	Analysis/Mesons/bs_ctrl.h	/^  Corr_t* eff_b2;$/;"	m	class:derived_ctrl
eff_b2	Analysis/Mesons/bs_ctrl.h	/^  Corr_t* eff_b2;$/;"	m	class:primary_ctrl
effm_err	Analysis/Mesons/effective_mass.cpp	/^double effm_err() {$/;"	f
effmass_method	Analysis/Mesons/bs_mesons.cpp	/^int effmass_method;$/;"	v
eig_init	LibHR/Observables/calc_prop.c	/^void eig_init(int nev, int nevt, int kmax, int maxiter, double lbnd, double omega1, double omega2){$/;"	f
eig_var	ModeNumber/mk_eigvals.c	/^input_eigval eig_var = init_input_eigval(eig_var);$/;"	v
eig_var	TestProgram/Deflate/check_deflate.c	/^input_eigval eig_var = init_input_eigval(eig_var);$/;"	v
eigval	LibHR/Utils/eva_deflation.c	/^static double *eigval=NULL;$/;"	v	file:
eigval_var	HMC/hmc.c	/^input_eigval eigval_var = init_input_eigval(eigval_var);$/;"	v
eitheta_flt	LibHR/Update/Dphi_flt.c	/^static complex_flt eitheta_flt[4]={{1.f,0.f}};$/;"	v	file:
empty_buffers	LibHR/Geometry/geometry_SAP.c	/^void empty_buffers(spinor_field *s){$/;"	f
empty_gd	LibHR/Geometry/geometry_SAP.c	/^static geometry_descriptor empty_gd={0};$/;"	v	file:
end	HMC/hmc_utils.h	/^  int start, end;$/;"	m	struct:_hmc_flow
end	PureGauge/suN_utils.h	/^  int start, end;$/;"	m	struct:_pg_flow
end_mc	HMC/hmc_utils.c	/^int end_mc() {$/;"	f
end_mc	PureGauge/suN_utils.c	/^int end_mc() {$/;"	f
eo_type	LibHR/Geometry/geometry_mpi_eo.c	/^  int eo_type;$/;"	m	struct:__anon44	file:
eps	WilsonFlow/WF_measure_adaptative.c	/^  double eps;$/;"	m	struct:_input_WF	file:
epsilon	ModeNumber/approx_for_modenumber.c	/^  double epsilon;$/;"	m	struct:__anon69	file:
epsilon	ModeNumber/modenumber.c	/^static double epsilon;$/;"	v	file:
equal	Make/Utils/autosun/polynomial.h	/^bool equal(FLOATING a,FLOATING b)$/;"	f
equations	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::equations(void) {$/;"	f	class:AlgRemez
eraseline	Analysis/Mesons/progbar.cpp	/^const char eraseline[]="[2K";$/;"	v
err	Analysis/Mesons/datasample.h	/^  double err;$/;"	m	struct:estimate
err2	Include/inverters.h	/^   double err2; \/* relative error of the solutions *\/$/;"	m	struct:_mshift_par
err2	Include/inverters.h	/^  double err2; \/* maximum error on the solutions *\/$/;"	m	struct:_MINRES_par
err2	Include/inverters.h	/^  double err2; \/* maximum error on the solutions *\/$/;"	m	struct:__anon15
err2_flt	Include/inverters.h	/^  double err2_flt; \/* maximum error on the solutions *\/$/;"	m	struct:__anon15
errh	ModeNumber/approx_for_modenumber.c	/^static double errh(int n, double *c, double y, double epsilon) {$/;"	f	file:
error	Analysis/Mesons/ranlxs.cpp	/^  void error(int no)$/;"	f	namespace:__anon4
error	LibHR/Error/error.c	/^void error(int test,int no,char *name,char *text)$/;"	f
error	LibHR/Random/ranlxd.c	/^static void error(int no)$/;"	f	file:
error	LibHR/Random/ranlxs.c	/^static void error(int no)$/;"	f	file:
error2	ModeNumber/approx_for_modenumber.c	/^static double error2(double x, void *pars) {$/;"	f	file:
error2_pars_type	ModeNumber/approx_for_modenumber.c	/^} error2_pars_type;$/;"	t	typeref:struct:__anon69	file:
error_filename	HMC/hmc.c	/^char error_filename[256] = "err_0";$/;"	v
error_filename	HMC/hmc_forces.c	/^char error_filename[256] = "err_0";$/;"	v
error_filename	PureGauge/suN.c	/^char error_filename[256] = "err_0";$/;"	v
estimate	Analysis/Mesons/datasample.h	/^struct estimate {$/;"	s
eta	LibHR/Observables/z2semwall.c	/^static spinor_field *eta;$/;"	v	file:
eta	LibHR/Observables/z2semwall_new.c	/^static spinor_field *eta;$/;"	v	file:
eta	LibHR/Update/force_hmc.c	/^spinor_field *eta=NULL;$/;"	v
eta	LibHR/Update/force_hmc_tm.c	/^static spinor_field *eta = NULL;$/;"	v	file:
eta	ModeNumber/modenumber.c	/^static spinor_field *w0, *w1, *w2, *x, *eta;$/;"	v	file:
eta2	LibHR/Observables/z2semwall.c	/^static spinor_field *eta2;$/;"	v	file:
eta2	LibHR/Observables/z2semwall_new.c	/^static spinor_field *eta2;$/;"	v	file:
etmp	LibHR/Update/Dphi.c	/^spinor_field *etmp=NULL;$/;"	v
etmp	LibHR/Update/Dphi_flt.c	/^static spinor_field_flt *etmp=NULL;$/;"	v	file:
ev	LibHR/Observables/trunc_hairpin.c	/^static spinor_field **ev;       \/* [m][a], m<n_masses, a<n_eigenvalues *\/$/;"	v	file:
ev	LibHR/Update/find_spec_limits.c	/^static spinor_field *ev;$/;"	v	file:
ev	LibHR/Utils/eva_deflation.c	/^static spinor_field *ev=NULL;$/;"	v	file:
ev	TestProgram/Inverters/check_inverters_4.c	/^static spinor_field *ev;$/;"	v	file:
ev_propagator	LibHR/Observables/trunc_hairpin.c	/^static void ev_propagator(complex** prop) {$/;"	f	file:
ev_propagator_ws	LibHR/Observables/trunc_hairpin.c	/^static spinor_field* ev_propagator_ws;$/;"	v	file:
eva	LibHR/Inverters/eva.c	/^int eva(int nev,int nevt,int init,int kmax,$/;"	f
eva_def	LibHR/Utils/eva_deflation.c	/^void eva_def(spinor_field *out, spinor_field *in){$/;"	f
eva_def_inv	LibHR/Utils/eva_deflation.c	/^void eva_def_inv(spinor_field *out, spinor_field *in, double m){$/;"	f
eva_imax	Include/observables.h	/^  int eva_imax;$/;"	m	struct:_ata_qprop_pars
eva_kmax	Include/observables.h	/^  int eva_kmax;$/;"	m	struct:_ata_qprop_pars
eva_nevt	Include/observables.h	/^  int eva_nevt;$/;"	m	struct:_ata_qprop_pars
eva_omega1	Include/observables.h	/^  double eva_omega1;$/;"	m	struct:_ata_qprop_pars
eva_omega2	Include/observables.h	/^  double eva_omega2;$/;"	m	struct:_ata_qprop_pars
eva_prec	Include/utils.h	/^} eva_prec;$/;"	t	typeref:struct:_eva_prec
eva_tuned	LibHR/Inverters/eva.c	/^int eva_tuned(int nev,int nevt,int init,int kmax,$/;"	f
eva_val	LibHR/Observables/calc_prop.c	/^double *eva_val;$/;"	v
eva_vec	LibHR/Observables/calc_prop.c	/^static spinor_field *eva_vec;$/;"	v	file:
eval_cor_eff	Analysis/Mesons/bs_ctrl.cpp	/^bool primary_ctrl::eval_cor_eff(const int bsl, const int* bs, const int len, int Lt, int effmass_method) {$/;"	f	class:primary_ctrl
eval_ctrl	Analysis/Mesons/bs_ctrl.h	/^class eval_ctrl {$/;"	c
evaluateApprox	LibHR/Update/remez/alg_remez.C	/^double AlgRemez::evaluateApprox(double x) {$/;"	f	class:AlgRemez
evaluateFunc	LibHR/Update/remez/alg_remez.C	/^double AlgRemez::evaluateFunc(double x) {$/;"	f	class:AlgRemez
evaluateInverseApprox	LibHR/Update/remez/alg_remez.C	/^double AlgRemez::evaluateInverseApprox(double x) {$/;"	f	class:AlgRemez
evaluateInverseFunc	LibHR/Update/remez/alg_remez.C	/^double AlgRemez::evaluateInverseFunc(double x) {$/;"	f	class:AlgRemez
evamass	HMC/hmc.c	/^  double evamass; \/* mass to use in Dirac operator *\/$/;"	m	struct:_input_eigval	file:
even	LibHR/Geometry/geometry_mpi_eo.c	/^#define even /;"	d	file:
exp_bf	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat exp_bf(const bigfloat& a) {$/;"	f	class:bigfloat
ext_point	Spectrum/measure_spectrum.c	/^  int ext_point;$/;"	m	struct:_input_mesons	file:
ext_semwall	Spectrum/measure_spectrum.c	/^  int ext_semwall;$/;"	m	struct:_input_mesons	file:
factorial	LibHR/Update/mre.c	/^int factorial(int k)$/;"	f
fak_eval	Analysis/Mesons/bs_observables.cpp	/^void fak_eval(Corr_t* fak_eff, Corr_t* g5gk_cor, Corr_t* g5gk_eff) {$/;"	f
false	Converter/ChromaUtils/main.c	/^#define false /;"	d	file:
false	Converter/converter.c	/^#define false /;"	d	file:
false	LibHR/Geometry/geometry_mpi_eo.c	/^#define false /;"	d	file:
false	LibHR/Geometry/test_geometry_mpi.c	/^#define false /;"	d	file:
fermion_twisting_theta	Include/utils.h	/^  double fermion_twisting_theta[4];$/;"	m	struct:__anon43
ff_add_local_action	LibHR/Update/mon_ff.c	/^void ff_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
ff_channel_names	LibHR/Observables/measure_ff.c	/^static char* ff_channel_names[NCHANNELS_FF]={"g5_ff","pipig_ff_re","pipig_ff_im","pipig_conserved_ff"};$/;"	v	file:
ff_correct_la_pf	LibHR/Update/mon_ff.c	/^void ff_correct_la_pf(const struct _monomial *m) {$/;"	f
ff_correct_pf	LibHR/Update/mon_ff.c	/^void ff_correct_pf(const struct _monomial *m) {$/;"	f
ff_create	LibHR/Update/mon_ff.c	/^struct _monomial* ff_create(const monomial_data *data) {$/;"	f
ff_def_point	Spectrum/measure_formfactor.c	/^  int ff_def_point;$/;"	m	struct:_input_mesons	file:
ff_fixed_point	Spectrum/measure_formfactor.c	/^  int ff_fixed_point;$/;"	m	struct:_input_mesons	file:
ff_fixed_point	TestProgram/Propagator/check_propagator.c	/^  int ff_fixed_point;$/;"	m	struct:_input_mesons	file:
ff_free	LibHR/Update/mon_ff.c	/^void ff_free(struct _monomial *m) {$/;"	f
ff_gaussian_pf	LibHR/Update/mon_ff.c	/^void ff_gaussian_pf(const struct _monomial *m) {$/;"	f
ff_init_traj	LibHR/Update/mon_ff.c	/^void ff_init_traj(const struct _monomial *m) {$/;"	f
ff_observables	LibHR/Observables/four_fermion_meas.c	/^void ff_observables()$/;"	f
ff_pi_old	LibHR/Update/update_mt.c	/^static scalar_field *ff_pi_old=NULL;$/;"	v	file:
ff_pseudofermion	LibHR/Update/mon_ff.c	/^const spinor_field* ff_pseudofermion(const struct _monomial *m) {$/;"	f
ff_sigma_old	LibHR/Update/update_mt.c	/^static scalar_field *ff_sigma_old=NULL;$/;"	v	file:
ff_var	Spectrum/measure_spectrum.c	/^input_ff ff_var = init_input_ff(ff_var);$/;"	v
file	LibHR/IO/logger.c	/^	FILE *file;$/;"	m	struct:_record	file:
filemap	LibHR/IO/logger.c	/^static record *filemap=0; \/* list the mappings to files *\/$/;"	v	file:
filename_t	GaugeFix/gaugefix_measure.c	/^} filename_t;$/;"	t	typeref:struct:__anon8	file:
filename_t	GaugeFix/gaugefix_unittest.c	/^} filename_t;$/;"	t	typeref:struct:__anon10	file:
filename_t	HMC/hmc_forces.c	/^} filename_t;$/;"	t	typeref:struct:__anon12	file:
filename_t	ModeNumber/mk_eigvals.c	/^} filename_t;$/;"	t	typeref:struct:__anon71	file:
filename_t	ModeNumber/mk_modenumber.c	/^} filename_t;$/;"	t	typeref:struct:__anon73	file:
filename_t	RenormalizationFactors/measure_Z_mom.c	/^} filename_t;$/;"	t	typeref:struct:__anon75	file:
filename_t	Scattering/IOroutines.c	/^} filename_t;$/;"	t	typeref:struct:__anon78	file:
filename_t	Scattering/meson_scattering.c	/^} filename_t;$/;"	t	typeref:struct:__anon80	file:
filename_t	Spectrum/measure_formfactor.c	/^} filename_t;$/;"	t	typeref:struct:__anon83	file:
filename_t	Spectrum/measure_spectrum.c	/^} filename_t;$/;"	t	typeref:struct:__anon85	file:
filename_t	Spectrum/mk_mesons.c	/^} filename_t;$/;"	t	typeref:struct:__anon87	file:
filename_t	Spectrum/mk_mesons_with_z2semwall.c	/^} filename_t;$/;"	t	typeref:struct:__anon89	file:
filename_t	Spectrum/mk_mesons_with_z2semwall_new.c	/^} filename_t;$/;"	t	typeref:struct:__anon91	file:
filename_t	Spectrum/mk_sfcoupling.c	/^} filename_t;$/;"	t	typeref:struct:__anon93	file:
filename_t	Spectrum/trunc_mesons.c	/^} filename_t;$/;"	t	typeref:struct:__anon95	file:
filename_t	StaticPotential/mk_polyakov_loops.c	/^} filename_t;$/;"	t	typeref:struct:__anon97	file:
filename_t	StaticPotential/mk_wilsonloops.c	/^} filename_t;$/;"	t	typeref:struct:__anon99	file:
filename_t	StaticPotential/tune_HYP_smearing.c	/^} filename_t;$/;"	t	typeref:struct:__anon101	file:
filename_t	TestProgram/Deflate/check_deflate.c	/^} filename_t;$/;"	t	typeref:struct:__anon104	file:
filename_t	TestProgram/Propagator/check_propagator.c	/^} filename_t;$/;"	t	typeref:struct:__anon107	file:
filename_t	WilsonFlow/WF_measure.c	/^} filename_t;$/;"	t	typeref:struct:__anon113	file:
filename_t	WilsonFlow/WF_measure_adaptative.c	/^} filename_t;$/;"	t	typeref:struct:__anon115	file:
filename_type	Converter/ChromaUtils/main.c	/^} filename_type;$/;"	t	typeref:struct:_filename_type	file:
filename_type	Converter/converter.c	/^} filename_type;$/;"	t	typeref:struct:_filename_type	file:
files	LibHR/IO/logger.c	/^static record *files=0; \/* list of open files *\/$/;"	v	file:
fill_dep	Analysis/Mesons/bs_ctrl.cpp	/^bool eval_ctrl::fill_dep(const char* arg){$/;"	f	class:eval_ctrl
finalize_process	LibHR/Geometry/process_init.c	/^int finalize_process() {$/;"	f
finalize_test	LibHR/Geometry/test_geometry_mpi.c	/^static void finalize_test() {$/;"	f	file:
find_double	LibHR/IO/read_action.c	/^static double find_double(section *sec, char *key)$/;"	f	file:
find_low_eig_H2	LibHR/Utils/eva_deflation.c	/^static void find_low_eig_H2(const eva_prec *e_par, geometry_descriptor *type, int start) {$/;"	f	file:
find_spec_H2	LibHR/Update/find_spec_limits.c	/^void find_spec_H2(double *max, double *min) {$/;"	f
find_string	LibHR/IO/read_action.c	/^static char* find_string(section *sec, char *key)$/;"	f	file:
findfile	LibHR/IO/logger.c	/^static record *findfile(record *curr, FILE *file) {$/;"	f	file:
findname	LibHR/IO/logger.c	/^static record *findname(record *curr, char *name) {$/;"	f	file:
first	LibHR/Memory/amalloc.c	/^static struct addr_t *first=NULL;$/;"	v	typeref:struct:addr_t	file:
first_l2_border	LibHR/Geometry/geometry_mpi_eo.c	/^static int first_l2_border=-1;$/;"	v	file:
fit	Analysis/Mesons/bs_ctrl.h	/^  datasample fit;$/;"	m	class:derived_ctrl
fit	Analysis/Mesons/bs_ctrl.h	/^  datasample fit;$/;"	m	class:primary_ctrl
fit	Analysis/Mesons/bs_ctrl.h	/^  datasample fit;$/;"	m	class:ratio_ctrl
fit	Analysis/Mesons/effective_mass.cpp	/^double fit(int left, int right, Corr_t *data) {$/;"	f
fix_T_bc	Scattering/scattering_tools.c	/^static void fix_T_bc(int tau){$/;"	f	file:
fix_T_bc	Spectrum/meson_measurements.c	/^static void fix_T_bc(int tau){$/;"	f	file:
fix_T_bc	Spectrum/meson_measurements_ff.c	/^static void fix_T_bc(int tau){$/;"	f	file:
fix_T_bc	TestProgram/Propagator/check_propagator.c	/^static void fix_T_bc(int tau){$/;"	f	file:
fix_buffer	LibHR/Geometry/geometry_mpi_eo.c	/^static void fix_buffer(int zone_id)$/;"	f	file:
fix_next_neightbours	LibHR/Geometry/geometry_mpi_eo.c	/^static void  fix_next_neightbours()$/;"	f	file:
fixed_gfwall	Spectrum/measure_spectrum.c	/^  int fixed_gfwall;$/;"	m	struct:_input_mesons	file:
fixed_point	Spectrum/measure_spectrum.c	/^  int fixed_point;$/;"	m	struct:_input_mesons	file:
fixed_semwall	Spectrum/measure_spectrum.c	/^  int fixed_semwall;$/;"	m	struct:_input_mesons	file:
flip_T_bc	Spectrum/meson_measurements.c	/^static void flip_T_bc(int tau){$/;"	f	file:
flip_T_bc	Spectrum/meson_measurements_ff.c	/^static void flip_T_bc(int tau){$/;"	f	file:
flip_corrs	Spectrum/meson_measurements_ff.c	/^static void flip_corrs(meson_observable* mo){$/;"	f	file:
flip_mom	TestProgram/Update/check_update_1.c	/^static void flip_mom()$/;"	f	file:
flip_scalar_field	LibHR/Update/scalarfield_operations.c	/^void flip_scalar_field(scalar_field *s)$/;"	f
flow	HMC/hmc.c	/^hmc_flow flow=init_hmc_flow(flow);$/;"	v
flow	HMC/hmc_forces.c	/^hmc_flow flow=init_hmc_flow(flow);$/;"	v
flow	PureGauge/suN.c	/^pg_flow flow=init_pg_flow(flow);$/;"	v
flow	TestProgram/Update/check_update_1.c	/^rhmc_flow flow=init_rhmc_flow(flow);$/;"	v
force0	LibHR/Update/force0.c	/^void force0(double dt, suNg_av_field *force, void *vpar){$/;"	f
force_auxfield_par	Include/update.h	/^} force_auxfield_par;$/;"	t	typeref:struct:__anon40
force_f	Include/update.h	/^  void (*force_f)(double dt, suNg_av_field *force, void *par); \/* force function *\/$/;"	m	struct:_monomial
force_fermion_core	LibHR/Update/force_fermion_core.c	/^void force_fermion_core(spinor_field *Xs, spinor_field *Ys, suNg_av_field *force, int auto_fill_odd, double dt, double residue)$/;"	f
force_hmc	LibHR/Update/force_hmc.c	/^void force_hmc(double dt, suNg_av_field *force, void *vpar)$/;"	f
force_hmc_auxfields	LibHR/Update/force_4f.c	/^void force_hmc_auxfields( double dt, suNg_av_field *force, void *vpar ){$/;"	f
force_hmc_auxfields_fermion	LibHR/Update/force_4f.c	/^void force_hmc_auxfields_fermion(double dt, void *vpar, scalar_field *sigma_mom, scalar_field *pi_mom,spinor_field *Xs, spinor_field *Ys, int hasenbusch ){$/;"	f
force_hmc_ff	LibHR/Update/force_hmc_ff.c	/^void force_hmc_ff(double dt, suNg_av_field *force, void *vpar){$/;"	f
force_hmc_par	Include/update.h	/^} force_hmc_par;$/;"	t	typeref:struct:__anon39
force_hmc_tm	LibHR/Update/force_hmc_tm.c	/^void force_hmc_tm(double dt, suNg_av_field *force, void *vpar)$/;"	f
force_init	LibHR/Update/force_fermion_core.c	/^static int force_init = 0;$/;"	v	file:
force_measure_begin	LibHR/Update/force_fermion_core.c	/^void force_measure_begin()$/;"	f
force_measure_end	LibHR/Update/force_fermion_core.c	/^void force_measure_end(int id, const char *name, double dt, int nit)$/;"	f
force_par	Include/update.h	/^  void *force_par; \/* parameters for the force function *\/$/;"	m	struct:_monomial
force_prec	Include/update.h	/^  double force_prec; \/* force precision *\/$/;"	m	struct:_monomial_data
force_rhmc	LibHR/Update/force_rhmc.c	/^void force_rhmc(double dt, suNg_av_field *force, void *vpar)$/;"	f
force_rhmc_par	Include/update.h	/^} force_rhmc_par;$/;"	t	typeref:struct:__anon38
force_tmp	LibHR/Update/force_fermion_core.c	/^static suNg_av_field *force_tmp = NULL;$/;"	v	file:
forcestat_log_lvl	Include/input_par.h	/^  int forcestat_log_lvl;$/;"	m	struct:_input_logger
format	Converter/converter.c	/^format_type format[10] = {$/;"	v
format_type	Converter/converter.c	/^} format_type;$/;"	t	typeref:struct:_format_type	file:
foundRoots	LibHR/Update/remez/alg_remez.h	/^  int foundRoots;$/;"	m	class:AlgRemez
fpar	Include/update.h	/^  force_auxfield_par fpar;$/;"	m	struct:_mon_ff_par
fpar	Include/update.h	/^  force_hmc_par fpar;$/;"	m	struct:_mon_hasenbusch_par
fpar	Include/update.h	/^  force_hmc_par fpar;$/;"	m	struct:_mon_hasenbusch_tm_par
fpar	Include/update.h	/^  force_hmc_par fpar;$/;"	m	struct:_mon_hmc_par
fpar	Include/update.h	/^  force_hmc_par fpar;$/;"	m	struct:_mon_tm_par
fpar	Include/update.h	/^  force_rhmc_par fpar;$/;"	m	struct:_mon_rhmc_par
fps_eval	Analysis/Mesons/bs_observables.cpp	/^void fps_eval(Corr_t* fps_eff, Corr_t* g5_cor, Corr_t* g5_eff, Corr_t* mpcac_eff) {$/;"	f
fread_BE_double	LibHR/IO/endian.c	/^int fread_BE_double(double* ptr, size_t n, FILE* fp) {$/;"	f
fread_BE_float	LibHR/IO/endian.c	/^int fread_BE_float(float* ptr, size_t n, FILE* fp) {$/;"	f
fread_BE_int	LibHR/IO/endian.c	/^int fread_BE_int(int* ptr, size_t n, FILE* fp) {$/;"	f
fread_LE_double	LibHR/IO/endian.c	/^int fread_LE_double(double* ptr, size_t n, FILE* fp) {$/;"	f
fread_LE_int	LibHR/IO/endian.c	/^int fread_LE_int(int* ptr, size_t n, FILE* fp) {$/;"	f
free	Include/update.h	/^  void (*free)(struct _monomial *m); \/* free memory *\/$/;"	m	struct:_monomial
free_BCs	LibHR/Utils/boundary_conditions.c	/^void free_BCs() {$/;"	f
free_correlators	TestProgram/TripletMesons/check_triplets_1.c	/^void free_correlators(double **triplets) {$/;"	f
free_force_hmc	LibHR/Update/force_hmc.c	/^void free_force_hmc()$/;"	f
free_force_hmc_tm	LibHR/Update/force_hmc_tm.c	/^static void free_force_hmc_tm()$/;"	f	file:
free_g	GaugeFix/gaugefix.c	/^static void free_g(){$/;"	f	file:
free_ghmc	LibHR/Update/update_mt.c	/^void free_ghmc()$/;"	f
free_hb_boundary	LibHR/Update/update_hb.c	/^static void free_hb_boundary() {$/;"	f	file:
free_loc_mem	LibHR/Utils/eva_deflation.c	/^static void free_loc_mem() {$/;"	f	file:
free_mem	LibHR/Update/Dphi.c	/^static void free_mem() {$/;"	f	file:
free_mem	LibHR/Update/Dphi_flt.c	/^static void free_mem() {$/;"	f	file:
free_mem	LibHR/Update/monomials.c	/^static void free_mem() {$/;"	f	file:
free_memory	LibHR/Geometry/geometry_init.c	/^static void free_memory() {$/;"	f	file:
free_meson_observables	LibHR/Observables/measure_mesons.c	/^void free_meson_observables(){$/;"	f
free_mo	Scattering/main_run.c	/^void free_mo(meson_observable* mo)$/;"	f
free_mo	Scattering/scatter_test.c	/^void free_mo(meson_observable* mo)$/;"	f
free_modenumber	ModeNumber/modenumber.c	/^void free_modenumber() {$/;"	f
free_mon	LibHR/Update/monomials.c	/^static void free_mon(mon_list *mon) {$/;"	f	file:
free_mon_list	LibHR/Update/monomials.c	/^static void free_mon_list(mon_list *action) {$/;"	f	file:
free_observables_core	LibHR/Observables/measure_mesons.c	/^static void free_observables_core(  meson_observable* mo){$/;"	f	file:
free_observables_core	LibHR/Observables/measure_mesons_ff.c	/^static void free_observables_core(  meson_observable* mo){$/;"	f	file:
free_propagator_eo	LibHR/Observables/calc_prop.c	/^void free_propagator_eo() {$/;"	f
free_propagator_ff_eo	LibHR/Observables/calc_prop_ff.c	/^void free_propagator_ff_eo() {$/;"	f
free_triplet_discon_observables	LibHR/Observables/measure_mesons_ff.c	/^void free_triplet_discon_observables(){$/;"	f
from	LibHR/Geometry/test_geometry_mpi.c	/^  block_info* from;$/;"	m	struct:__anon45	file:
ftos	Make/Utils/autosun/complex.h	/^string ftos(FLOATING x)$/;"	f
full_momenta	LibHR/Observables/avr_plaquette.c	/^void full_momenta(suNg_av_field *momenta){$/;"	f
full_plaquette	LibHR/Observables/avr_plaquette.c	/^void full_plaquette()$/;"	f
full_rect_1x2	LibHR/Observables/avr_rect.c	/^void full_rect_1x2()$/;"	f
func	LibHR/Update/remez/alg_remez.C	/^bigfloat AlgRemez::func(const bigfloat x) {$/;"	f	class:AlgRemez
fund	TestProgram/Algebra/check_algebra_1.c	/^static float fund=(float)(NG*NG-1)\/(2*(float)(NG));$/;"	v	file:
fundamental_algebra_project	Make/Utils/autosun/sun.h	/^string fundamental_algebra_project(const char* hname, const char* mname)$/;"	f
fundamental_algebra_represent	Make/Utils/autosun/sun.h	/^string fundamental_algebra_represent(const char* mname, const char* hname)$/;"	f
fv_eval	Analysis/Mesons/bs_observables.cpp	/^void fv_eval(Corr_t* fv_eff, Corr_t* g1_cor, Corr_t* g1_eff) {$/;"	f
fvk_eval	Analysis/Mesons/bs_observables.cpp	/^void fvk_eval(Corr_t* fvk_eff, Corr_t* gk_cor, Corr_t* gk_eff) {$/;"	f
fwrite_BE_double	LibHR/IO/endian.c	/^int fwrite_BE_double(double* ptr, size_t n, FILE* fp) {$/;"	f
fwrite_BE_int	LibHR/IO/endian.c	/^int fwrite_BE_int(int* ptr, size_t n, FILE* fp) {$/;"	f
fwrite_LE_double	LibHR/IO/endian.c	/^int fwrite_LE_double(double* ptr, size_t n, FILE* fp) {$/;"	f
fwrite_LE_int	LibHR/IO/endian.c	/^int fwrite_LE_int(int* ptr, size_t n, FILE* fp) {$/;"	f
g	GaugeFix/gaugefix.c	/^suNg_field* g;$/;"	v
g	TestProgram/DiracOperator/check_diracoperator_1.c	/^static suNg_field *g;$/;"	v	file:
g	TestProgram/DiracOperator/check_diracoperator_5.c	/^static suNg_field *g;$/;"	v	file:
g	TestProgram/DiracOperator/speed_test_diracoperator.c	/^static suNg_field *g;$/;"	v	file:
g	TestProgram/DiracOperator/speed_test_diracoperator_flt.c	/^static suNg_field *g;$/;"	v	file:
g	TestProgram/RotatedSF/check_rotatedsf_1.c	/^static suNg_field *g;$/;"	v	file:
g	TestProgram/RotatedSF/check_rotatedsf_2.c	/^static suNg_field *g;$/;"	v	file:
g0	TestProgram/TripletMesons/check_triplets_1.c	/^static int g0[8] = {1,  1,  1, -1, -1, -1,  1, -1}; \/* g0 = tr Gamma Gamma \/ 4 *\/$/;"	v	file:
g1	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g1	TestProgram/TripletMesons/check_triplets_1.c	/^static int g1[8] = {1,  1, -1, -1,  1, -1, -1, +1}; \/* g1 = tr gamma_1 \\bar{Gamma} gamma_1 Gamma \/ 4 *\/$/;"	v	file:
g1_ij	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g2	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g2	TestProgram/TripletMesons/check_triplets_1.c	/^static int g2[8] = {1,  1,  1,  1,  1,  1, -1, -1}; \/* g2 = tr gamma_2 \\bar{Gamma} gamma_2 Gamma \/ 4 *\/$/;"	v	file:
g2_ij	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g3	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g3	TestProgram/TripletMesons/check_triplets_1.c	/^static int g3[8] = {1,  1,  1,  1,  1,  1, -1, -1}; \/* g3 = tr gamma_3 \\bar{Gamma} gamma_3 Gamma \/ 4 *\/$/;"	v	file:
g3_ij	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g4	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g4_ij	Include/observables.h	/^  complex ***g1_ij, ***g2_ij, ***g3_ij, ***g4_ij, *g1, *g2, *g3, *g4, **M;$/;"	m	struct:__anon18
g5Dphi	LibHR/Update/Dphi.c	/^void g5Dphi(double m0, spinor_field *out, spinor_field *in)$/;"	f
g5Dphi_eopre	LibHR/Update/Dphi.c	/^void g5Dphi_eopre(double m0, spinor_field *out, spinor_field *in)$/;"	f
g5Dphi_eopre_flt	LibHR/Update/Dphi_flt.c	/^void g5Dphi_eopre_flt(double m0, spinor_field_flt *out, spinor_field_flt *in)$/;"	f
g5Dphi_eopre_sq	LibHR/Update/Dphi.c	/^void g5Dphi_eopre_sq(double m0, spinor_field *out, spinor_field *in) {$/;"	f
g5Dphi_eopre_sq_flt	LibHR/Update/Dphi_flt.c	/^void g5Dphi_eopre_sq_flt(double m0, spinor_field_flt *out, spinor_field_flt *in) {$/;"	f
g5Dphi_flt	LibHR/Update/Dphi_flt.c	/^void g5Dphi_flt(double m0, spinor_field_flt *out, spinor_field_flt *in)$/;"	f
g5Dphi_sq	LibHR/Update/Dphi.c	/^void g5Dphi_sq(double m0, spinor_field *out, spinor_field *in) {$/;"	f
g5Dphi_sq_flt	LibHR/Update/Dphi_flt.c	/^void g5Dphi_sq_flt(double m0, spinor_field_flt *out, spinor_field_flt *in) {$/;"	f
g5Herm	LibHR/Inverters/g5QMR_mshift.c	/^static spinor_operator g5Herm;$/;"	v	file:
g5Herm	LibHR/Observables/g5QMR_trunc.c	/^static spinor_operator g5Herm;$/;"	v	file:
g5Herm_flt	LibHR/Inverters/g5QMR_mshift.c	/^static spinor_operator_flt g5Herm_flt;$/;"	v	file:
g5QMR_core_flt	LibHR/Inverters/g5QMR_mshift.c	/^static int g5QMR_core_flt(short *valid, double err2, int max_iter, spinor_operator_flt M, spinor_field_flt *in, spinor_field_flt *out){$/;"	f	file:
g5QMR_fltacc	LibHR/Inverters/g5QMR_mshift.c	/^int g5QMR_fltacc( g5QMR_fltacc_par* par, spinor_operator M, spinor_operator_flt M_flt, spinor_field *in, spinor_field *out)$/;"	f
g5QMR_fltacc_par	Include/inverters.h	/^} g5QMR_fltacc_par;$/;"	t	typeref:struct:__anon15
g5QMR_mshift	LibHR/Inverters/g5QMR_mshift.c	/^int g5QMR_mshift(mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out)$/;"	f
g5QMR_mshift_core	LibHR/Inverters/g5QMR_mshift.c	/^static int g5QMR_mshift_core(short *valid, mshift_par *par, spinor_operator M, spinor_field *in, spinor_field *out){$/;"	f	file:
g5QMR_mshift_core	LibHR/Observables/g5QMR_trunc.c	/^static int g5QMR_mshift_core(short *valid, mshift_par *par, int trunc_iter, spinor_operator M, spinor_field *in, spinor_field *out_trunc, spinor_field *out){$/;"	f	file:
g5QMR_mshift_trunc	LibHR/Observables/g5QMR_trunc.c	/^int g5QMR_mshift_trunc(mshift_par *par, int trunc_iter, spinor_operator M, spinor_field *in, spinor_field *out_trunc, spinor_field *out){$/;"	f
gUgmu	GaugeFix/gaugefix.c	/^static void gUgmu(suNg_field *gauge){$/;"	f	file:
g_dn_Dirichlet_BCs	LibHR/Update/update_hb.c	/^static void g_dn_Dirichlet_BCs() {$/;"	f	file:
g_dn_open_BCs	LibHR/Update/update_hb.c	/^static void g_dn_open_BCs() {$/;"	f	file:
g_start	HMC/hmc_utils.h	/^  char g_start[64]; \/* for gauge fields => unit, random, file *\/$/;"	m	struct:_hmc_flow
g_start	PureGauge/suN_utils.h	/^  char g_start[64]; \/* for gauge fields => unit, random, file *\/$/;"	m	struct:_pg_flow
g_up_Dirichlet_BCs	LibHR/Update/update_hb.c	/^static void g_up_Dirichlet_BCs() {$/;"	f	file:
g_up_open_BCs	LibHR/Update/update_hb.c	/^static void g_up_open_BCs() {$/;"	f	file:
gamma	Include/update.h	/^  double gamma;$/;"	m	struct:__anon40
gamma	Include/update.h	/^  double gamma;$/;"	m	struct:_mon_ff_par
gamma_ind	Include/meson_observables.h	/^typedef enum { _g5= 0,_id, _g0, _g1, _g2, _g3,  _g0g1, _g0g2, _g0g3, _g0g5, _g5g1, _g5g2, _g5g3, _g0g5g1, _g0g5g2, _g0g5g3,NGAMMA_IND,_NOGAMMA} gamma_ind;$/;"	t	typeref:enum:__anon16
gauge_boundary_dn	Include/utils.h	/^  suNg gauge_boundary_dn;$/;"	m	struct:__anon43
gauge_boundary_improvement_cs	Include/utils.h	/^  double gauge_boundary_improvement_cs;$/;"	m	struct:__anon43
gauge_boundary_improvement_ct	Include/utils.h	/^  double gauge_boundary_improvement_ct;$/;"	m	struct:__anon43
gauge_boundary_up	Include/utils.h	/^  suNg gauge_boundary_up;$/;"	m	struct:__anon43
gaugefix	GaugeFix/gaugefix.c	/^double gaugefix(int fix_dir,double overrelax,int max_it,$/;"	f
gaugefix_action	GaugeFix/gaugefix.c	/^double gaugefix_action(int fix_dir, suNg_field *gauge ){$/;"	f
gaugefix_measure_OBJS	GaugeFix/Makefile	/^gaugefix_measure_OBJS = $(MOD_OBJS)$/;"	m
gaugefix_unittest_OBJS	GaugeFix/Makefile	/^gaugefix_unittest_OBJS = $(MOD_OBJS)$/;"	m
gaugefixstep	GaugeFix/gaugefix.c	/^double gaugefixstep(int fix_dir,double overrelax, suNg_field *fixed_gauge )$/;"	f
gauss	LibHR/Random/gauss.c	/^void gauss(double r[],int n)$/;"	f
gauss_flt	LibHR/Random/gauss.c	/^void gauss_flt(float rd[],int n)$/;"	f
gaussian_momenta	LibHR/Update/random_momenta.c	/^void gaussian_momenta(suNg_av_field *momenta) {$/;"	f
gaussian_pf	Include/update.h	/^  void (*gaussian_pf)(const struct _monomial *m);$/;"	m	struct:_monomial
gaussian_scalar_field	LibHR/Update/scalarfield_operations.c	/^void gaussian_scalar_field(scalar_field *s)$/;"	f
gaussian_spinor_field	LibHR/Update/random_spinor_field.c	/^void gaussian_spinor_field(spinor_field *s) {$/;"	f
gaussian_spinor_field_flt	LibHR/Update/random_spinor_field.c	/^void gaussian_spinor_field_flt(spinor_field_flt *s) {$/;"	f
gaussian_suNg_vector	LibHR/Random/random_suNg.c	/^void gaussian_suNg_vector(suNg_vector *v)$/;"	f
gb	TestProgram/TripletMesons/check_triplets_1.c	/^static int gb[8] = {1,  1,  1, -1, -1, -1,  1, -1};$/;"	v	file:
gcd	LibHR/Update/mon_rhmc.c	/^static int gcd(int a, int b) {$/;"	f	file:
generateApprox	LibHR/Update/remez/alg_remez.C	/^double AlgRemez::generateApprox(int degree, unsigned long pnum, $/;"	f	class:AlgRemez
generateApprox	LibHR/Update/remez/alg_remez.C	/^double AlgRemez::generateApprox(int num_degree, int den_degree, $/;"	f	class:AlgRemez
generate_random_point	LibHR/Random/ran_utils.c	/^void generate_random_point(int *pr) {$/;"	f
geometry_blocked	LibHR/Geometry/blocked.c	/^void geometry_blocked(void)$/;"	f
geometry_blocked_noT	LibHR/Geometry/blocked.c	/^void geometry_blocked_noT(void)$/;"	f
geometry_descriptor	Include/geometry.h	/^} geometry_descriptor;$/;"	t	typeref:struct:_geometry_descriptor
geometry_eo_lexi	LibHR/Geometry/eo_lexi.c	/^void geometry_eo_lexi(void)$/;"	f
geometry_init	LibHR/Geometry/geometry_init.c	/^int geometry_init() {$/;"	f
geometry_lexi	LibHR/Geometry/lexi.c	/^void geometry_lexi(void)$/;"	f
geometry_mem_alloc	LibHR/Geometry/geometry_init.c	/^void geometry_mem_alloc() {$/;"	f
geometry_mpi_eo	LibHR/Geometry/geometry_mpi_eo.c	/^void geometry_mpi_eo(void){$/;"	f
geometry_mpi_finalize	LibHR/Geometry/geometry_mpi_eo.c	/^static void geometry_mpi_finalize(){$/;"	f	file:
geometry_mpi_init	LibHR/Geometry/geometry_mpi_eo.c	/^static void geometry_mpi_init()$/;"	f	file:
get	Make/Utils/autosun/list.h	/^	const VALUE& get(const INDEX& index) const$/;"	f	class:orderedlist
get	Make/Utils/autosun/sparse.h	/^	const VALUE& get(int row) const$/;"	f	class:sparsevector
get	Make/Utils/autosun/sparse.h	/^	const VALUE& get(int row, int col) const$/;"	f	class:sparsematrix
getDefaultPrecision	LibHR/Update/remez/bigfloat.h	/^  unsigned long getDefaultPrecision(void) const { return mpf_get_default_prec(); }$/;"	f	class:bigfloat
getErr	LibHR/Update/remez/alg_remez.C	/^bigfloat AlgRemez::getErr(bigfloat x, int *sign) {$/;"	f	class:AlgRemez
getIPFE	LibHR/Update/remez/alg_remez.C	/^int AlgRemez::getIPFE(double *Res, double *Pole, double *Norm) {$/;"	f	class:AlgRemez
getMM	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::getMM(bigfloat *dmm) {$/;"	f	class:AlgRemez
getMVM	LibHR/Update/Dphi.c	/^unsigned long int getMVM() {$/;"	f
getMVM_flt	LibHR/Update/Dphi_flt.c	/^unsigned long int getMVM_flt() {$/;"	f
getPFE	LibHR/Update/remez/alg_remez.C	/^int AlgRemez::getPFE(double *Res, double *Pole, double *Norm) {$/;"	f	class:AlgRemez
getPR	LibHR/Update/remez/alg_remez.C	/^int AlgRemez::getPR(double *Root, double *Pole, double *Norm) {$/;"	f	class:AlgRemez
getPrecision	LibHR/Update/remez/bigfloat.h	/^  unsigned long getPrecision(void) const { return mpf_get_prec(x); }$/;"	f	class:bigfloat
get_left_cut	Analysis/Mesons/bs_ctrl.cpp	/^int eval_ctrl::get_left_cut() {$/;"	f	class:eval_ctrl
get_level	Analysis/Mesons/bs_ctrl.h	/^  bool get_level(int i){return level[i];}$/;"	f	class:eval_ctrl
get_right_cut	Analysis/Mesons/bs_ctrl.cpp	/^int eval_ctrl::get_right_cut() {$/;"	f	class:eval_ctrl
getstring	Make/Utils/autosun/polynomial.h	/^	virtual string getstring() const$/;"	f	class:polynomial
getstring	Make/Utils/autosun/polynomial.h	/^	virtual string getstring() const$/;"	f	class:rmonomial
getstring	Make/Utils/autosun/sparse.h	/^	virtual string getstring() const$/;"	f	class:sparsematrix
getstring	Make/Utils/autosun/sparse.h	/^	virtual string getstring() const$/;"	f	class:sparsevector
getzero	Make/Utils/autosun/matrix.h	/^	complex& getzero() const$/;"	f	class:smatrix
getzero	Make/Utils/autosun/matrix.h	/^	complex& getzero() const$/;"	f	class:svector
getzero	Make/Utils/autosun/matrix.h	/^	polynomial& getzero() const$/;"	f	class:pmatrix
getzero	Make/Utils/autosun/matrix.h	/^	polynomial& getzero() const$/;"	f	class:pvector
getzero	Make/Utils/autosun/polynomial.h	/^	complex& getzero() const$/;"	f	class:polynomial
getzero	Make/Utils/autosun/polynomial.h	/^	int& getzero() const$/;"	f	class:rmonomial
gf_Dirichlet_BCs	LibHR/Utils/boundary_conditions.c	/^static void gf_Dirichlet_BCs(suNg* dn, suNg* up) {$/;"	f	file:
gf_control	LibHR/Geometry/communications.c	/^int gf_control=0,sf_control=0;$/;"	v
gf_control	LibHR/Geometry/communications_flt.c	/^int gf_control=0,sf_control=0;$/;"	v
gf_open_BCs	LibHR/Utils/boundary_conditions.c	/^static void gf_open_BCs() {$/;"	f	file:
gfend	LibHR/Geometry/communications.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
gfend	LibHR/Geometry/communications_flt.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
gfetime	LibHR/Geometry/communications.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
gfetime	LibHR/Geometry/communications_flt.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
gforce	LibHR/Update/integrators.c	/^void gforce(suNg_av_field *force, double dt, int nmon, const monomial **mon_list)$/;"	f
gfstart	LibHR/Geometry/communications.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:timeval
gfstart	LibHR/Geometry/communications_flt.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:timeval
gfwall_src	Spectrum/measure_formfactor.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon81	file:
gfwall_src	TestProgram/Deflate/check_deflate.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon102	file:
gfwall_src	TestProgram/Propagator/check_propagator.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon105	file:
ghmc_par	Include/update.h	/^} ghmc_par;$/;"	t	typeref:struct:_ghmc_par
gid	TestProgram/TripletMesons/check_triplets_1.c	/^static int gid[8]= {1, -1, -1, -1,  1,  1,  1, -1}; \/* gid = tr \\bar{Gamma} Gamma \/ 4 *\/$/;"	v	file:
glb_coord	LibHR/Geometry/test_geometry_mpi.c	/^  int glb_coord[4];                \/* global coordinates *\/$/;"	m	struct:_site_info	file:
glb_ip	TestProgram/TripletMesons/check_triplets_1.c	/^input_glb glb_ip = init_input_glb(glb_ip);$/;"	v
glb_to_proc	LibHR/Geometry/geometry_init.c	/^void glb_to_proc(int *g, int *p) {$/;"	f
global_max	LibHR/Geometry/communications.c	/^void global_max(double *d, int n) {$/;"	f
global_sum	LibHR/Geometry/communications.c	/^void global_sum(double *d, int n) {$/;"	f
global_sum_int	LibHR/Geometry/communications.c	/^void global_sum_int(int *d, int n) {$/;"	f
gps_eval	Analysis/Mesons/bs_observables.cpp	/^void gps_eval(Corr_t* gps_eff, Corr_t* g5_cor, Corr_t* g5_eff) {$/;"	f
gram_schmidt	LibHR/Update/mre.c	/^void gram_schmidt(mre_par *par, int p, int max)$/;"	f
group	Make/Utils/autosun/sun.h	/^namespace group$/;"	n
group_represent	Make/Utils/autosun/adjoint.h	/^string group_represent(const char* vname, const char* uname)$/;"	f
group_represent	Make/Utils/autosun/antisymmetric.h	/^string group_represent(const char* vname, const char* uname)$/;"	f
group_represent	Make/Utils/autosun/fundamental.h	/^string group_represent(const char* vname, const char* uname)$/;"	f
group_represent	Make/Utils/autosun/symmetric.h	/^string group_represent(const char* vname, const char* uname)$/;"	f
gsize_gauge	Include/geometry.h	/^  int gsize_gauge;$/;"	m	struct:_geometry_descriptor
gsize_spinor	Include/geometry.h	/^  int gsize_spinor;$/;"	m	struct:_geometry_descriptor
gtmp	LibHR/Update/Dphi.c	/^spinor_field *gtmp=NULL;$/;"	v
gtmp	LibHR/Update/Dphi_flt.c	/^static spinor_field_flt *gtmp=NULL;$/;"	v	file:
guess_inf	LibHR/Update/remez/main.C	/^} guess_inf;$/;"	t	typeref:struct:_guess_inf	file:
h	ModeNumber/approx_for_modenumber.c	/^static double h(double x, double epsilon, int order, double *c) {$/;"	f	file:
hasen_add_local_action	LibHR/Update/mon_hasen.c	/^void hasen_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
hasen_correct_la_pf	LibHR/Update/mon_hasen.c	/^void hasen_correct_la_pf(const struct _monomial *m) {$/;"	f
hasen_correct_pf	LibHR/Update/mon_hasen.c	/^void hasen_correct_pf(const struct _monomial *m) {$/;"	f
hasen_create	LibHR/Update/mon_hasen.c	/^struct _monomial* hasen_create(const monomial_data *data) {$/;"	f
hasen_ff_add_local_action	LibHR/Update/mon_hasen_ff.c	/^void hasen_ff_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
hasen_ff_correct_la_pf	LibHR/Update/mon_hasen_ff.c	/^void hasen_ff_correct_la_pf(const struct _monomial *m) {$/;"	f
hasen_ff_correct_pf	LibHR/Update/mon_hasen_ff.c	/^void hasen_ff_correct_pf(const struct _monomial *m) {$/;"	f
hasen_ff_create	LibHR/Update/mon_hasen_ff.c	/^struct _monomial* hasen_ff_create(const monomial_data *data) {$/;"	f
hasen_ff_free	LibHR/Update/mon_hasen_ff.c	/^void hasen_ff_free(struct _monomial *m) {$/;"	f
hasen_ff_gaussian_pf	LibHR/Update/mon_hasen_ff.c	/^void hasen_ff_gaussian_pf(const struct _monomial *m) {$/;"	f
hasen_ff_init_traj	LibHR/Update/mon_hasen_ff.c	/^void hasen_ff_init_traj(const struct _monomial *m) {$/;"	f
hasen_ff_pseudofermion	LibHR/Update/mon_hasen_ff.c	/^const spinor_field* hasen_ff_pseudofermion(const struct _monomial *m) {$/;"	f
hasen_free	LibHR/Update/mon_hasen.c	/^void hasen_free(struct _monomial *m) {$/;"	f
hasen_gaussian_pf	LibHR/Update/mon_hasen.c	/^void hasen_gaussian_pf(const struct _monomial *m) {$/;"	f
hasen_init_traj	LibHR/Update/mon_hasen.c	/^void hasen_init_traj(const struct _monomial *m) {$/;"	f
hasen_pseudofermion	LibHR/Update/mon_hasen.c	/^const spinor_field* hasen_pseudofermion(const struct _monomial *m) {$/;"	f
hasen_tm_add_local_action	LibHR/Update/mon_hasen_tm.c	/^void hasen_tm_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
hasen_tm_alt_add_local_action	LibHR/Update/mon_hasen_tm_alt.c	/^void hasen_tm_alt_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
hasen_tm_alt_correct_la_pf	LibHR/Update/mon_hasen_tm_alt.c	/^void hasen_tm_alt_correct_la_pf(const struct _monomial *m) {$/;"	f
hasen_tm_alt_correct_pf	LibHR/Update/mon_hasen_tm_alt.c	/^void hasen_tm_alt_correct_pf(const struct _monomial *m) {$/;"	f
hasen_tm_alt_create	LibHR/Update/mon_hasen_tm_alt.c	/^struct _monomial* hasen_tm_alt_create(const monomial_data *data) {$/;"	f
hasen_tm_alt_free	LibHR/Update/mon_hasen_tm_alt.c	/^void hasen_tm_alt_free(struct _monomial *m) {$/;"	f
hasen_tm_alt_gaussian_pf	LibHR/Update/mon_hasen_tm_alt.c	/^void hasen_tm_alt_gaussian_pf(const struct _monomial *m) {$/;"	f
hasen_tm_alt_init_traj	LibHR/Update/mon_hasen_tm_alt.c	/^void hasen_tm_alt_init_traj(const struct _monomial *m) {$/;"	f
hasen_tm_alt_pseudofermion	LibHR/Update/mon_hasen_tm_alt.c	/^const spinor_field* hasen_tm_alt_pseudofermion(const struct _monomial *m) {$/;"	f
hasen_tm_correct_la_pf	LibHR/Update/mon_hasen_tm.c	/^void hasen_tm_correct_la_pf(const struct _monomial *m) {$/;"	f
hasen_tm_correct_pf	LibHR/Update/mon_hasen_tm.c	/^void hasen_tm_correct_pf(const struct _monomial *m) {$/;"	f
hasen_tm_create	LibHR/Update/mon_hasen_tm.c	/^struct _monomial* hasen_tm_create(const monomial_data *data) {$/;"	f
hasen_tm_free	LibHR/Update/mon_hasen_tm.c	/^void hasen_tm_free(struct _monomial *m) {$/;"	f
hasen_tm_gaussian_pf	LibHR/Update/mon_hasen_tm.c	/^void hasen_tm_gaussian_pf(const struct _monomial *m) {$/;"	f
hasen_tm_init_traj	LibHR/Update/mon_hasen_tm.c	/^void hasen_tm_init_traj(const struct _monomial *m) {$/;"	f
hasen_tm_pseudofermion	LibHR/Update/mon_hasen_tm.c	/^const spinor_field* hasen_tm_pseudofermion(const struct _monomial *m) {$/;"	f
hasenbusch	Include/update.h	/^  int hasenbusch;$/;"	m	struct:__anon39
hc	Analysis/Mesons/effective_mass.cpp	/^double hc(int t, double m, int Lt) {$/;"	f
help	Analysis/Mesons/mk_efficiencytable.sh	/^help(){$/;"	f
help	Analysis/Mesons/mk_effmass.sh	/^help(){$/;"	f
help	Analysis/Mesons/mk_fit.sh	/^help(){$/;"	f
herm	Make/Utils/autosun/sparse.h	/^	friend void herm(VALUE& ret, const sparselinear<INDEX,VALUE>& l, const sparselinear<INDEX,VALUE>& k)$/;"	f	class:sparselinear
hevamass	ModeNumber/mk_eigvals.c	/^double hevamass=0.;$/;"	v
hevamass	ModeNumber/mk_modenumber.c	/^double hevamass=0.;$/;"	v
hist	Analysis/Mesons/datasample.cpp	/^void datasample::hist(double *n, int npt, double *x, double w) const {$/;"	f	class:datasample
hits	Reweight/reweight.h	/^	int hits;$/;"	m	struct:__anon76
hmass	LibHR/Observables/pta_qprop.c	/^static double hmass, hmass_pre;$/;"	v	file:
hmass	LibHR/Observables/sf_pcac.c	/^static double hmass;$/;"	v	file:
hmass	LibHR/Observables/trunc_hairpin.c	/^static double hmass=0.;$/;"	v	file:
hmass	LibHR/Observables/z2semwall.c	/^static double hmass;$/;"	v	file:
hmass	TestProgram/DiracOperator/check_diracoperator_1.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/DiracOperator/check_diracoperator_2.c	/^double hmass=0.1;$/;"	v
hmass	TestProgram/DiracOperator/check_diracoperator_3.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/DiracOperator/check_diracoperator_5.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/DiracOperator/check_diracoperator_6.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/DiracOperator/speed_test_diracoperator.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/DiracOperator/speed_test_diracoperator_flt.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_1.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_2.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_3.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_4.c	/^static double hmass=-7.94871867e-01f;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_5.c	/^static double hmass=0.1;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_6.c	/^static double hmass=1.2;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_7.c	/^static double hmass=1.15;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_8.c	/^static double hmass=0.;$/;"	v	file:
hmass	TestProgram/Inverters/check_inverters_SAP.c	/^static double hmass=0.1;$/;"	v	file:
hmass_pre	LibHR/Observables/calc_prop.c	/^static double hmass_pre;$/;"	v	file:
hmass_pre	LibHR/Observables/pta_qprop.c	/^static double hmass, hmass_pre;$/;"	v	file:
hmass_pre	LibHR/Observables/z2semwall.c	/^static double hmass_pre;$/;"	v	file:
hmass_pre	LibHR/Observables/z2semwall_new.c	/^static double hmass_pre;$/;"	v	file:
hmc_OBJS	HMC/Makefile	/^hmc_OBJS = hmc_utils.o ..\/Spectrum\/meson_measurements.o ..\/GaugeFix\/gaugefix.o$/;"	m
hmc_add_local_action	LibHR/Update/mon_hmc.c	/^void hmc_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
hmc_correct_la_pf	LibHR/Update/mon_hmc.c	/^void hmc_correct_la_pf(const struct _monomial *m) {$/;"	f
hmc_correct_pf	LibHR/Update/mon_hmc.c	/^void hmc_correct_pf(const struct _monomial *m) {$/;"	f
hmc_create	LibHR/Update/mon_hmc.c	/^struct _monomial* hmc_create(const monomial_data *data) {$/;"	f
hmc_ff_add_local_action	LibHR/Update/mon_hmc_ff.c	/^void hmc_ff_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
hmc_ff_correct_la_pf	LibHR/Update/mon_hmc_ff.c	/^void hmc_ff_correct_la_pf(const struct _monomial *m) {$/;"	f
hmc_ff_correct_pf	LibHR/Update/mon_hmc_ff.c	/^void hmc_ff_correct_pf(const struct _monomial *m) {$/;"	f
hmc_ff_create	LibHR/Update/mon_hmc_ff.c	/^struct _monomial* hmc_ff_create(const monomial_data *data) {$/;"	f
hmc_ff_free	LibHR/Update/mon_hmc_ff.c	/^void hmc_ff_free(struct _monomial *m) {$/;"	f
hmc_ff_gaussian_pf	LibHR/Update/mon_hmc_ff.c	/^void hmc_ff_gaussian_pf(const struct _monomial *m) {$/;"	f
hmc_ff_init_traj	LibHR/Update/mon_hmc_ff.c	/^void hmc_ff_init_traj(const struct _monomial *m) {$/;"	f
hmc_ff_pseudofermion	LibHR/Update/mon_hmc_ff.c	/^const spinor_field* hmc_ff_pseudofermion(const struct _monomial *m) {$/;"	f
hmc_flow	HMC/hmc_utils.h	/^} hmc_flow;$/;"	t	typeref:struct:_hmc_flow
hmc_forces_OBJS	HMC/Makefile	/^hmc_forces_OBJS =  hmc_utils.o$/;"	m
hmc_free	LibHR/Update/mon_hmc.c	/^void hmc_free(struct _monomial *m) {$/;"	f
hmc_gaussian_pf	LibHR/Update/mon_hmc.c	/^void hmc_gaussian_pf(const struct _monomial *m) {$/;"	f
hmc_init_traj	LibHR/Update/mon_hmc.c	/^void hmc_init_traj(const struct _monomial *m) {$/;"	f
hmc_p	HMC/hmc_utils.h	/^  ghmc_par hmc_p;$/;"	m	struct:_input_hmc
hmc_pseudofermion	LibHR/Update/mon_hmc.c	/^const spinor_field* hmc_pseudofermion(const struct _monomial *m) {$/;"	f
hmc_v	HMC/hmc_utils.h	/^  input_hmc *hmc_v;$/;"	m	struct:_hmc_flow
hmc_var	HMC/hmc_utils.c	/^input_hmc hmc_var = init_input_hmc(hmc_var);$/;"	v
hopping_order	Include/observables.h	/^  int hopping_order;$/;"	m	struct:_ata_qprop_pars
hopping_propagator	LibHR/Observables/trunc_hairpin.c	/^static void hopping_propagator(complex** prop) {$/;"	f	file:
hopping_propagator_ws	LibHR/Observables/trunc_hairpin.c	/^static spinor_field* hopping_propagator_ws;$/;"	v	file:
hopping_remainder	LibHR/Observables/trunc_hairpin.c	/^static void hopping_remainder(spinor_field *out, spinor_field *in, int m) {$/;"	f	file:
hopping_remainder_ws	LibHR/Observables/trunc_hairpin.c	/^static spinor_field* hopping_remainder_ws;$/;"	v	file:
iT	Make/Utils/autosun/adjoint.h	/^	smatrix* iT;$/;"	m	namespace:representation
iT	Make/Utils/autosun/antisymmetric.h	/^	smatrix* iT;$/;"	m	namespace:representation
iT	Make/Utils/autosun/fundamental.h	/^	smatrix* iT;$/;"	m	namespace:representation
iT	Make/Utils/autosun/symmetric.h	/^	smatrix* iT;$/;"	m	namespace:representation
iTnorm	Make/Utils/autosun/adjoint.h	/^	FLOATING iTnorm;$/;"	m	namespace:representation
iTnorm	Make/Utils/autosun/antisymmetric.h	/^	FLOATING iTnorm;$/;"	m	namespace:representation
iTnorm	Make/Utils/autosun/fundamental.h	/^	FLOATING iTnorm;$/;"	m	namespace:representation
iTnorm	Make/Utils/autosun/symmetric.h	/^	FLOATING iTnorm;$/;"	m	namespace:representation
i_v	LibHR/Update/random_su2.c	/^static int i_vec=NVEC,i_y=NRAN,i_v=NRAN;$/;"	v	file:
i_vec	LibHR/Update/random_su2.c	/^static int i_vec=NVEC,i_y=NRAN,i_v=NRAN;$/;"	v	file:
i_y	LibHR/Update/random_su2.c	/^static int i_vec=NVEC,i_y=NRAN,i_v=NRAN;$/;"	v	file:
id	Include/update.h	/^  int id; \/* monomial id *\/$/;"	m	struct:_monomial_data
id	Include/update.h	/^  int id;$/;"	m	struct:__anon38
id	Include/update.h	/^  int id;$/;"	m	struct:__anon39
id_mask	LibHR/Geometry/geometry_mpi_eo.c	/^  int id_mask;$/;"	m	struct:__anon44	file:
id_proc	LibHR/Geometry/geometry_mpi_eo.c	/^  int id_proc; \/*id of the processor to which i should send or from whom i would like to recive data*\/$/;"	m	struct:__anon44	file:
id_zone	LibHR/Geometry/geometry_mpi_eo.c	/^  int id_zone;$/;"	m	struct:__anon44	file:
idn	Include/global.h	/^#define idn(/;"	d
im	Include/complex.h	/^   double re,im;$/;"	m	struct:__anon13
im	Include/complex.h	/^   float re,im;$/;"	m	struct:__anon14
im	Make/Utils/autosun/complex.h	/^	FLOATING re, im;$/;"	m	class:complex
im_ev	TestProgram/TripletMesons/check_triplets_1.c	/^double im_ev(double k[4]) {$/;"	f
imag	Make/Utils/autosun/complex.h	/^	FLOATING imag() { return im; }$/;"	f	class:complex
in_glattice_q	LibHR/Geometry/test_geometry_mpi.c	/^static int in_glattice_q(int c[4]) {$/;"	f	file:
ind1	Include/meson_observables.h	/^  gamma_ind ind1;$/;"	m	struct:meson_observable_s
ind2	Include/meson_observables.h	/^  gamma_ind ind2;$/;"	m	struct:meson_observable_s
index	LibHR/Geometry/test_geometry_mpi.c	/^  int index;$/;"	m	struct:_block_info	file:
index	LibHR/Geometry/test_geometry_mpi.c	/^  int index;$/;"	m	struct:_site_info	file:
index	Make/Utils/autosun/list.h	/^		INDEX index;$/;"	m	struct:orderedlist::ELEMENT
index2	LibHR/Geometry/blocked.c	/^static int index2(int x0,int x1,int x2,int x3)$/;"	f	file:
index_border	LibHR/Geometry/geometry_mpi_eo.c	/^static int index_border=-1;$/;"	v	file:
index_end	LibHR/Geometry/geometry_mpi_eo.c	/^  int index_end;$/;"	m	struct:__anon44	file:
index_eo_lexi	LibHR/Geometry/eo_lexi.c	/^static int index_eo_lexi(int x0,int x1,int x2,int x3)$/;"	f	file:
index_eolexi	Converter/archive_eolexi.c	/^static int index_eolexi(int x0,int x1,int x2,int x3)$/;"	f	file:
index_eolexi	Converter/archive_more_mpieo.c	/^static int index_eolexi(int x0,int x1,int x2,int x3)$/;"	f	file:
index_lexi	LibHR/Geometry/lexi.c	/^static int index_lexi(int x0,int x1,int x2,int x3)$/;"	f	file:
index_noT	LibHR/Geometry/blocked.c	/^static int index_noT(int x0,int x1,int x2,int x3)$/;"	f	file:
index_position	LibHR/Geometry/geometry_mpi_eo.c	/^static int index_position=0;$/;"	v	file:
index_start	LibHR/Geometry/geometry_mpi_eo.c	/^  int index_start;$/;"	m	struct:__anon44	file:
index_to_coord	Include/field_ordering.h	/^#define index_to_coord(/;"	d
index_to_three	LibHR/Utils/HYP_smearing.c	/^static int index_to_three[24][3];$/;"	v	file:
index_to_two	LibHR/Utils/HYP_smearing.c	/^static int index_to_two[12][2];$/;"	v	file:
index_zone	LibHR/Geometry/geometry_mpi_eo.c	/^static int index_zone=0;$/;"	v	file:
infinitesimal_evolution	Make/Utils/autosun/sun.h	/^string infinitesimal_evolution(const char* vname, const char* hname, const char* uname, const char* dtname)$/;"	f
init	Analysis/Mesons/ranlxs.cpp	/^static int pr,ir,jr,is,is_old,init=0;$/;"	v	file:
init	GaugeFix/gaugefix.c	/^static int init = 0;$/;"	v	file:
init	Include/update.h	/^	int init;$/;"	m	struct:__anon37
init	LibHR/Geometry/blocked.c	/^static int init=0;$/;"	v	file:
init	LibHR/Observables/calc_prop.c	/^static int init=0;$/;"	v	file:
init	LibHR/Observables/calc_prop_ff.c	/^static int init=0;$/;"	v	file:
init	LibHR/Observables/measure_ff.c	/^static int init = 0;$/;"	v	file:
init	LibHR/Observables/measure_renormalization.c	/^static int init = 0;$/;"	v	file:
init	LibHR/Observables/z2semwall.c	/^static int init=0;$/;"	v	file:
init	LibHR/Observables/z2semwall_new.c	/^static int init=0;$/;"	v	file:
init	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
init	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
init	LibHR/Update/Dphi_flt.c	/^static int init=1;$/;"	v	file:
init	LibHR/Update/update_mt.c	/^static int init=0;$/;"	v	file:
init	LibHR/Utils/boundary_conditions.c	/^static int init=0;$/;"	v	file:
init	Make/Utils/autosun/adjoint.h	/^void representation::init()$/;"	f	class:representation
init	Make/Utils/autosun/antisymmetric.h	/^void representation::init()$/;"	f	class:representation
init	Make/Utils/autosun/fundamental.h	/^void representation::init()$/;"	f	class:representation
init	Make/Utils/autosun/sun.h	/^void group::init(int n)$/;"	f	class:group
init	Make/Utils/autosun/symmetric.h	/^void representation::init()$/;"	f	class:representation
init	ModeNumber/modenumber.c	/^static int init = 0;$/;"	v	file:
init_BCs	LibHR/Utils/boundary_conditions.c	/^void init_BCs(BCs_pars_t *pars) {$/;"	f
init_Dirac	LibHR/Update/Dphi.c	/^void init_Dirac() {$/;"	f
init_Dirac	LibHR/Update/Dphi_flt.c	/^static void init_Dirac() {$/;"	f	file:
init_HYP_indices	LibHR/Utils/HYP_smearing.c	/^static void init_HYP_indices() {$/;"	f	file:
init_block_size	LibHR/Geometry/blocked.c	/^static void init_block_size() $/;"	f	file:
init_border	LibHR/Geometry/geometry_mpi_eo.c	/^static int init_border(int id_mask, int eotype,int level,int id_zone,  int* bl_start,int *incr,int* bl_width,int* match_length)$/;"	f	file:
init_corrs	LibHR/Observables/measure_ff.c	/^static void init_corrs(int nm, int n_mom){$/;"	f	file:
init_corrs	LibHR/Observables/measure_mesons.c	/^static void init_corrs(int nm, int n_mom, meson_observable* mo){$/;"	f	file:
init_corrs	LibHR/Observables/measure_mesons_ff.c	/^static void init_corrs(int nm, int n_mom, meson_observable* mo){$/;"	f	file:
init_cvc_correlators	LibHR/Observables/measure_mesons.c	/^void init_cvc_correlators(){$/;"	f
init_dirac	LibHR/Update/Dphi.c	/^int init_dirac=1;$/;"	v
init_discon_correlators	LibHR/Observables/measure_mesons.c	/^void init_discon_correlators(){$/;"	f
init_eig	LibHR/Observables/calc_prop.c	/^static int init_eig=0;$/;"	v	file:
init_eig	LibHR/Observables/calc_prop_ff.c	/^static int init_eig=0;$/;"	v	file:
init_eva	LibHR/Observables/calc_prop.c	/^static void init_eva(int nevt){$/;"	f	file:
init_flag	LibHR/Observables/trunc_hairpin.c	/^static int init_flag = 0;$/;"	v	file:
init_force_hmc	LibHR/Update/force_hmc.c	/^void init_force_hmc()$/;"	f
init_force_hmc_tm	LibHR/Update/force_hmc_tm.c	/^static void init_force_hmc_tm()$/;"	f	file:
init_g	GaugeFix/gaugefix.c	/^static void init_g(){$/;"	f	file:
init_gamma	TestProgram/DiracOperator/check_diracoperator_4.c	/^static int init_gamma = 0;$/;"	v	file:
init_geometry_SAP	LibHR/Geometry/geometry_SAP.c	/^void init_geometry_SAP(){$/;"	f
init_gf_SF_BCs	LibHR/Utils/boundary_conditions.c	/^static void init_gf_SF_BCs(suNg* dn, suNg* up) {$/;"	f	file:
init_ghmc	LibHR/Update/update_mt.c	/^void init_ghmc(ghmc_par *par){$/;"	f
init_hb_boundary	LibHR/Update/update_hb.c	/^static void init_hb_boundary() {$/;"	f	file:
init_hmc_flow	HMC/hmc_utils.h	/^#define init_hmc_flow(/;"	d
init_input_HYP	StaticPotential/mk_wilsonloops.c	/^#define init_input_HYP(/;"	d	file:
init_input_SF	WilsonFlow/WF_measure.c	/^#define init_input_SF(/;"	d	file:
init_input_SF	WilsonFlow/WF_measure_adaptative.c	/^#define init_input_SF(/;"	d	file:
init_input_WF	WilsonFlow/WF_measure.c	/^#define init_input_WF(/;"	d	file:
init_input_WF	WilsonFlow/WF_measure_adaptative.c	/^#define init_input_WF(/;"	d	file:
init_input_WL	StaticPotential/mk_wilsonloops.c	/^#define init_input_WL(/;"	d	file:
init_input_ata_qprop	Spectrum/trunc_mesons.c	/^#define init_input_ata_qprop(/;"	d	file:
init_input_bcpar	Spectrum/mk_sfcoupling.c	/^#define init_input_bcpar(/;"	d	file:
init_input_eigval	HMC/hmc.c	/^#define init_input_eigval(/;"	d	file:
init_input_eigval	ModeNumber/mk_eigvals.c	/^#define init_input_eigval(/;"	d	file:
init_input_eigval	TestProgram/Deflate/check_deflate.c	/^#define init_input_eigval(/;"	d	file:
init_input_ff	Spectrum/measure_spectrum.c	/^#define init_input_ff(/;"	d	file:
init_input_glb	Include/input_par.h	/^#define init_input_glb(/;"	d
init_input_hmc	HMC/hmc_utils.h	/^#define init_input_hmc(/;"	d
init_input_logger	Include/input_par.h	/^#define init_input_logger(/;"	d
init_input_loops	Disconnected/compute_loops.c	/^#define init_input_loops(/;"	d	file:
init_input_mesons	HMC/hmc.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	Spectrum/measure_formfactor.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	Spectrum/measure_spectrum.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	Spectrum/mk_mesons.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	Spectrum/mk_mesons_with_z2semwall.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	Spectrum/mk_mesons_with_z2semwall_new.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	TestProgram/Deflate/check_deflate.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	TestProgram/Propagator/check_propagator.c	/^#define init_input_mesons(/;"	d	file:
init_input_mesons	TestProgram/TripletMesons/check_triplets_1.c	/^#define init_input_mesons(/;"	d	file:
init_input_nu	ModeNumber/mk_modenumber.c	/^#define init_input_nu(/;"	d	file:
init_input_pg	PureGauge/suN_utils.h	/^#define init_input_pg(/;"	d
init_input_polyakov	HMC/hmc.c	/^#define init_input_polyakov(/;"	d	file:
init_input_polyakov	PureGauge/suN.c	/^#define init_input_polyakov(/;"	d	file:
init_input_renormalization	RenormalizationFactors/measure_Z_mom.c	/^#define init_input_renormalization(/;"	d	file:
init_input_reweight	Reweight/reweight.h	/^#define init_input_reweight(/;"	d
init_input_rlx	Include/input_par.h	/^#define init_input_rlx(/;"	d
init_input_scatt	Scattering/IOroutines.c	/^#define init_input_scatt(/;"	d	file:
init_input_scatt	Scattering/meson_scattering.c	/^#define init_input_scatt(/;"	d	file:
init_input_sfc	Spectrum/mk_sfcoupling.c	/^#define init_input_sfc(/;"	d	file:
init_mc	HMC/hmc_utils.c	/^int init_mc(hmc_flow *rf, char *ifile) {$/;"	f
init_mc	PureGauge/suN_utils.c	/^int init_mc(pg_flow *gf, char *ifile) {$/;"	f
init_meson_correlators	LibHR/Observables/measure_mesons.c	/^void init_meson_correlators(int meas_offdiag){$/;"	f
init_mo	Scattering/main_run.c	/^void init_mo(meson_observable* mo, char* name, int size)$/;"	f
init_mo	Scattering/scatter_test.c	/^void init_mo(meson_observable* mo, char* name, int size)$/;"	f
init_modenumber	ModeNumber/modenumber.c	/^void init_modenumber(double m, double inv, int nh, char *approxfile) {$/;"	f
init_odd	LibHR/Observables/calc_prop.c	/^static int init_odd=0;$/;"	v	file:
init_odd	LibHR/Observables/calc_prop_ff.c	/^static int init_odd=0;$/;"	v	file:
init_pg_flow	PureGauge/suN_utils.h	/^#define init_pg_flow(/;"	d
init_plaq_Dirichlet_BCs	LibHR/Utils/boundary_conditions.c	/^static void init_plaq_Dirichlet_BCs(double ct) {$/;"	f	file:
init_plaq_open_BCs	LibHR/Utils/boundary_conditions.c	/^static void init_plaq_open_BCs(double ct, double cs) {$/;"	f	file:
init_plaq_twisted_BCs	LibHR/Utils/boundary_conditions.c	/^static void init_plaq_twisted_BCs() {$/;"	f	file:
init_propagator_eo	LibHR/Observables/calc_prop.c	/^void init_propagator_eo(int nm, double *m, double acc){$/;"	f
init_propagator_ff_eo	LibHR/Observables/calc_prop_ff.c	/^void init_propagator_ff_eo(int nm, double *m, double acc){$/;"	f
init_rotated_corr_mem	LibHR/Observables/rotated_corrs_gp.c	/^chisf_mem * init_rotated_corr_mem(){$/;"	f
init_subsp	LibHR/Inverters/eva.c	/^static void init_subsp(int nev,int nevt,int init,spinor_field *ev)$/;"	f	file:
init_tr_corrs	LibHR/Observables/measure_renormalization.c	/^static void init_tr_corrs(int nm){$/;"	f	file:
init_traj	Include/update.h	/^  void (*init_traj)(const struct _monomial *m);$/;"	m	struct:_monomial
init_triplet_discon_correlators	LibHR/Observables/measure_mesons_ff.c	/^void init_triplet_discon_correlators(){$/;"	f
initialGuess	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::initialGuess() {$/;"	f	class:AlgRemez
initialguess	ModeNumber/approx_for_modenumber.c	/^static void initialguess(double *y, int n, double epsilon) {$/;"	f	file:
initialize_blocks	LibHR/Geometry/test_geometry_mpi.c	/^static void initialize_blocks() {$/;"	f	file:
initialize_sites	LibHR/Geometry/test_geometry_mpi.c	/^static void initialize_sites() {$/;"	f	file:
initr	TestProgram/SpinorField/check_spinorfield_1.c	/^static int initr=0;$/;"	v	file:
inline_mk_mesons	Spectrum/mk_mesons.c	/^void inline_mk_mesons(double *m, int nm, double prec) {$/;"	f
inner	LibHR/Geometry/geometry_mpi_eo.c	/^static int inner[2]={-1,-1};$/;"	v	file:
inner_master_pieces	Include/geometry.h	/^  int inner_master_pieces; \/* number of inner pieces (1 o 2 for even odd or no_eo)) *\/$/;"	m	struct:_geometry_descriptor
input_HYP	StaticPotential/mk_wilsonloops.c	/^} input_HYP;$/;"	t	typeref:struct:_input_HYP	file:
input_SF	WilsonFlow/WF_measure.c	/^} input_SF;$/;"	t	typeref:struct:_input_SF	file:
input_SF	WilsonFlow/WF_measure_adaptative.c	/^} input_SF;$/;"	t	typeref:struct:_input_SF	file:
input_WF	WilsonFlow/WF_measure.c	/^} input_WF;$/;"	t	typeref:struct:_input_WF	file:
input_WF	WilsonFlow/WF_measure_adaptative.c	/^} input_WF;$/;"	t	typeref:struct:_input_WF	file:
input_WL	StaticPotential/mk_wilsonloops.c	/^} input_WL;$/;"	t	typeref:struct:_input_wilson	file:
input_ata_qprop	Spectrum/trunc_mesons.c	/^} input_ata_qprop;$/;"	t	typeref:struct:_input_ata_qprop	file:
input_bcpar	Spectrum/mk_sfcoupling.c	/^} input_bcpar;$/;"	t	typeref:struct:_input_bcpar	file:
input_eigval	HMC/hmc.c	/^} input_eigval;$/;"	t	typeref:struct:_input_eigval	file:
input_eigval	ModeNumber/mk_eigvals.c	/^} input_eigval;$/;"	t	typeref:struct:_input_eigval	file:
input_eigval	TestProgram/Deflate/check_deflate.c	/^} input_eigval;$/;"	t	typeref:struct:_input_eigval	file:
input_ff	Spectrum/measure_spectrum.c	/^} input_ff;$/;"	t	typeref:struct:_input_ff	file:
input_filename	Converter/ChromaUtils/main.c	/^char input_filename[256];$/;"	v
input_filename	Converter/converter.c	/^filename_type input_filename;$/;"	v
input_filename	GaugeFix/gaugefix_measure.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	GaugeFix/gaugefix_unittest.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	HMC/hmc.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	HMC/hmc_forces.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	ModeNumber/mk_eigvals.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	ModeNumber/mk_modenumber.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	PureGauge/suN.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	RenormalizationFactors/measure_Z_mom.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Reweight/reweight.c	/^static char  input_filename[64] = "input_file";$/;"	v	file:
input_filename	Scattering/IOroutines.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Scattering/meson_scattering.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/measure_formfactor.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/measure_spectrum.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/mk_mesons.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/mk_mesons_with_z2semwall.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/mk_mesons_with_z2semwall_new.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/mk_sfcoupling.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/random_cnfg.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/random_spinor.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	Spectrum/trunc_mesons.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	StaticPotential/mk_polyakov_loops.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	StaticPotential/mk_wilsonloops.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	StaticPotential/tune_HYP_smearing.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	TestProgram/Deflate/check_deflate.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	TestProgram/Propagator/check_propagator.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	WilsonFlow/WF_measure.c	/^char input_filename[256] = "input_file";$/;"	v
input_filename	WilsonFlow/WF_measure_adaptative.c	/^char input_filename[256] = "input_file";$/;"	v
input_filetype	Converter/ChromaUtils/main.c	/^filename_type input_filetype;$/;"	v
input_format	Converter/converter.c	/^format_type* input_format;$/;"	v
input_glb	Include/input_par.h	/^} input_glb;$/;"	t	typeref:struct:_input_glb
input_hmc	HMC/hmc_utils.h	/^} input_hmc;$/;"	t	typeref:struct:_input_hmc
input_logger	Include/input_par.h	/^} input_logger;$/;"	t	typeref:struct:_input_logger
input_loops	Disconnected/compute_loops.c	/^} input_loops;$/;"	t	typeref:struct:_input_loops	file:
input_mesons	HMC/hmc.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	Spectrum/measure_formfactor.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	Spectrum/measure_spectrum.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	Spectrum/mk_mesons.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	Spectrum/mk_mesons_with_z2semwall.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	Spectrum/mk_mesons_with_z2semwall_new.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	TestProgram/Deflate/check_deflate.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	TestProgram/Propagator/check_propagator.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_mesons	TestProgram/TripletMesons/check_triplets_1.c	/^} input_mesons;$/;"	t	typeref:struct:_input_mesons	file:
input_nu	ModeNumber/mk_modenumber.c	/^} input_nu;$/;"	t	typeref:struct:_input_nu	file:
input_pg	PureGauge/suN_utils.h	/^} input_pg;$/;"	t	typeref:struct:_input_pg
input_polyakov	HMC/hmc.c	/^} input_polyakov;$/;"	t	typeref:struct:_input_polyakov	file:
input_polyakov	PureGauge/suN.c	/^} input_polyakov;$/;"	t	typeref:struct:_input_polyakov	file:
input_record_t	Include/input_par.h	/^} input_record_t;$/;"	t	typeref:struct:_input_record_t
input_renormalization	RenormalizationFactors/measure_Z_mom.c	/^} input_renormalization;$/;"	t	typeref:struct:_input_renormalization	file:
input_reweight	Reweight/reweight.h	/^} input_reweight;$/;"	t	typeref:struct:__anon76
input_rlx	Include/input_par.h	/^} input_rlx;$/;"	t	typeref:struct:_input_rlx
input_scatt	Scattering/IOroutines.c	/^} input_scatt;$/;"	t	typeref:struct:_input_scatt	file:
input_scatt	Scattering/meson_scattering.c	/^} input_scatt;$/;"	t	typeref:struct:_input_scatt	file:
input_sfc	Spectrum/mk_sfcoupling.c	/^} input_sfc;$/;"	t	typeref:struct:_input_sfc	file:
inputfilename	Analysis/Mesons/bs_mesons.cpp	/^string inputfilename;$/;"	v
insert	LibHR/Memory/amalloc.c	/^void insert(void *addr, size_t size) {$/;"	f
integrator	Include/update.h	/^  integrator_par *integrator;$/;"	m	struct:_ghmc_par
integrator	Include/update.h	/^  void (*integrator)(suNg_av_field*, double, struct _integrator_par*);$/;"	m	struct:_integrator_par
integrator_par	Include/update.h	/^} integrator_par;$/;"	t	typeref:struct:_integrator_par
inv_err2	Include/update.h	/^  double inv_err2, inv_err2_flt;$/;"	m	struct:__anon39
inv_err2	Include/update.h	/^  double inv_err2;$/;"	m	struct:__anon38
inv_err2_flt	Include/update.h	/^  double inv_err2, inv_err2_flt;$/;"	m	struct:__anon39
inv_mask	LibHR/Geometry/geometry_mpi_eo.c	/^static int ** inv_mask;$/;"	v	file:
inv_suNg	LibHR/Utils/inv_suNg.c	/^void inv_suNg(suNg* a){$/;"	f
inverr2	ModeNumber/mk_modenumber.c	/^  double inverr2;$/;"	m	struct:_input_nu	file:
inverter_log_lvl	Include/input_par.h	/^  int inverter_log_lvl;$/;"	m	struct:_input_logger
inverter_precision	Include/observables.h	/^  double inverter_precision;$/;"	m	struct:_ata_qprop_pars
inverter_ptr	Include/inverters.h	/^typedef int (*inverter_ptr)(mshift_par* par, spinor_operator M, spinor_field *in, spinor_field *out);$/;"	t
io2pt	Scattering/main_run.c	/^inline void io2pt(meson_observable* mo, int pmax, int sourceno, char* path, char* name)$/;"	f
io4pt	Scattering/main_run.c	/^inline void io4pt(meson_observable* mo, int pmax, int sourceno, char* path, char* name)$/;"	f
ip	LibHR/IO/read_action.c	/^static integrator_par *ip = 0;$/;"	v	file:
ipow	LibHR/Observables/trunc_hairpin.c	/^static double ipow(double x, int e) {$/;"	f	file:
ipt	Include/global.h	/^#define ipt(/;"	d
ipt_4d	Include/global.h	/^#define ipt_4d(/;"	d
ipt_ext	Include/global.h	/^#define ipt_ext(/;"	d
ir	Analysis/Mesons/ranlxs.cpp	/^static int pr,ir,jr,is,is_old,init=0;$/;"	v	file:
ir	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
ir	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
is	Analysis/Mesons/ranlxs.cpp	/^static int pr,ir,jr,is,is_old,init=0;$/;"	v	file:
is	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
is	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
is_old	Analysis/Mesons/ranlxs.cpp	/^static int pr,ir,jr,is,is_old,init=0;$/;"	v	file:
is_old	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
is_old	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
isderived	Analysis/Mesons/bs_ctrl.h	/^  bool isderived() {return true;};$/;"	f	class:derived_ctrl
isderived	Analysis/Mesons/bs_ctrl.h	/^  virtual bool isderived() {return false;}$/;"	f	class:eval_ctrl
isprimary	Analysis/Mesons/bs_ctrl.h	/^  bool isprimary() {return true;};$/;"	f	class:primary_ctrl
isprimary	Analysis/Mesons/bs_ctrl.h	/^  virtual bool isprimary() {return false;}$/;"	f	class:eval_ctrl
isratio	Analysis/Mesons/bs_ctrl.h	/^  bool isratio() {return true;};$/;"	f	class:ratio_ctrl
isratio	Analysis/Mesons/bs_ctrl.h	/^  virtual bool isratio() {return false;}$/;"	f	class:eval_ctrl
isreal	Make/Utils/autosun/matrix.h	/^	bool isreal() const$/;"	f	class:pmatrix
isreal	Make/Utils/autosun/matrix.h	/^	bool isreal() const$/;"	f	class:pvector
isreal	Make/Utils/autosun/polynomial.h	/^	bool isreal() const$/;"	f	class:polynomial
iter	LibHR/Update/remez/alg_remez.h	/^  int nd1, iter;$/;"	m	class:AlgRemez
iup	Include/global.h	/^#define iup(/;"	d
iw	TestProgram/Inverters/check_inverters_4.c	/^static int iw;$/;"	v	file:
ixmmu	LibHR/Update/rect_staples.c	/^static int ixmmu,ixmmupnu,ixmmumnu;$/;"	v	file:
ixmmumnu	LibHR/Update/rect_staples.c	/^static int ixmmu,ixmmupnu,ixmmumnu;$/;"	v	file:
ixmmupnu	LibHR/Update/rect_staples.c	/^static int ixmmu,ixmmupnu,ixmmumnu;$/;"	v	file:
ixmnu	LibHR/Update/rect_staples.c	/^static int ixmnu,ixmnumnu, ixmnumnupmu,ixpmumnu,ixpmupmumnu,ixpmumnupmu;$/;"	v	file:
ixmnumnu	LibHR/Update/rect_staples.c	/^static int ixmnu,ixmnumnu, ixmnumnupmu,ixpmumnu,ixpmupmumnu,ixpmumnupmu;$/;"	v	file:
ixmnumnupmu	LibHR/Update/rect_staples.c	/^static int ixmnu,ixmnumnu, ixmnumnupmu,ixpmumnu,ixpmupmumnu,ixpmumnupmu;$/;"	v	file:
ixpmu	LibHR/Update/rect_staples.c	/^static int ixpmu,ixpnu,ixpnupnu,ixpnupnupmu,ixpmupnu,ixpmupmu;$/;"	v	file:
ixpmumnu	LibHR/Update/rect_staples.c	/^static int ixmnu,ixmnumnu, ixmnumnupmu,ixpmumnu,ixpmupmumnu,ixpmumnupmu;$/;"	v	file:
ixpmumnupmu	LibHR/Update/rect_staples.c	/^static int ixmnu,ixmnumnu, ixmnumnupmu,ixpmumnu,ixpmupmumnu,ixpmumnupmu;$/;"	v	file:
ixpmupmu	LibHR/Update/rect_staples.c	/^static int ixpmu,ixpnu,ixpnupnu,ixpnupnupmu,ixpmupnu,ixpmupmu;$/;"	v	file:
ixpmupmumnu	LibHR/Update/rect_staples.c	/^static int ixmnu,ixmnumnu, ixmnumnupmu,ixpmumnu,ixpmupmumnu,ixpmumnupmu;$/;"	v	file:
ixpmupnu	LibHR/Update/rect_staples.c	/^static int ixpmu,ixpnu,ixpnupnu,ixpnupnupmu,ixpmupnu,ixpmupmu;$/;"	v	file:
ixpnu	LibHR/Update/rect_staples.c	/^static int ixpmu,ixpnu,ixpnupnu,ixpnupnupmu,ixpmupnu,ixpmupmu;$/;"	v	file:
ixpnupnu	LibHR/Update/rect_staples.c	/^static int ixpmu,ixpnu,ixpnupnu,ixpnupnupmu,ixpmupnu,ixpmupmu;$/;"	v	file:
ixpnupnupmu	LibHR/Update/rect_staples.c	/^static int ixpmu,ixpnu,ixpnupnu,ixpnupnupmu,ixpmupnu,ixpmupmu;$/;"	v	file:
jacobi1	LibHR/Inverters/jacobi.c	/^void jacobi1(int n,double a[],double d[],double v[])$/;"	f
jacobi2	LibHR/Inverters/jacobi.c	/^void jacobi2(int n,complex a[],double d[],complex v[])$/;"	f
jr	Analysis/Mesons/ranlxs.cpp	/^static int pr,ir,jr,is,is_old,init=0;$/;"	v	file:
jr	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
jr	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
kappa	Converter/converter.c	/^  double kappa;   int kappa_f;$/;"	m	struct:_filename_type	file:
kappa_f	Converter/converter.c	/^  double kappa;   int kappa_f;$/;"	m	struct:_filename_type	file:
key	LibHR/IO/read_action.c	/^   char key[MAX_VALUES][MAX_LENGTH];$/;"	m	struct:__anon47	file:
key	Make/Utils/autosun/sparse.h	/^	int key() const { return row*size+col; }$/;"	f	struct:mindex
kmax	HMC/hmc.c	/^  int kmax; \/* max degree of polynomial *\/$/;"	m	struct:_input_eigval	file:
kmax	Include/utils.h	/^  int kmax; \/* max degree of polynomial *\/$/;"	m	struct:_eva_prec
kmax	ModeNumber/mk_eigvals.c	/^  int kmax; \/* max degree of polynomial *\/$/;"	m	struct:_input_eigval	file:
kmax	TestProgram/Deflate/check_deflate.c	/^  int kmax; \/* max degree of polynomial *\/$/;"	m	struct:_input_eigval	file:
l1	LibHR/Update/remez/main.C	/^	double l1,l2;$/;"	m	struct:_guess_inf	file:
l11	Include/observables.h	/^  complex *l11, *l12, *l13;$/;"	m	struct:__anon18
l11_ij	Include/observables.h	/^  complex ***l11_ij, ***l12_ij, ***l13_ij;$/;"	m	struct:__anon18
l12	Include/observables.h	/^  complex *l11, *l12, *l13;$/;"	m	struct:__anon18
l12_ij	Include/observables.h	/^  complex ***l11_ij, ***l12_ij, ***l13_ij;$/;"	m	struct:__anon18
l13	Include/observables.h	/^  complex *l11, *l12, *l13;$/;"	m	struct:__anon18
l13_ij	Include/observables.h	/^  complex ***l11_ij, ***l12_ij, ***l13_ij;$/;"	m	struct:__anon18
l2	LibHR/Update/remez/main.C	/^	double l1,l2;$/;"	m	struct:_guess_inf	file:
l21	Include/observables.h	/^  complex *l21, *l22, *l23;$/;"	m	struct:__anon18
l21_ij	Include/observables.h	/^  complex ***l21_ij, ***l22_ij, ***l23_ij;$/;"	m	struct:__anon18
l22	Include/observables.h	/^  complex *l21, *l22, *l23;$/;"	m	struct:__anon18
l22_ij	Include/observables.h	/^  complex ***l21_ij, ***l22_ij, ***l23_ij;$/;"	m	struct:__anon18
l23	Include/observables.h	/^  complex *l21, *l22, *l23;$/;"	m	struct:__anon18
l23_ij	Include/observables.h	/^  complex ***l21_ij, ***l22_ij, ***l23_ij;$/;"	m	struct:__anon18
l31	Include/observables.h	/^  complex *l31, *l32, *l33;$/;"	m	struct:__anon18
l31_ij	Include/observables.h	/^  complex ***l31_ij, ***l32_ij, ***l33_ij;$/;"	m	struct:__anon18
l32	Include/observables.h	/^  complex *l31, *l32, *l33;$/;"	m	struct:__anon18
l32_ij	Include/observables.h	/^  complex ***l31_ij, ***l32_ij, ***l33_ij;$/;"	m	struct:__anon18
l33	Include/observables.h	/^  complex *l31, *l32, *l33;$/;"	m	struct:__anon18
l33_ij	Include/observables.h	/^  complex ***l31_ij, ***l32_ij, ***l33_ij;$/;"	m	struct:__anon18
l41	Include/observables.h	/^  complex *l41, *l42, *l43;$/;"	m	struct:__anon18
l42	Include/observables.h	/^  complex *l41, *l42, *l43;$/;"	m	struct:__anon18
l43	Include/observables.h	/^  complex *l41, *l42, *l43;$/;"	m	struct:__anon18
la	LibHR/Update/update_mt.c	/^static scalar_field *la=NULL; \/* local action field for Metropolis test *\/$/;"	v	file:
label	Converter/converter.c	/^  char label[256];int label_f;$/;"	m	struct:_filename_type	file:
label_f	Converter/converter.c	/^  char label[256];int label_f;$/;"	m	struct:_filename_type	file:
last_conf	HMC/hmc_utils.h	/^  char last_conf[64]; \/* last conf: can be a number or of the format "+n" *\/$/;"	m	struct:_hmc_flow
last_conf	PureGauge/suN_utils.h	/^  char last_conf[64]; \/* last conf: can be a number or of the format "+n" *\/$/;"	m	struct:_pg_flow
last_error	LibHR/IO/read_action.c	/^static int last_error = 0;$/;"	v	file:
lattice_size	Converter/ChromaUtils/main.c	/^int lattice_size[NDIM] = { 16, 16, 16, 32 };$/;"	v
lbnd	TestProgram/Deflate/check_deflate.c	/^  double lbnd; \/* max wanted eval *\/$/;"	m	struct:_input_eigval	file:
leapfrog	LibHR/Update/leapfrog.c	/^void leapfrog(suNg_av_field *momenta, int_par *traj_par){$/;"	f
leapfrog_multistep	LibHR/Update/integrators.c	/^void leapfrog_multistep(suNg_av_field *momenta, double tlen, integrator_par *int_par)$/;"	f
left_cut	Analysis/Mesons/bs_ctrl.cpp	/^std::map<std::string, int> eval_ctrl::left_cut;$/;"	m	class:eval_ctrl	file:
left_cut	Analysis/Mesons/bs_ctrl.h	/^  static std::map<std::string, int> left_cut;$/;"	m	class:eval_ctrl
length	Analysis/Mesons/bs_type.h	/^  int length;$/;"	m	class:Corr_t
length	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int length;$/;"	m	struct:_block_info	file:
length	LibHR/Observables/wilsonloops.c	/^  int length;$/;"	m	struct:__anon54	file:
length	Make/Utils/autosun/list.h	/^	KEYTYPE length;$/;"	m	class:orderedlist
length	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^  int length;$/;"	m	struct:__anon108	file:
length	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^  int length;$/;"	m	struct:__anon109	file:
length	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^  int length;$/;"	m	struct:__anon110	file:
length	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^  int length;$/;"	m	struct:__anon111	file:
level	Analysis/Mesons/bs_ctrl.h	/^  bool level[MAX_NLEVELS];$/;"	m	class:eval_ctrl
level	Include/update.h	/^  int level;$/;"	m	struct:_integrator_par
level	LibHR/Geometry/geometry_mpi_eo.c	/^  int level;$/;"	m	struct:__anon44	file:
level	LibHR/IO/logger.c	/^	int level;$/;"	m	struct:_lrecord	file:
level	TestProgram/Inverters/check_inverters_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Inverters/check_inverters_2.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Inverters/check_inverters_3.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Inverters/check_inverters_5.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Inverters/check_inverters_6.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Inverters/check_inverters_7.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Inverters/check_inverters_8.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Inverters/check_inverters_SAP.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
level	TestProgram/Update/check_update_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
levels	LibHR/IO/logger.c	/^static lrecord *levels=0; \/* list of verbosity levels of IDs *\/$/;"	v	file:
lfindname	LibHR/IO/logger.c	/^static lrecord *lfindname(lrecord *curr, char *name) {$/;"	f	file:
list	ModeNumber/mk_modenumber.c	/^  char list[1024];$/;"	m	struct:_input_nu	file:
list_filename	GaugeFix/gaugefix_measure.c	/^char list_filename[256]="";$/;"	v
list_filename	GaugeFix/gaugefix_unittest.c	/^char list_filename[256]="";$/;"	v
list_filename	HMC/hmc_forces.c	/^char list_filename[256]="";$/;"	v
list_filename	ModeNumber/mk_eigvals.c	/^char list_filename[256]="";$/;"	v
list_filename	ModeNumber/mk_modenumber.c	/^char list_filename[256]="";$/;"	v
list_filename	RenormalizationFactors/measure_Z_mom.c	/^char list_filename[256]="";$/;"	v
list_filename	Scattering/IOroutines.c	/^char list_filename[256]="";$/;"	v
list_filename	Scattering/meson_scattering.c	/^char list_filename[256]="";$/;"	v
list_filename	Spectrum/measure_formfactor.c	/^char list_filename[256]="";$/;"	v
list_filename	Spectrum/measure_spectrum.c	/^char list_filename[256]="";$/;"	v
list_filename	Spectrum/mk_mesons.c	/^char list_filename[256]="";$/;"	v
list_filename	Spectrum/mk_mesons_with_z2semwall.c	/^char list_filename[256]="";$/;"	v
list_filename	Spectrum/mk_mesons_with_z2semwall_new.c	/^char list_filename[256]="";$/;"	v
list_filename	Spectrum/mk_sfcoupling.c	/^char list_filename[256]="";$/;"	v
list_filename	Spectrum/trunc_mesons.c	/^char list_filename[256]="";$/;"	v
list_filename	StaticPotential/mk_polyakov_loops.c	/^char list_filename[256]="";$/;"	v
list_filename	StaticPotential/mk_wilsonloops.c	/^char list_filename[256]="";$/;"	v
list_filename	StaticPotential/tune_HYP_smearing.c	/^char list_filename[256]="";$/;"	v
list_filename	TestProgram/Deflate/check_deflate.c	/^char list_filename[256]="";$/;"	v
list_filename	TestProgram/Propagator/check_propagator.c	/^char list_filename[256]="";$/;"	v
list_filename	WilsonFlow/WF_measure.c	/^char list_filename[256]="";$/;"	v
list_filename	WilsonFlow/WF_measure_adaptative.c	/^char list_filename[256]="";$/;"	v
load_cnfg	Reweight/reweight.c	/^void load_cnfg(char *filename)$/;"	f
locH2	LibHR/Observables/trunc_hairpin.c	/^static void locH2(spinor_field *out, spinor_field *in){$/;"	f	file:
loc_par	LibHR/Utils/eva_deflation.c	/^static eva_prec loc_par={0};$/;"	v	file:
local	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int local;              \/* false ; true *\/$/;"	m	struct:_site_info	file:
local_action_type	Include/update.h	/^} local_action_type;$/;"	t	typeref:enum:__anon42
local_hmc_action	LibHR/Update/local_action.c	/^void local_hmc_action(local_action_type type,$/;"	f
local_index	LibHR/Geometry/geometry_mpi_eo.c	/^#define local_index(/;"	d	file:
local_master_pieces	Include/geometry.h	/^  int local_master_pieces;  \/\/ $/;"	m	struct:_geometry_descriptor
local_plaq	LibHR/Observables/avr_plaquette.c	/^double local_plaq(int ix)$/;"	f
local_rect_1x2	LibHR/Observables/avr_rect.c	/^double local_rect_1x2(int ix)$/;"	f
local_size	LibHR/Geometry/test_geometry_mpi.c	/^static int local_size[4];$/;"	v	file:
log_bf	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat log_bf(const bigfloat& a) {$/;"	f	class:bigfloat
logger_disable	LibHR/IO/logger.c	/^void logger_disable() {$/;"	f
logger_enable	LibHR/IO/logger.c	/^void logger_enable() {$/;"	f
logger_getlevel	LibHR/IO/logger.c	/^int logger_getlevel(char *name){$/;"	f
logger_inactive	LibHR/IO/logger.c	/^static int logger_inactive=0;$/;"	v	file:
logger_map	LibHR/IO/logger.c	/^int logger_map(char *name, char *filename) {$/;"	f
logger_reset	LibHR/IO/logger.c	/^int logger_reset() {$/;"	f
logger_rmlevel	LibHR/IO/logger.c	/^void logger_rmlevel(char *name){$/;"	f
logger_set_input	LibHR/IO/logger.c	/^void logger_set_input(input_logger *logger){$/;"	f
logger_setlevel	LibHR/IO/logger.c	/^void logger_setlevel(char *name, int v){$/;"	f
logger_stdout	LibHR/IO/logger.c	/^int logger_stdout(char *filename) {$/;"	f
logger_unmap	LibHR/IO/logger.c	/^int logger_unmap(char *name){$/;"	f
loglevel	LibHR/Geometry/test_geometry_mpi.c	/^static int loglevel = 0;$/;"	v	file:
loglevel	LibHR/Observables/trunc_hairpin.c	/^static int loglevel = 0;$/;"	v	file:
lprintf	LibHR/IO/logger.c	/^int lprintf(char *name, int level, char *format, ...) {$/;"	f
lrecord	LibHR/IO/logger.c	/^} lrecord;$/;"	t	typeref:struct:_lrecord	file:
lu_solve	LibHR/Update/mre.c	/^void lu_solve(int max)$/;"	f
lubksb	LibHR/Utils/inv_suNg.c	/^void lubksb(complex* a, int* indx, complex* b, int N){$/;"	f
ludcmp	LibHR/Utils/inv_suNg.c	/^void ludcmp(complex* a, int* indx, double* d,int N){$/;"	f
m	GaugeFix/gaugefix_measure.c	/^  double b, m;$/;"	m	struct:__anon8	file:
m	GaugeFix/gaugefix_unittest.c	/^  double b, m;$/;"	m	struct:__anon10	file:
m	HMC/hmc_forces.c	/^  double b, m;$/;"	m	struct:__anon12	file:
m	LibHR/Update/monomials.c	/^  monomial *m;$/;"	m	struct:_mon_list	file:
m	ModeNumber/mk_eigvals.c	/^  double b, m;$/;"	m	struct:__anon71	file:
m	ModeNumber/mk_modenumber.c	/^  double b, m;$/;"	m	struct:__anon73	file:
m	RenormalizationFactors/measure_Z_mom.c	/^  double b, m;$/;"	m	struct:__anon75	file:
m	Scattering/IOroutines.c	/^	double b, m;$/;"	m	struct:__anon78	file:
m	Scattering/meson_scattering.c	/^	double b, m;$/;"	m	struct:__anon80	file:
m	Spectrum/measure_formfactor.c	/^  double b, m;$/;"	m	struct:__anon83	file:
m	Spectrum/measure_spectrum.c	/^  double b, m;$/;"	m	struct:__anon85	file:
m	Spectrum/mk_mesons.c	/^  double b, m;$/;"	m	struct:__anon87	file:
m	Spectrum/mk_mesons_with_z2semwall.c	/^  double b, m;$/;"	m	struct:__anon89	file:
m	Spectrum/mk_mesons_with_z2semwall_new.c	/^  double b, m;$/;"	m	struct:__anon91	file:
m	Spectrum/mk_sfcoupling.c	/^  double b, m;$/;"	m	struct:__anon93	file:
m	Spectrum/trunc_mesons.c	/^  double b, m;$/;"	m	struct:__anon95	file:
m	StaticPotential/mk_polyakov_loops.c	/^  double b, m;$/;"	m	struct:__anon97	file:
m	StaticPotential/mk_wilsonloops.c	/^  double b, m;$/;"	m	struct:__anon99	file:
m	StaticPotential/tune_HYP_smearing.c	/^  double b, m;$/;"	m	struct:__anon101	file:
m	TestProgram/Deflate/check_deflate.c	/^  double b, m;$/;"	m	struct:__anon104	file:
m	TestProgram/Propagator/check_propagator.c	/^  double b, m;$/;"	m	struct:__anon107	file:
m	WilsonFlow/WF_measure.c	/^  double b, m;$/;"	m	struct:__anon113	file:
m	WilsonFlow/WF_measure_adaptative.c	/^  double b, m;$/;"	m	struct:__anon115	file:
main	Analysis/Mesons/bs_mesons.cpp	/^int main(int argc, char* argv[]) {$/;"	f
main	Converter/ChromaUtils/main.c	/^main(int argc, char *argv[])$/;"	f
main	Converter/converter.c	/^int main(int argc,char *argv[]) {$/;"	f
main	GaugeFix/gaugefix_measure.c	/^int main(int argc,char *argv[]) {$/;"	f
main	GaugeFix/gaugefix_unittest.c	/^int main(int argc,char *argv[]) {$/;"	f
main	HMC/hmc.c	/^int main(int argc,char *argv[]) {$/;"	f
main	HMC/hmc_forces.c	/^int main(int argc,char *argv[]) {$/;"	f
main	LibHR/Update/remez/Zolotarev/zolotarev.c	/^int main()$/;"	f
main	LibHR/Update/remez/main.C	/^int main (int argc, char* argv[]) {$/;"	f
main	Make/Utils/autosun/main.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	ModeNumber/approx_for_modenumber.c	/^int main(int argc, char* argv[]) {$/;"	f
main	ModeNumber/mk_eigvals.c	/^int main(int argc,char *argv[]) {$/;"	f
main	ModeNumber/mk_modenumber.c	/^int main(int argc,char *argv[]) {$/;"	f
main	PureGauge/suN.c	/^int main(int argc,char *argv[])$/;"	f
main	RenormalizationFactors/measure_Z_mom.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Reweight/reweight.c	/^int main(int argc, char *argv[])$/;"	f
main	Scattering/main_run.c	/^int main(int argc,char *argv[])$/;"	f
main	Scattering/meson_scattering.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Scattering/scatter_test.c	/^int main(int argc,char *argv[])$/;"	f
main	Spectrum/measure_formfactor.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/measure_spectrum.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/mk_mesons.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/mk_mesons_with_z2semwall.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/mk_mesons_with_z2semwall_new.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/mk_sfcoupling.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/random_cnfg.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/random_spinor.c	/^int main(int argc,char *argv[]) {$/;"	f
main	Spectrum/trunc_mesons.c	/^int main(int argc,char *argv[]) {$/;"	f
main	StaticPotential/mk_polyakov_loops.c	/^int main(int argc,char *argv[]) {$/;"	f
main	StaticPotential/mk_wilsonloops.c	/^int main(int argc,char *argv[]) {$/;"	f
main	StaticPotential/tune_HYP_smearing.c	/^int main(int argc,char *argv[]) {$/;"	f
main	TestProgram/Algebra/check_algebra_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Algebra/check_algebra_2.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Deflate/check_deflate.c	/^int main(int argc,char *argv[]) {$/;"	f
main	TestProgram/DiracOperator/check_diracoperator_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/DiracOperator/check_diracoperator_2.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/DiracOperator/check_diracoperator_3.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/DiracOperator/check_diracoperator_4.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/DiracOperator/check_diracoperator_5.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/DiracOperator/check_diracoperator_6.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/DiracOperator/speed_test_diracoperator.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/DiracOperator/speed_test_diracoperator_flt.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Geometry/check_geometry_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_2.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_3.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_4.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_5.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_6.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_7.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_8.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Inverters/check_inverters_SAP.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Propagator/check_propagator.c	/^int main(int argc,char *argv[]) {$/;"	f
main	TestProgram/PureGauge/check_puregauge_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/PureGauge/check_puregauge_2.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Random/testlx.c	/^int main(void)$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_10.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_2.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_3.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_4.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_5.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_6.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_7.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_8.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/RotatedSF/check_rotatedsf_9.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/SpinorField/check_spinorfield_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/TripletMesons/check_triplets_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/TripletMesons/check_triplets_2.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Update/check_update_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/Utils/check_suNg_op.c	/^int main(){$/;"	f
main	TestProgram/WilsonLoops/check_wilsonloops_1.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/WilsonLoops/check_wilsonloops_2.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/WilsonLoops/check_wilsonloops_3.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^int main(int argc,char *argv[])$/;"	f
main	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^int main(int argc,char *argv[])$/;"	f
main	WilsonFlow/WF_measure.c	/^int main(int argc,char *argv[]) {$/;"	f
main	WilsonFlow/WF_measure_adaptative.c	/^int main(int argc,char *argv[]) {$/;"	f
make	HMC/hmc.c	/^  char make[256];$/;"	m	struct:_input_eigval	file:
make	HMC/hmc.c	/^  char make[256];$/;"	m	struct:_input_mesons	file:
make	HMC/hmc.c	/^  char make[256];$/;"	m	struct:_input_polyakov	file:
make	PureGauge/suN.c	/^  char make[256];$/;"	m	struct:_input_polyakov	file:
make	Spectrum/measure_spectrum.c	/^  char make[256]; $/;"	m	struct:_input_ff	file:
map_id2overlexi	LibHR/Geometry/geometry_mpi_eo.c	/^static int *map_id2overlexi=NULL;$/;"	v	file:
map_overlexi2id	LibHR/Geometry/geometry_mpi_eo.c	/^static int *map_overlexi2id=NULL;$/;"	v	file:
mapchanged	LibHR/IO/logger.c	/^static int mapchanged=1; \/* to keep track of changes to previous maps *\/$/;"	v	file:
mask	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int mask[4];        \/* NOT_ASSIGNED ; INNER ; LBORDER ; RBORDER ; LBUFFER ; RBUFFER ; LOCAL *\/  $/;"	m	struct:_block_info	file:
mass	Converter/ChromaUtils/main.c	/^  double mass;    int mass_f;$/;"	m	struct:_filename_type	file:
mass	Converter/converter.c	/^  double mass;    int mass_f;$/;"	m	struct:_filename_type	file:
mass	HMC/hmc_utils.c	/^static double mass(){$/;"	f	file:
mass	Include/observables.h	/^  double mass[256];$/;"	m	struct:_ata_qprop_pars
mass	Include/update.h	/^  double mass;$/;"	m	struct:__anon38
mass	Include/update.h	/^  double mass;$/;"	m	struct:__anon39
mass	Include/update.h	/^  double mass;$/;"	m	struct:_mon_hasenbusch_par
mass	Include/update.h	/^  double mass;$/;"	m	struct:_mon_hasenbusch_tm_par
mass	Include/update.h	/^  double mass;$/;"	m	struct:_mon_hmc_par
mass	Include/update.h	/^  double mass;$/;"	m	struct:_mon_rhmc_par
mass	Include/update.h	/^  double mass;$/;"	m	struct:_mon_tm_par
mass	LibHR/Observables/calc_prop.c	/^static double *mass;$/;"	v	file:
mass	LibHR/Observables/calc_prop_ff.c	/^static double *mass;$/;"	v	file:
mass	LibHR/Observables/z2semwall.c	/^static double *mass;$/;"	v	file:
mass	LibHR/Observables/z2semwall_new.c	/^static double *mass;$/;"	v	file:
mass	ModeNumber/mk_eigvals.c	/^  double mass; \/* quenched mass *\/$/;"	m	struct:_input_eigval	file:
mass	ModeNumber/mk_modenumber.c	/^  double mass;$/;"	m	struct:_input_nu	file:
mass	ModeNumber/modenumber.c	/^static double mass = 0.;$/;"	v	file:
mass	Reweight/reweight.c	/^static double mass = 0;$/;"	v	file:
mass	TestProgram/Deflate/check_deflate.c	/^  double mass; \/* quenched mass *\/$/;"	m	struct:_input_eigval	file:
mass	TestProgram/TripletMesons/check_triplets_1.c	/^static double mass;$/;"	v	file:
mass_f	Converter/ChromaUtils/main.c	/^  double mass;    int mass_f;$/;"	m	struct:_filename_type	file:
mass_f	Converter/converter.c	/^  double mass;    int mass_f;$/;"	m	struct:_filename_type	file:
mass_new	Reweight/reweight.c	/^static double mass_new = 0;$/;"	v	file:
mass_old	Reweight/reweight.c	/^static double mass_old = 0;$/;"	v	file:
master_end	Include/geometry.h	/^  int *master_start, *master_end; \/\/ Beginning has inner pieces, then local pieces, then the rest.$/;"	m	struct:_geometry_descriptor
master_shift	Include/geometry.h	/^  int master_shift; \/*  this is the odd spinor's shift, i.e. the index of the first odd entry in the full geometry *\/$/;"	m	struct:_geometry_descriptor
master_start	Include/geometry.h	/^  int *master_start, *master_end; \/\/ Beginning has inner pieces, then local pieces, then the rest.$/;"	m	struct:_geometry_descriptor
max	Analysis/Mesons/bs_ctrl.cpp	/^#define max(/;"	d	file:
max	Analysis/Mesons/bs_ctrl.cpp	/^#undef max$/;"	d	file:
max	Include/rational_functions.h	/^  double min, max; \/* eigenvalues *\/$/;"	m	struct:_rational_app
max	Include/update.h	/^	int max;$/;"	m	struct:__anon37
max_H	LibHR/Utils/max_eig.c	/^int max_H(spinor_operator H, geometry_descriptor *type, double *max) {$/;"	f
max_H2_ev	LibHR/Observables/trunc_hairpin.c	/^static int max_H2_ev(double *max) {$/;"	f	file:
max_H2_ev_ws	LibHR/Observables/trunc_hairpin.c	/^static spinor_field* max_H2_ev_ws;$/;"	v	file:
max_distance	WilsonFlow/wilsonflow.c	/^double max_distance(suNg_field* V, suNg_field* Vprime){$/;"	f
max_iter	Include/inverters.h	/^   int max_iter; \/* maximum number of iterations: 0 => infinity *\/$/;"	m	struct:_mshift_par
max_iter	Include/inverters.h	/^  int max_iter; \/* maximum number of iterations: 0 => infinity *\/$/;"	m	struct:_MINRES_par
max_iter	Include/inverters.h	/^  int max_iter; \/* maximum number of iterations: 0 => infinity *\/$/;"	m	struct:__anon15
max_iter_flt	Include/inverters.h	/^  int max_iter_flt; \/* maximum number of iterations: 0 => infinity *\/$/;"	m	struct:__anon15
max_memory_Mb	LibHR/Memory/amalloc.c	/^static double max_memory_Mb = 0.;$/;"	v	file:
maxiter	HMC/hmc.c	/^  int maxiter; \/* max number of subiterations *\/$/;"	m	struct:_input_eigval	file:
maxiter	Include/utils.h	/^  int maxiter; \/* max number of subiterations *\/$/;"	m	struct:_eva_prec
maxiter	ModeNumber/mk_eigvals.c	/^  int maxiter; \/* max number of subiterations *\/$/;"	m	struct:_input_eigval	file:
maxiter	TestProgram/Deflate/check_deflate.c	/^  int maxiter; \/* max number of subiterations *\/$/;"	m	struct:_input_eigval	file:
meas_freq	HMC/hmc_utils.h	/^  int meas_freq; \/* mk measures if number%meas_freq==0 *\/$/;"	m	struct:_hmc_flow
meas_freq	PureGauge/suN_utils.h	/^  int meas_freq; \/* mk measures if number%meas_freq==0 *\/$/;"	m	struct:_pg_flow
meas_mixed	Spectrum/measure_spectrum.c	/^  int meas_mixed;$/;"	m	struct:_input_mesons	file:
measure_baryons	Spectrum/baryon_measurements.c	/^void measure_baryons(double* m,int conf_num, double precision){$/;"	f
measure_bilinear_loops_4spinorfield	Disconnected/loop_tools.c	/^void measure_bilinear_loops_4spinorfield(spinor_field* prop,spinor_field* source,int k,int nm,int tau,int col,int eo)$/;"	f
measure_bilinear_loops_spinorfield	Disconnected/loop_tools.c	/^void measure_bilinear_loops_spinorfield(spinor_field* prop,spinor_field* source,int k,int nm, int n_mom)$/;"	f
measure_conserved_core	LibHR/Observables/measure_mesons.c	/^static void measure_conserved_core(spinor_field* psi0, spinor_field* psi1, spinor_field* eta, meson_observable* mo, int nm, int tau, int n_mom, int offset,int lt){$/;"	f	file:
measure_conserved_currents	LibHR/Observables/measure_mesons.c	/^void measure_conserved_currents(meson_observable* mo,spinor_field* psi0, spinor_field* eta, int nm, int tau){$/;"	f
measure_diquark_semwall_background	Spectrum/meson_measurements.c	/^void measure_diquark_semwall_background(int nm, double* m, int nhits,int conf_num, double precision,double Q, int n){$/;"	f
measure_diquarks	LibHR/Observables/measure_mesons.c	/^void measure_diquarks(meson_observable* mo,spinor_field* psi0, spinor_field* psi1,spinor_field* eta, int nm, int tau){$/;"	f
measure_formfactor_OBJS	Spectrum/Makefile	/^measure_formfactor_OBJS = meson_measurements.o ..\/GaugeFix\/gaugefix.o$/;"	m
measure_formfactor_core	LibHR/Observables/measure_ff.c	/^static void measure_formfactor_core(spinor_field* psi0, spinor_field* psi1, spinor_field* eta, int nm, int tau, int tf, int n_mom, int offset,int lt, int* pt){$/;"	f	file:
measure_formfactor_fixed	Spectrum/meson_measurements.c	/^void measure_formfactor_fixed(int ti, int tf, int dt, int nm, double* m, int n_mom, int conf_num, double precision){$/;"	f
measure_formfactor_pt	Spectrum/meson_measurements.c	/^void measure_formfactor_pt(int ti, int tf, int nm, double* m, int n_mom, int conf_num, double precision){$/;"	f
measure_formfactors	LibHR/Observables/measure_ff.c	/^void measure_formfactors(spinor_field* psi0, spinor_field* psi1, spinor_field* eta, int nm, int ti, int tf, int n_mom, int *pt){$/;"	f
measure_loops	Disconnected/loop_tools.c	/^void measure_loops(int nm, double* m, int nhits,int conf_num, double precision,int source_type,int n_mom)$/;"	f
measure_mesons	LibHR/Observables/measure_mesons.c	/^void measure_mesons(meson_observable* mo,spinor_field* psi0, spinor_field* eta, int nm, int tau){$/;"	f
measure_mesons_core	LibHR/Observables/measure_mesons.c	/^void measure_mesons_core(spinor_field* psi0, spinor_field* psi1, spinor_field* eta, meson_observable* mo, int nm, int tau, int n_mom, int offset,int lt){$/;"	f
measure_mesons_disconnected	LibHR/Observables/measure_mesons_ff.c	/^void measure_mesons_disconnected(meson_observable* mo,spinor_field* psi0, spinor_field* eta ){$/;"	f
measure_mesons_disconnected_core	LibHR/Observables/measure_mesons_ff.c	/^static void measure_mesons_disconnected_core(spinor_field* psi0, spinor_field* psi1, spinor_field* eta, meson_observable* mo, int offset,int lt){$/;"	f	file:
measure_mesons_ext	LibHR/Observables/measure_mesons.c	/^void measure_mesons_ext(meson_observable* mo,spinor_field* psi0, spinor_field* eta, int nm, int tau,int begin){$/;"	f
measure_pion_scattering	Scattering/scattering_tools.c	/^void measure_pion_scattering(double* m, int nhits,int conf_num, double precision,int ts){$/;"	f
measure_point_mesons_momenta	LibHR/Observables/measure_mesons.c	/^void measure_point_mesons_momenta(meson_observable* mo,spinor_field* psi0, spinor_field* eta, int nm, int tau, int n_mom){$/;"	f
measure_point_mesons_momenta_ext	LibHR/Observables/measure_mesons.c	/^void measure_point_mesons_momenta_ext(meson_observable* mo,spinor_field* psi0, spinor_field* eta, int nm, int tau, int n_mom, int begin){$/;"	f
measure_renormalization	LibHR/Observables/measure_renormalization.c	/^void measure_renormalization(spinor_field* psi_in, spinor_field* psi_out, int nm, int pt_in, int px_in, int py_in, int pz_in, int pt_out, int px_out, int py_out, int pz_out){$/;"	f
measure_renormalization_core	LibHR/Observables/measure_renormalization.c	/^static void measure_renormalization_core(spinor_field* psi_in, spinor_field* psi_out, int nm, int pt_in, int px_in, int py_in, int pz_in, int pt_out, int px_out, int py_out, int pz_out){$/;"	f	file:
measure_scattering_AD_core	LibHR/Observables/measure_scattering.c	/^void measure_scattering_AD_core(meson_observable* mo, spinor_field* psi0,spinor_field* psi1,spinor_field* psi2,spinor_field* psi3, int tau, int split, int n_mom, int p_tot_x, int p_tot_y, int p_tot_z){$/;"	f
measure_scattering_BC_core	LibHR/Observables/measure_scattering.c	/^void measure_scattering_BC_core(meson_observable* mo, spinor_field* psi0,spinor_field* psi1, spinor_field* psi2,spinor_field* psi3, int tau, int split, int n_mom, int p_tot_x, int p_tot_y, int p_tot_z){$/;"	f
measure_spectrum_OBJS	Spectrum/Makefile	/^measure_spectrum_OBJS = meson_measurements.o baryon_measurements.o ..\/GaugeFix\/gaugefix.o meson_measurements_ff.o$/;"	m
measure_spectrum_discon_ff_semwall	Spectrum/meson_measurements_ff.c	/^void measure_spectrum_discon_ff_semwall(int nm, double* m, int nhits, int degree_hopping, int nhits_hopping,int conf_num, double precision){$/;"	f
measure_spectrum_discon_gfwall	Spectrum/meson_measurements.c	/^void measure_spectrum_discon_gfwall(int nm, double* m, int conf_num, double precision){$/;"	f
measure_spectrum_discon_semwall	Spectrum/meson_measurements.c	/^void measure_spectrum_discon_semwall(int nm, double* m, int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_discon_volume	Spectrum/meson_measurements.c	/^void measure_spectrum_discon_volume(int nm, double* m, int conf_num, double precision, int dil){$/;"	f
measure_spectrum_ff_pt	Spectrum/meson_measurements_ff.c	/^void measure_spectrum_ff_pt(int tau, int nm, double* m, int n_mom,int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_ff_semwall	Spectrum/meson_measurements_ff.c	/^void measure_spectrum_ff_semwall(int nm, double* m, int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_gfwall	Spectrum/meson_measurements.c	/^void measure_spectrum_gfwall(int nm, double* m, int conf_num, double precision){$/;"	f
measure_spectrum_gfwall_fixedbc	Spectrum/meson_measurements.c	/^void measure_spectrum_gfwall_fixedbc(int dt, int nm, double* m, int conf_num, double precision){$/;"	f
measure_spectrum_pt	Spectrum/meson_measurements.c	/^void measure_spectrum_pt(int tau, int nm, double* m, int n_mom,int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_pt_ext	Spectrum/meson_measurements.c	/^void measure_spectrum_pt_ext(int tau, int nm, double* m, int n_mom,int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_pt_fixedbc	Spectrum/meson_measurements.c	/^void measure_spectrum_pt_fixedbc(int tau, int dt, int nm, double* m, int n_mom,int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_semwall	Spectrum/meson_measurements.c	/^void measure_spectrum_semwall(int nm, double* m, int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_semwall_ext	Spectrum/meson_measurements.c	/^void measure_spectrum_semwall_ext(int nm, double* m, int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_semwall_ff_ext	Spectrum/meson_measurements_ff.c	/^void measure_spectrum_semwall_ff_ext(int nm, double* m, int nhits,int conf_num, double precision){$/;"	f
measure_spectrum_semwall_fixedbc	Spectrum/meson_measurements.c	/^void measure_spectrum_semwall_fixedbc(int dt, int nm, double* m, int nhits,int conf_num, double precision){$/;"	f
mem_map_t	LibHR/Memory/amalloc.c	/^} mem_map_t;$/;"	t	typeref:struct:__anon48	file:
mem_t	Include/global.h	/^} mem_t;$/;"	t	typeref:enum:_mem_t
memory	LibHR/Geometry/geometry_mpi_eo.c	/^static int *memory=NULL;$/;"	v	file:
memory_Mb	LibHR/Memory/amalloc.c	/^static double memory_Mb = 0.;$/;"	v	file:
mes_ip	TestProgram/TripletMesons/check_triplets_1.c	/^input_mesons mes_ip = init_input_mesons(mes_ip);$/;"	v
mes_var	HMC/hmc.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mes_var	RenormalizationFactors/measure_Z_mom.c	/^input_renormalization mes_var = init_input_renormalization(mes_var);$/;"	v
mes_var	Scattering/IOroutines.c	/^input_scatt mes_var = init_input_scatt(mes_var);$/;"	v
mes_var	Scattering/meson_scattering.c	/^input_scatt mes_var = init_input_scatt(mes_var);$/;"	v
mes_var	Spectrum/measure_formfactor.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mes_var	Spectrum/measure_spectrum.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mes_var	Spectrum/mk_mesons.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mes_var	Spectrum/mk_mesons_with_z2semwall.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mes_var	Spectrum/mk_mesons_with_z2semwall_new.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mes_var	TestProgram/Deflate/check_deflate.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mes_var	TestProgram/Propagator/check_propagator.c	/^input_mesons mes_var = init_input_mesons(mes_var);$/;"	v
mesmass	HMC/hmc.c	/^  double mesmass; \/* valence mass *\/$/;"	m	struct:_input_mesons	file:
meson_channel_names	LibHR/Observables/measure_mesons.c	/^char* meson_channel_names[NGAMMA_IND]={"g5","id","g0","g1","g2","g3","g0g1","g0g2","g0g3","g0g5","g5g1","g5g2","g5g3","g0g5g1","g0g5g2","g0g5g3"};$/;"	v
meson_correlators	LibHR/Observables/measure_mesons.c	/^meson_observable *meson_correlators  = NULL;$/;"	v
meson_observable	Include/meson_observables.h	/^typedef struct meson_observable_s meson_observable;$/;"	t	typeref:struct:meson_observable_s
meson_observable_s	Include/meson_observables.h	/^struct meson_observable_s {$/;"	s
mf_Dirichlet_BCs	LibHR/Utils/boundary_conditions.c	/^static void mf_Dirichlet_BCs(suNg_av_field *force) {$/;"	f	file:
mf_open_BCs	LibHR/Utils/boundary_conditions.c	/^static void mf_open_BCs(suNg_av_field *force) {$/;"	f	file:
mgm_subsp	LibHR/Inverters/eva.c	/^static void mgm_subsp(int n, spinor_field *ev)$/;"	f	file:
min	Analysis/Mesons/bs_ctrl.cpp	/^#define min(/;"	d	file:
min	Analysis/Mesons/bs_ctrl.cpp	/^#undef min$/;"	d	file:
min	Include/rational_functions.h	/^  double min, max; \/* eigenvalues *\/$/;"	m	struct:_rational_app
min_eva	LibHR/Inverters/eva.c	/^static double min_eva(int ia,int ib,double d[])$/;"	f	file:
min_tplaq	LibHR/Utils/HYP_smearing.c	/^double min_tplaq(suNg_field* g) {$/;"	f
mindex	Make/Utils/autosun/sparse.h	/^	mindex() { row = 0; col = 0; size = 0;}$/;"	f	struct:mindex
mindex	Make/Utils/autosun/sparse.h	/^	mindex(int r, int c, int s)$/;"	f	struct:mindex
mindex	Make/Utils/autosun/sparse.h	/^struct mindex$/;"	s
minus	Make/Utils/autosun/complex.h	/^	void minus()$/;"	f	class:complex
minus	Make/Utils/autosun/polynomial.h	/^	void minus()$/;"	f	class:polynomial
minus	Make/Utils/autosun/sparse.h	/^	virtual void minus()$/;"	f	class:sparselinear
mk_gconf_name	HMC/hmc_utils.c	/^static void mk_gconf_name(char *name, hmc_flow *rf, int id) {$/;"	f	file:
mk_gconf_name	PureGauge/suN_utils.c	/^static void mk_gconf_name(char *name, pg_flow *gf, int id) {$/;"	f	file:
mk_modenumber_OBJS	ModeNumber/Makefile	/^mk_modenumber_OBJS = modenumber.o$/;"	m
mm	LibHR/Update/remez/alg_remez.h	/^  bigfloat *xx, *mm, *step;$/;"	m	class:AlgRemez
momenta	LibHR/Update/update_mt.c	/^static suNg_av_field *momenta=NULL;$/;"	v	file:
mon_ff_par	Include/update.h	/^} mon_ff_par;$/;"	t	typeref:struct:_mon_ff_par
mon_hasenbusch_par	Include/update.h	/^} mon_hasenbusch_par;$/;"	t	typeref:struct:_mon_hasenbusch_par
mon_hasenbusch_tm_par	Include/update.h	/^} mon_hasenbusch_tm_par;$/;"	t	typeref:struct:_mon_hasenbusch_tm_par
mon_hmc_par	Include/update.h	/^} mon_hmc_par;$/;"	t	typeref:struct:_mon_hmc_par
mon_list	Include/update.h	/^  const monomial **mon_list;$/;"	m	struct:_integrator_par
mon_list	LibHR/Update/monomials.c	/^} mon_list;$/;"	t	typeref:struct:_mon_list	file:
mon_n	LibHR/Update/monomials.c	/^const monomial *mon_n(int i) {$/;"	f
mon_pg_par	Include/update.h	/^} mon_pg_par;$/;"	t	typeref:struct:_mon_pg_par
mon_rhmc_par	Include/update.h	/^} mon_rhmc_par;$/;"	t	typeref:struct:_mon_rhmc_par
mon_tm_par	Include/update.h	/^} mon_tm_par;$/;"	t	typeref:struct:_mon_tm_par
mon_type	Include/update.h	/^} mon_type;$/;"	t	typeref:enum:__anon41
monomial	Include/update.h	/^} monomial;$/;"	t	typeref:struct:_monomial
monomial_data	Include/update.h	/^} monomial_data;$/;"	t	typeref:struct:_monomial_data
mpar	Include/update.h	/^  mre_par mpar;$/;"	m	struct:__anon39
mpcac_eval	Analysis/Mesons/bs_observables.cpp	/^void mpcac_eval(Corr_t* mpcac_eff, Corr_t* g5_cor, Corr_t* g5_eff, Corr_t* g5_g0g5_cor) {$/;"	f
mpi_broadcast_parameters	LibHR/IO/read_input.c	/^static void mpi_broadcast_parameters(input_record_t crec[]) {$/;"	f	file:
mre_guess	LibHR/Update/mre.c	/^void mre_guess(mre_par *par, int p, spinor_field *out, spinor_operator D, spinor_field *pf)$/;"	f
mre_init	LibHR/Update/mre.c	/^void mre_init(mre_par *par, int max, double prec)$/;"	f
mre_par	Include/update.h	/^} mre_par;$/;"	t	typeref:struct:__anon37
mre_past	Include/update.h	/^  int mre_past;$/;"	m	struct:_mon_hasenbusch_par
mre_past	Include/update.h	/^  int mre_past;$/;"	m	struct:_mon_hasenbusch_tm_par
mre_past	Include/update.h	/^  int mre_past;$/;"	m	struct:_mon_hmc_par
mre_past	Include/update.h	/^  int mre_past;$/;"	m	struct:_mon_tm_par
mre_store	LibHR/Update/mre.c	/^void mre_store(mre_par *par, int p, spinor_field *in)$/;"	f
mshift_par	Include/inverters.h	/^} mshift_par;$/;"	t	typeref:struct:_mshift_par
mstring	Disconnected/compute_loops.c	/^  char mstring[256];$/;"	m	struct:_input_loops	file:
mstring	RenormalizationFactors/measure_Z_mom.c	/^  char mstring[256];$/;"	m	struct:_input_renormalization	file:
mstring	Scattering/IOroutines.c	/^	char mstring[256];$/;"	m	struct:_input_scatt	file:
mstring	Scattering/meson_scattering.c	/^	char mstring[256];$/;"	m	struct:_input_scatt	file:
mstring	Spectrum/measure_formfactor.c	/^  char mstring[256];$/;"	m	struct:_input_mesons	file:
mstring	Spectrum/measure_spectrum.c	/^  char mstring[1024];$/;"	m	struct:_input_mesons	file:
mstring	Spectrum/mk_mesons.c	/^  char mstring[256];$/;"	m	struct:_input_mesons	file:
mstring	Spectrum/mk_mesons_with_z2semwall.c	/^  char mstring[256];$/;"	m	struct:_input_mesons	file:
mstring	Spectrum/mk_mesons_with_z2semwall_new.c	/^  char mstring[256];$/;"	m	struct:_input_mesons	file:
mstring	Spectrum/trunc_mesons.c	/^  char mstring[256];$/;"	m	struct:_input_ata_qprop	file:
mstring	TestProgram/Deflate/check_deflate.c	/^  char mstring[256];$/;"	m	struct:_input_mesons	file:
mstring	TestProgram/Propagator/check_propagator.c	/^  char mstring[256];$/;"	m	struct:_input_mesons	file:
mstring	TestProgram/TripletMesons/check_triplets_1.c	/^  char mstring[256];$/;"	m	struct:_input_mesons	file:
mu	Include/update.h	/^  double mu;$/;"	m	struct:__anon39
mu	Include/update.h	/^  double mu;$/;"	m	struct:_mon_hasenbusch_tm_par
mu	Include/update.h	/^  double mu;$/;"	m	struct:_mon_tm_par
mul_gamma	TestProgram/DiracOperator/check_diracoperator_2.c	/^static suNf_spinor mul_gamma(int mu,suNf_spinor s)$/;"	f	file:
mult	Make/Utils/autosun/complex.h	/^	void mult(const complex& a, const complex& b)$/;"	f	class:complex
mult	Make/Utils/autosun/polynomial.h	/^	void mult(const polynomial& a, const polynomial& b)$/;"	f	class:polynomial
mult	Make/Utils/autosun/polynomial.h	/^	void mult(const rmonomial& a, const rmonomial& b)$/;"	f	class:rmonomial
mult	Make/Utils/autosun/sparse.h	/^	void mult(const sparsematrix<VALUE>& p, const sparsematrix<VALUE>& q)$/;"	f	class:sparsematrix
mult_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define mult_mat(/;"	d	file:
mult_mat_spinor	TestProgram/TripletMesons/check_triplets_2.c	/^#define mult_mat_spinor(/;"	d	file:
mutate	LibHR/Update/mre.c	/^static int mutate[MAX];$/;"	v	file:
my_gamma	TestProgram/DiracOperator/check_diracoperator_4.c	/^complex my_gamma[4][4][4];$/;"	v
mycpyname	LibHR/IO/logger.c	/^static void mycpyname(char **dst, char *src){$/;"	f	file:
mycpytonl	LibHR/IO/logger.c	/^static int mycpytonl(char **dst, char **src){$/;"	f	file:
n	Converter/ChromaUtils/main.c	/^  int n;          int n_f;$/;"	m	struct:_filename_type	file:
n	Converter/converter.c	/^  int n;          int n_f;$/;"	m	struct:_filename_type	file:
n	GaugeFix/gaugefix_measure.c	/^  int n;$/;"	m	struct:__anon8	file:
n	GaugeFix/gaugefix_unittest.c	/^  int n;$/;"	m	struct:__anon10	file:
n	HMC/hmc_forces.c	/^  int n;$/;"	m	struct:__anon12	file:
n	Include/inverters.h	/^   int n; \/* number of shifts *\/$/;"	m	struct:_mshift_par
n	Include/rational_functions.h	/^	int n,d;$/;"	m	struct:_rational_app
n	LibHR/Update/remez/alg_remez.h	/^  int n, d;$/;"	m	class:AlgRemez
n	ModeNumber/mk_eigvals.c	/^  int n;$/;"	m	struct:__anon71	file:
n	ModeNumber/mk_modenumber.c	/^  int n;$/;"	m	struct:__anon73	file:
n	RenormalizationFactors/measure_Z_mom.c	/^  int n;$/;"	m	struct:__anon75	file:
n	Scattering/IOroutines.c	/^	int n;$/;"	m	struct:__anon78	file:
n	Scattering/meson_scattering.c	/^	int n;$/;"	m	struct:__anon80	file:
n	Spectrum/measure_formfactor.c	/^  int n;$/;"	m	struct:__anon83	file:
n	Spectrum/measure_spectrum.c	/^  int n;$/;"	m	struct:__anon85	file:
n	Spectrum/mk_mesons.c	/^  int n;$/;"	m	struct:__anon87	file:
n	Spectrum/mk_mesons_with_z2semwall.c	/^  int n;$/;"	m	struct:__anon89	file:
n	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int n;$/;"	m	struct:__anon91	file:
n	Spectrum/mk_sfcoupling.c	/^  int n;$/;"	m	struct:__anon93	file:
n	Spectrum/trunc_mesons.c	/^  int n;$/;"	m	struct:__anon95	file:
n	StaticPotential/mk_polyakov_loops.c	/^  int n;$/;"	m	struct:__anon97	file:
n	StaticPotential/mk_wilsonloops.c	/^  int n;$/;"	m	struct:__anon99	file:
n	StaticPotential/tune_HYP_smearing.c	/^  int n;$/;"	m	struct:__anon101	file:
n	TestProgram/Deflate/check_deflate.c	/^  int n;$/;"	m	struct:__anon104	file:
n	TestProgram/Propagator/check_propagator.c	/^  int n;$/;"	m	struct:__anon107	file:
n	WilsonFlow/WF_measure.c	/^  int n;$/;"	m	struct:__anon113	file:
n	WilsonFlow/WF_measure_adaptative.c	/^  int n;$/;"	m	struct:__anon115	file:
n1	LibHR/Update/remez/main.C	/^	int n1,n2;$/;"	m	struct:_guess_inf	file:
n2	LibHR/Update/remez/main.C	/^	int n1,n2;$/;"	m	struct:_guess_inf	file:
nEz	Spectrum/measure_spectrum.c	/^	int nEz;$/;"	m	struct:_input_mesons	file:
n_dilution_slices	LibHR/Observables/trunc_hairpin.c	/^static int n_dilution_slices;$/;"	v	file:
n_eigenvalues	Include/observables.h	/^  int n_eigenvalues;$/;"	m	struct:_ata_qprop_pars
n_f	Converter/ChromaUtils/main.c	/^  int n;          int n_f;$/;"	m	struct:_filename_type	file:
n_f	Converter/converter.c	/^  int n;          int n_f;$/;"	m	struct:_filename_type	file:
n_hopping	LibHR/Observables/calc_prop_ff.c	/^static int n_hopping=0;$/;"	v	file:
n_int	LibHR/IO/read_action.c	/^static int n_int = 0;$/;"	v	file:
n_masses	Include/observables.h	/^  int n_masses;$/;"	m	struct:_ata_qprop_pars
n_mom	Disconnected/compute_loops.c	/^  int n_mom;$/;"	m	struct:_input_loops	file:
n_mom	RenormalizationFactors/measure_Z_mom.c	/^  int n_mom;$/;"	m	struct:_input_renormalization	file:
n_mom	Spectrum/measure_formfactor.c	/^  int n_mom;$/;"	m	struct:_input_mesons	file:
n_mom	Spectrum/measure_spectrum.c	/^  int n_mom;$/;"	m	struct:_input_mesons	file:
n_mon	LibHR/IO/read_action.c	/^static int n_mon = 0;$/;"	v	file:
n_pf	Include/update.h	/^  int n_pf;$/;"	m	struct:__anon38
n_pf	Include/update.h	/^  int n_pf;$/;"	m	struct:__anon39
n_sources_correction	Include/observables.h	/^  int n_sources_correction;$/;"	m	struct:_ata_qprop_pars
n_sources_truncation	Include/observables.h	/^  int n_sources_truncation;$/;"	m	struct:_ata_qprop_pars
n_truncation_steps	Include/observables.h	/^  int n_truncation_steps;$/;"	m	struct:_ata_qprop_pars
n_twist	RenormalizationFactors/measure_Z_mom.c	/^  int n_twist;$/;"	m	struct:_input_renormalization	file:
n_ws	LibHR/Update/force_rhmc.c	/^static unsigned int n_ws = 0;$/;"	v	file:
nallocated	LibHR/Memory/amalloc.c	/^static size_t nallocated = 0;$/;"	v	file:
name	Analysis/Mesons/bs_ctrl.h	/^  std::string name;$/;"	m	class:eval_ctrl
name	Converter/converter.c	/^  char name[256];$/;"	m	struct:_format_type	file:
name	Include/input_par.h	/^  char *name;$/;"	m	struct:_input_record_t
name	LibHR/IO/logger.c	/^	char *name;$/;"	m	struct:_lrecord	file:
name	LibHR/IO/logger.c	/^	char *name;$/;"	m	struct:_record	file:
name	Make/Utils/autosun/adjoint.h	/^	string name;$/;"	m	namespace:representation
name	Make/Utils/autosun/antisymmetric.h	/^	string name;$/;"	m	namespace:representation
name	Make/Utils/autosun/fundamental.h	/^	string name;$/;"	m	namespace:representation
name	Make/Utils/autosun/sun.h	/^	string name;$/;"	m	namespace:group
name	Make/Utils/autosun/symmetric.h	/^	string name;$/;"	m	namespace:representation
nameT	TestProgram/TripletMesons/check_triplets_1.c	/^static char nameT[8][256] = {"a", "pi", "rho", "b", "pi2", "rho2", "forbidden triplet 0+-", "forbidden triplet 1++" };$/;"	v	file:
nblocks	LibHR/Geometry/test_geometry_mpi.c	/^static unsigned int nblocks;$/;"	v	file:
nborders	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int nborders;       \/* how many directions are labeled as L\/RBORDER *\/$/;"	m	struct:_block_info	file:
nbuffers	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int nbuffers;       \/* how many directions are labeled as L\/RBUFFER *\/$/;"	m	struct:_block_info	file:
nbuffers_gauge	Include/geometry.h	/^  int nbuffers_gauge;$/;"	m	struct:_geometry_descriptor
nbuffers_spinor	Include/geometry.h	/^  int nbuffers_spinor;$/;"	m	struct:_geometry_descriptor
nc	GaugeFix/gaugefix_measure.c	/^  int nc, nf;$/;"	m	struct:__anon8	file:
nc	GaugeFix/gaugefix_unittest.c	/^  int nc, nf;$/;"	m	struct:__anon10	file:
nc	HMC/hmc_forces.c	/^  int nc, nf;$/;"	m	struct:__anon12	file:
nc	ModeNumber/mk_eigvals.c	/^  int nc, nf;$/;"	m	struct:__anon71	file:
nc	ModeNumber/mk_modenumber.c	/^  int nc, nf;$/;"	m	struct:__anon73	file:
nc	RenormalizationFactors/measure_Z_mom.c	/^  int nc, nf;$/;"	m	struct:__anon75	file:
nc	Scattering/IOroutines.c	/^	int nc, nf;$/;"	m	struct:__anon78	file:
nc	Scattering/meson_scattering.c	/^	int nc, nf;$/;"	m	struct:__anon80	file:
nc	Spectrum/measure_formfactor.c	/^  int nc, nf;$/;"	m	struct:__anon83	file:
nc	Spectrum/measure_spectrum.c	/^  int nc, nf;$/;"	m	struct:__anon85	file:
nc	Spectrum/mk_mesons.c	/^  int nc, nf;$/;"	m	struct:__anon87	file:
nc	Spectrum/mk_mesons_with_z2semwall.c	/^  int nc, nf;$/;"	m	struct:__anon89	file:
nc	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int nc, nf;$/;"	m	struct:__anon91	file:
nc	Spectrum/mk_sfcoupling.c	/^  int nc, nf;$/;"	m	struct:__anon93	file:
nc	Spectrum/trunc_mesons.c	/^  int nc, nf;$/;"	m	struct:__anon95	file:
nc	StaticPotential/mk_polyakov_loops.c	/^  int nc, nf;$/;"	m	struct:__anon97	file:
nc	StaticPotential/mk_wilsonloops.c	/^  int nc, nf;$/;"	m	struct:__anon99	file:
nc	StaticPotential/tune_HYP_smearing.c	/^  int nc, nf;$/;"	m	struct:__anon101	file:
nc	TestProgram/Deflate/check_deflate.c	/^  int nc, nf;$/;"	m	struct:__anon104	file:
nc	TestProgram/Propagator/check_propagator.c	/^  int nc, nf;$/;"	m	struct:__anon107	file:
nc	WilsonFlow/WF_measure.c	/^  int nc, nf;$/;"	m	struct:__anon113	file:
nc	WilsonFlow/WF_measure_adaptative.c	/^  int nc, nf;$/;"	m	struct:__anon115	file:
nchan	Analysis/Mesons/bs_ctrl.h	/^  int nchan;$/;"	m	class:primary_ctrl
ncopies	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int ncopies;            \/* if it is an ORIGINAL: number of copies *\/$/;"	m	struct:_site_info	file:
ncopies	LibHR/Geometry/test_geometry_mpi.c	/^static int ncopies;$/;"	v	file:
ncopies_gauge	Include/geometry.h	/^  int ncopies_gauge;$/;"	m	struct:_geometry_descriptor
ncopies_spinor	Include/geometry.h	/^  int ncopies_spinor;$/;"	m	struct:_geometry_descriptor
nd1	LibHR/Update/remez/alg_remez.h	/^  int nd1, iter;$/;"	m	class:AlgRemez
ndep	Analysis/Mesons/bs_ctrl.h	/^  int ndep;$/;"	m	class:ratio_ctrl
ndep	Analysis/Mesons/bs_ctrl.h	/^  int ndep[3];$/;"	m	class:derived_ctrl
ne	RenormalizationFactors/measure_Z_mom.c	/^  int ne;$/;"	m	struct:_input_renormalization	file:
neigs	LibHR/Observables/calc_prop.c	/^static int neigs=0;$/;"	v	file:
neq	LibHR/Update/remez/alg_remez.h	/^  int neq;$/;"	m	class:AlgRemez
nev	HMC/hmc.c	/^  int nev; \/* number of accurate eigenvalues *\/$/;"	m	struct:_input_eigval	file:
nev	Include/utils.h	/^  int nev; \/* number of accurate eigenvalues *\/$/;"	m	struct:_eva_prec
nev	ModeNumber/mk_eigvals.c	/^  int nev; \/* number of accurate eigenvalues *\/$/;"	m	struct:_input_eigval	file:
nev	TestProgram/Deflate/check_deflate.c	/^  int nev; \/* number of accurate eigenvalues *\/$/;"	m	struct:_input_eigval	file:
nevt	HMC/hmc.c	/^  int nevt; \/* search space dimension *\/$/;"	m	struct:_input_eigval	file:
nevt	Include/utils.h	/^  int nevt; \/* search space dimension *\/$/;"	m	struct:_eva_prec
nevt	ModeNumber/mk_eigvals.c	/^  int nevt; \/* search space dimension *\/$/;"	m	struct:_input_eigval	file:
nevt	TestProgram/Deflate/check_deflate.c	/^  int nevt; \/* search space dimension *\/$/;"	m	struct:_input_eigval	file:
new_mass	Reweight/reweight.h	/^	double new_mass;$/;"	m	struct:__anon76
new_theta_t	Reweight/reweight.h	/^	double new_theta_t;$/;"	m	struct:__anon76
new_theta_x	Reweight/reweight.h	/^	double new_theta_x;$/;"	m	struct:__anon76
new_theta_y	Reweight/reweight.h	/^	double new_theta_y;$/;"	m	struct:__anon76
new_theta_z	Reweight/reweight.h	/^	double new_theta_z;$/;"	m	struct:__anon76
next	Analysis/Mesons/ranlxs.cpp	/^static int next[12],snext[24]; $/;"	v	file:
next	Include/meson_observables.h	/^  struct meson_observable_s* next;$/;"	m	struct:meson_observable_s	typeref:struct:meson_observable_s::meson_observable_s
next	Include/update.h	/^  struct _integrator_par *next;$/;"	m	struct:_integrator_par	typeref:struct:_integrator_par::_integrator_par
next	LibHR/IO/logger.c	/^	struct _lrecord *next;$/;"	m	struct:_lrecord	typeref:struct:_lrecord::_lrecord	file:
next	LibHR/IO/logger.c	/^	struct _record *next;$/;"	m	struct:_record	typeref:struct:_record::_record	file:
next	LibHR/Memory/amalloc.c	/^   struct addr_t *next;$/;"	m	struct:addr_t	typeref:struct:addr_t::addr_t	file:
next	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
next	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
next	LibHR/Update/monomials.c	/^  struct _mon_list *next;$/;"	m	struct:_mon_list	typeref:struct:_mon_list::_mon_list	file:
nf	Converter/ChromaUtils/main.c	/^  int nf;         int nf_f;$/;"	m	struct:_filename_type	file:
nf	Converter/converter.c	/^  int nf;         int nf_f;$/;"	m	struct:_filename_type	file:
nf	GaugeFix/gaugefix_measure.c	/^  int nc, nf;$/;"	m	struct:__anon8	file:
nf	GaugeFix/gaugefix_unittest.c	/^  int nc, nf;$/;"	m	struct:__anon10	file:
nf	HMC/hmc_forces.c	/^  int nc, nf;$/;"	m	struct:__anon12	file:
nf	HMC/hmc_utils.c	/^static int nf(){$/;"	f	file:
nf	ModeNumber/mk_eigvals.c	/^  int nc, nf;$/;"	m	struct:__anon71	file:
nf	ModeNumber/mk_modenumber.c	/^  int nc, nf;$/;"	m	struct:__anon73	file:
nf	RenormalizationFactors/measure_Z_mom.c	/^  int nc, nf;$/;"	m	struct:__anon75	file:
nf	Scattering/IOroutines.c	/^	int nc, nf;$/;"	m	struct:__anon78	file:
nf	Scattering/meson_scattering.c	/^	int nc, nf;$/;"	m	struct:__anon80	file:
nf	Spectrum/measure_formfactor.c	/^  int nc, nf;$/;"	m	struct:__anon83	file:
nf	Spectrum/measure_spectrum.c	/^  int nc, nf;$/;"	m	struct:__anon85	file:
nf	Spectrum/mk_mesons.c	/^  int nc, nf;$/;"	m	struct:__anon87	file:
nf	Spectrum/mk_mesons_with_z2semwall.c	/^  int nc, nf;$/;"	m	struct:__anon89	file:
nf	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int nc, nf;$/;"	m	struct:__anon91	file:
nf	Spectrum/mk_sfcoupling.c	/^  int nc, nf;$/;"	m	struct:__anon93	file:
nf	Spectrum/trunc_mesons.c	/^  int nc, nf;$/;"	m	struct:__anon95	file:
nf	StaticPotential/mk_polyakov_loops.c	/^  int nc, nf;$/;"	m	struct:__anon97	file:
nf	StaticPotential/mk_wilsonloops.c	/^  int nc, nf;$/;"	m	struct:__anon99	file:
nf	StaticPotential/tune_HYP_smearing.c	/^  int nc, nf;$/;"	m	struct:__anon101	file:
nf	TestProgram/Deflate/check_deflate.c	/^  int nc, nf;$/;"	m	struct:__anon104	file:
nf	TestProgram/Propagator/check_propagator.c	/^  int nc, nf;$/;"	m	struct:__anon107	file:
nf	WilsonFlow/WF_measure.c	/^  int nc, nf;$/;"	m	struct:__anon113	file:
nf	WilsonFlow/WF_measure_adaptative.c	/^  int nc, nf;$/;"	m	struct:__anon115	file:
nf_f	Converter/ChromaUtils/main.c	/^  int nf;         int nf_f;$/;"	m	struct:_filename_type	file:
nf_f	Converter/converter.c	/^  int nf;         int nf_f;$/;"	m	struct:_filename_type	file:
nformats	Converter/converter.c	/^int nformats=10;$/;"	v
ng	Converter/ChromaUtils/main.c	/^  int ng;         int ng_f;$/;"	m	struct:_filename_type	file:
ng	Converter/converter.c	/^  int ng;         int ng_f;$/;"	m	struct:_filename_type	file:
ng_f	Converter/ChromaUtils/main.c	/^  int ng;         int ng_f;$/;"	m	struct:_filename_type	file:
ng_f	Converter/converter.c	/^  int ng;         int ng_f;$/;"	m	struct:_filename_type	file:
nhb	PureGauge/suN_utils.h	/^  int nth, nms, nit, nhb, nor;$/;"	m	struct:_input_pg
nhb	TestProgram/Inverters/check_inverters_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Inverters/check_inverters_2.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Inverters/check_inverters_3.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Inverters/check_inverters_5.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Inverters/check_inverters_6.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Inverters/check_inverters_7.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Inverters/check_inverters_8.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Inverters/check_inverters_SAP.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhb	TestProgram/Update/check_update_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nhits	Disconnected/compute_loops.c	/^  int nhits;$/;"	m	struct:_input_loops	file:
nhits	HMC/hmc.c	/^  int nhits;$/;"	m	struct:_input_mesons	file:
nhits	ModeNumber/mk_modenumber.c	/^  int nhits;$/;"	m	struct:_input_nu	file:
nhits	ModeNumber/modenumber.c	/^static int nhits;$/;"	v	file:
nhits	Scattering/IOroutines.c	/^	int nhits;$/;"	m	struct:_input_scatt	file:
nhits	Scattering/meson_scattering.c	/^	int nhits;$/;"	m	struct:_input_scatt	file:
nhits	Spectrum/measure_formfactor.c	/^  int nhits;$/;"	m	struct:_input_mesons	file:
nhits	Spectrum/mk_mesons.c	/^  int nhits;$/;"	m	struct:_input_mesons	file:
nhits	Spectrum/mk_mesons_with_z2semwall.c	/^  int nhits;$/;"	m	struct:_input_mesons	file:
nhits	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int nhits;$/;"	m	struct:_input_mesons	file:
nhits_2pt	Spectrum/measure_spectrum.c	/^  int nhits_2pt;$/;"	m	struct:_input_mesons	file:
nhits_disc	Spectrum/measure_spectrum.c	/^  int nhits_disc;$/;"	m	struct:_input_mesons	file:
nhits_hopping	Spectrum/measure_spectrum.c	/^  int nhits_hopping;  \/\/Multiplies the number of hits in the fast part of the hopping parameter expansion$/;"	m	struct:_input_mesons	file:
nindices	LibHR/Geometry/test_geometry_mpi.c	/^static int nindices;$/;"	v	file:
ninners	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int ninners;        \/* how many directions are labeled as INNER *\/$/;"	m	struct:_block_info	file:
nint	WilsonFlow/WF_measure.c	/^  int nint;$/;"	m	struct:_input_WF	file:
nit	PureGauge/suN_utils.h	/^  int nth, nms, nit, nhb, nor;$/;"	m	struct:_input_pg
nit	TestProgram/Inverters/check_inverters_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Inverters/check_inverters_2.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Inverters/check_inverters_3.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Inverters/check_inverters_5.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Inverters/check_inverters_6.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Inverters/check_inverters_7.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Inverters/check_inverters_8.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Inverters/check_inverters_SAP.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nit	TestProgram/Update/check_update_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nlocals	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int nlocals;        \/* how many directions are labeled as LOCAL *\/$/;"	m	struct:_block_info	file:
nmeas	WilsonFlow/WF_measure.c	/^  int nmeas;$/;"	m	struct:_input_WF	file:
nmeas	WilsonFlow/WF_measure_adaptative.c	/^  int nmeas;$/;"	m	struct:_input_WF	file:
nmon	Include/update.h	/^  int nmon;$/;"	m	struct:_integrator_par
nmon	LibHR/Update/monomials.c	/^static int nmon=0;$/;"	v	file:
nms	PureGauge/suN_utils.h	/^  int nth, nms, nit, nhb, nor;$/;"	m	struct:_input_pg
nms	TestProgram/Inverters/check_inverters_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Inverters/check_inverters_2.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Inverters/check_inverters_3.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Inverters/check_inverters_5.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Inverters/check_inverters_6.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Inverters/check_inverters_7.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Inverters/check_inverters_8.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Inverters/check_inverters_SAP.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nms	TestProgram/Update/check_update_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
no_eo	LibHR/Geometry/geometry_mpi_eo.c	/^#define no_eo /;"	d	file:
nop	LibHR/Inverters/eva.c	/^static int nop,nvc=0;$/;"	v	file:
nor	PureGauge/suN_utils.h	/^  int nth, nms, nit, nhb, nor;$/;"	m	struct:_input_pg
nor	TestProgram/Inverters/check_inverters_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Inverters/check_inverters_2.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Inverters/check_inverters_3.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Inverters/check_inverters_5.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Inverters/check_inverters_6.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Inverters/check_inverters_7.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Inverters/check_inverters_8.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Inverters/check_inverters_SAP.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nor	TestProgram/Update/check_update_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
norm	LibHR/Update/remez/alg_remez.h	/^  bigfloat norm;$/;"	m	class:AlgRemez
norm_coef	LibHR/Update/remez/Zolotarev/zolotarev.c	/^void norm_coef(real min, real max, int n, real *a, real *b, real *delta) {$/;"	f
normalize	LibHR/Inverters/eva.c	/^static double normalize(spinor_field *ps)$/;"	f	file:
normalize	LibHR/Utils/suN_utils.c	/^static void normalize(double *v)$/;"	f	file:
normalize	LibHR/Utils/suN_utils.c	/^static void normalize(suNg_vector *v)$/;"	f	file:
normalize	TestProgram/Inverters/check_inverters_4.c	/^static double normalize(spinor_field *ps)$/;"	f	file:
normalize	TestProgram/SpinorField/check_spinorfield_1.c	/^static double normalize(spinor_field *ps)$/;"	f	file:
normalize_cuts	Analysis/Mesons/bs_ctrl.cpp	/^void eval_ctrl::normalize_cuts(int lt) {$/;"	f	class:eval_ctrl
normalize_flt	LibHR/Utils/suN_utils.c	/^static void normalize_flt(suNg_vector_flt *v)$/;"	f	file:
nperms	LibHR/Observables/wilsonloops.c	/^  int nperms;$/;"	m	struct:__anon54	file:
nperms	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^  int nperms;$/;"	m	struct:__anon108	file:
nperms	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^  int nperms;$/;"	m	struct:__anon109	file:
nperms	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^  int nperms;$/;"	m	struct:__anon110	file:
nperms	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^  int nperms;$/;"	m	struct:__anon111	file:
nsamples1	Analysis/Mesons/bs_mesons.cpp	/^int nsamples1=1000;$/;"	v
nsamples2	Analysis/Mesons/bs_mesons.cpp	/^int nsamples2=100;$/;"	v
nsenders	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int nsenders;$/;"	m	struct:_block_info	file:
nsteps	Include/update.h	/^  int nsteps;$/;"	m	struct:_integrator_par
nsteps	LibHR/Observables/wilsonloops.c	/^  int nsteps;$/;"	m	struct:__anon54	file:
nsteps	StaticPotential/mk_wilsonloops.c	/^  int nsteps[10];$/;"	m	struct:_input_wilson	file:
nsteps	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^  int nsteps;$/;"	m	struct:__anon108	file:
nsteps	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^  int nsteps;$/;"	m	struct:__anon109	file:
nsteps	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^  int nsteps;$/;"	m	struct:__anon110	file:
nsteps	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^  int nsteps;$/;"	m	struct:__anon111	file:
nth	PureGauge/suN_utils.h	/^  int nth, nms, nit, nhb, nor;$/;"	m	struct:_input_pg
nth	TestProgram/Inverters/check_inverters_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Inverters/check_inverters_2.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Inverters/check_inverters_3.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Inverters/check_inverters_5.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Inverters/check_inverters_6.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Inverters/check_inverters_7.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Inverters/check_inverters_8.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Inverters/check_inverters_SAP.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nth	TestProgram/Update/check_update_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
nu	Converter/ChromaUtils/translate.c	/^static int nu;$/;"	v	file:
nu_var	ModeNumber/mk_modenumber.c	/^input_nu nu_var = init_input_nu(nu_var);$/;"	v
num	Include/update.h	/^	int num[2];$/;"	m	struct:__anon37
num	LibHR/IO/read_action.c	/^   int num;$/;"	m	struct:__anon47	file:
num	LibHR/Random/ranlxd.c	/^   float num[96];$/;"	m	union:__anon59	file:
num	LibHR/Random/ranlxd.c	/^   int num[96];$/;"	m	union:__anon62	file:
num	LibHR/Random/ranlxs.c	/^   float num[96];$/;"	m	union:__anon65	file:
num	LibHR/Random/ranlxs.c	/^   int num[96];$/;"	m	union:__anon68	file:
num_init	LibHR/Update/mre.c	/^static int num_init = 0;$/;"	v	file:
num_mon	LibHR/Update/monomials.c	/^int num_mon() {$/;"	f
nvc	LibHR/Inverters/eva.c	/^static int nop,nvc=0;$/;"	v	file:
odd	LibHR/Geometry/geometry_mpi_eo.c	/^#define odd /;"	d	file:
old2_write_su2_multiply	Make/Utils/write_suN_headers.pl	/^sub old2_write_su2_multiply {$/;"	s
old_mass	Reweight/reweight.h	/^	double old_mass;$/;"	m	struct:__anon76
old_theta_t	Reweight/reweight.h	/^	double old_theta_t;$/;"	m	struct:__anon76
old_theta_x	Reweight/reweight.h	/^	double old_theta_x;$/;"	m	struct:__anon76
old_theta_y	Reweight/reweight.h	/^	double old_theta_y;$/;"	m	struct:__anon76
old_theta_z	Reweight/reweight.h	/^	double old_theta_z;$/;"	m	struct:__anon76
old_write_su2_inverse_multiply	Make/Utils/write_suN_headers.pl	/^sub old_write_su2_inverse_multiply {$/;"	s
old_write_su2_multiply	Make/Utils/write_suN_headers.pl	/^sub old_write_su2_multiply {$/;"	s
omega1	HMC/hmc.c	/^  double omega1; \/* absolute precision *\/$/;"	m	struct:_input_eigval	file:
omega1	Include/utils.h	/^  double omega1; \/* absolute precision *\/$/;"	m	struct:_eva_prec
omega1	ModeNumber/mk_eigvals.c	/^  double omega1; \/* absolute precision *\/$/;"	m	struct:_input_eigval	file:
omega1	TestProgram/Deflate/check_deflate.c	/^  double omega1; \/* absolute precision *\/$/;"	m	struct:_input_eigval	file:
omega2	HMC/hmc.c	/^  double omega2; \/* relative precision *\/$/;"	m	struct:_input_eigval	file:
omega2	Include/utils.h	/^  double omega2; \/* relative precision *\/$/;"	m	struct:_eva_prec
omega2	ModeNumber/mk_eigvals.c	/^  double omega2; \/* relative precision *\/$/;"	m	struct:_input_eigval	file:
omega2	TestProgram/Deflate/check_deflate.c	/^  double omega2; \/* relative precision *\/$/;"	m	struct:_input_eigval	file:
one	Analysis/Mesons/ranlxs.cpp	/^static double zero,one,carry;$/;"	v	file:
one	LibHR/Random/ranlxd.c	/^static vec_t one,one_bit,carry;$/;"	v	file:
one	LibHR/Random/ranlxs.c	/^static vec_t one,one_bit,carry;$/;"	v	file:
one_bit	Analysis/Mesons/ranlxs.cpp	/^static double sbase,sone_bit,base,one_bit,shift;$/;"	v	file:
one_bit	LibHR/Random/ranlxd.c	/^static double one_bit;$/;"	v	file:
one_bit	LibHR/Random/ranlxd.c	/^static vec_t one,one_bit,carry;$/;"	v	file:
one_bit	LibHR/Random/ranlxs.c	/^static float one_bit;$/;"	v	file:
one_bit	LibHR/Random/ranlxs.c	/^static vec_t one,one_bit,carry;$/;"	v	file:
op_propagator	LibHR/Observables/measure_mesons.c	/^static void op_propagator(suNf_propagator* out, suNf_propagator* in, gamma_ind i){$/;"	f	file:
op_spinmatrix	LibHR/Observables/measure_mesons.c	/^static void op_spinmatrix(suNf_spin_matrix* out, suNf_spin_matrix* in, gamma_ind i){$/;"	f	file:
op_spinor	LibHR/Observables/measure_mesons_ff.c	/^static void op_spinor(suNf_spinor* out, suNf_spinor* in, gamma_ind i){$/;"	f	file:
operator !=	Make/Utils/autosun/complex.h	/^	friend bool operator!=(const FLOATING& a, const complex& b)$/;"	f	class:complex
operator !=	Make/Utils/autosun/complex.h	/^	friend bool operator!=(const complex& a, const FLOATING& b)$/;"	f	class:complex
operator !=	Make/Utils/autosun/complex.h	/^	friend bool operator!=(const complex& a, const complex& b)$/;"	f	class:complex
operator !=	Make/Utils/autosun/list.h	/^	bool operator!=(const orderedlist<INDEX,VALUE>& list) const$/;"	f	class:orderedlist
operator !=	Make/Utils/autosun/sparse.h	/^	friend bool operator!=(const mindex& a, const mindex& b) { return a.key() != b.key() || a.size != b.size; }$/;"	f	struct:mindex
operator !=	Make/Utils/autosun/sparse.h	/^	friend bool operator!=(const vindex& a, const vindex& b) { return a.row != b.row || a.size != b.size; }$/;"	f	struct:vindex
operator *	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator*(const bigfloat& x, const bigfloat& y) {$/;"	f	class:bigfloat
operator *	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator*(const bigfloat& x, const unsigned long y) {$/;"	f	class:bigfloat
operator *	Make/Utils/autosun/complex.h	/^	friend complex operator*(const FLOATING& a, const complex& b)$/;"	f	class:complex
operator *	Make/Utils/autosun/complex.h	/^	friend complex operator*(const complex& a, const FLOATING& b)$/;"	f	class:complex
operator *	Make/Utils/autosun/complex.h	/^	friend complex operator*(const complex& a, const complex& b)$/;"	f	class:complex
operator *=	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator*=(const bigfloat& y) { return *this = *this * y; }$/;"	f	class:bigfloat
operator *=	Make/Utils/autosun/complex.h	/^	complex operator*=(const FLOATING& a)$/;"	f	class:complex
operator *=	Make/Utils/autosun/complex.h	/^	complex operator*=(const complex& a)$/;"	f	class:complex
operator *=	Make/Utils/autosun/polynomial.h	/^	polynomial& operator*=(const polynomial& b)$/;"	f	class:polynomial
operator +	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator+(const bigfloat& x, const bigfloat& y) {$/;"	f	class:bigfloat
operator +	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator+(const bigfloat& x, const unsigned long y) {$/;"	f	class:bigfloat
operator +	Make/Utils/autosun/complex.h	/^	friend complex operator+(const FLOATING& a, const complex& b)$/;"	f	class:complex
operator +	Make/Utils/autosun/complex.h	/^	friend complex operator+(const complex& a, const FLOATING& b)$/;"	f	class:complex
operator +	Make/Utils/autosun/complex.h	/^	friend complex operator+(const complex& a, const complex& b)$/;"	f	class:complex
operator +=	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator+=(const bigfloat& y) { return *this = *this + y; }$/;"	f	class:bigfloat
operator +=	Make/Utils/autosun/complex.h	/^	complex operator+=(const FLOATING& a)$/;"	f	class:complex
operator +=	Make/Utils/autosun/complex.h	/^	complex operator+=(const complex& a)$/;"	f	class:complex
operator +=	Make/Utils/autosun/polynomial.h	/^	polynomial& operator+=(const polynomial& b)$/;"	f	class:polynomial
operator -	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator-(const bigfloat& x) {$/;"	f	class:bigfloat
operator -	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator-(const bigfloat& x, const bigfloat& y) {$/;"	f	class:bigfloat
operator -	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator-(const bigfloat& x, const unsigned long y) {$/;"	f	class:bigfloat
operator -	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator-(const unsigned long x, const bigfloat& y) {$/;"	f	class:bigfloat
operator -	Make/Utils/autosun/complex.h	/^	friend complex operator-(const FLOATING& a, const complex& b)$/;"	f	class:complex
operator -	Make/Utils/autosun/complex.h	/^	friend complex operator-(const complex& a)$/;"	f	class:complex
operator -	Make/Utils/autosun/complex.h	/^	friend complex operator-(const complex& a, const FLOATING& b)$/;"	f	class:complex
operator -	Make/Utils/autosun/complex.h	/^	friend complex operator-(const complex& a, const complex& b)$/;"	f	class:complex
operator -=	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator-=(const bigfloat& y) { return *this = *this - y; }$/;"	f	class:bigfloat
operator -=	Make/Utils/autosun/complex.h	/^	complex operator-=(const FLOATING& a)$/;"	f	class:complex
operator -=	Make/Utils/autosun/complex.h	/^	complex operator-=(const complex& a)$/;"	f	class:complex
operator /	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator\/(const bigfloat& x, const bigfloat& y){$/;"	f	class:bigfloat
operator /	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator\/(const bigfloat& x, const unsigned long y){$/;"	f	class:bigfloat
operator /	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat operator\/(const unsigned long x, const bigfloat& y){$/;"	f	class:bigfloat
operator /	Make/Utils/autosun/complex.h	/^	friend complex operator\/(const FLOATING& a, const complex& b)$/;"	f	class:complex
operator /	Make/Utils/autosun/complex.h	/^	friend complex operator\/(const complex& a, const FLOATING& b)$/;"	f	class:complex
operator /	Make/Utils/autosun/complex.h	/^	friend complex operator\/(const complex& a, const complex& b)$/;"	f	class:complex
operator /=	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator\/=(const bigfloat& y) { return *this = *this \/ y; }$/;"	f	class:bigfloat
operator <	LibHR/Update/remez/bigfloat.h	/^  friend int operator<(const bigfloat& x, const bigfloat& y) {$/;"	f	class:bigfloat
operator <	Make/Utils/autosun/polynomial.h	/^	friend bool operator<(const rmonomial& a, const rmonomial& b) { return a.getstring() < b.getstring(); }$/;"	f	class:rmonomial
operator <	Make/Utils/autosun/sparse.h	/^	friend bool operator<(const mindex& a, const mindex& b) { return a.key() < b.key(); }$/;"	f	struct:mindex
operator <	Make/Utils/autosun/sparse.h	/^	friend bool operator<(const vindex& a, const vindex& b) { return a.row < b.row; }$/;"	f	struct:vindex
operator <<	Analysis/Mesons/bs_ctrl.cpp	/^ostream& operator<<(ostream& os, eval_ctrl& ev) {$/;"	f
operator <<	Analysis/Mesons/datasample.h	/^  friend ostream &operator<<(ostream &out, estimate e){$/;"	f	struct:estimate
operator <<	Make/Utils/autosun/complex.h	/^	friend ostream& operator<<(ostream& os, const complex& z)$/;"	f	class:complex
operator <<	Make/Utils/autosun/list.h	/^	friend ostream& operator<<(ostream& os, const orderedlist<INDEX,VALUE>& list)$/;"	f	class:orderedlist
operator <<	Make/Utils/autosun/sparse.h	/^	friend ostream& operator<<(ostream& os, const mindex& a)$/;"	f	struct:mindex
operator <<	Make/Utils/autosun/sparse.h	/^	friend ostream& operator<<(ostream& os, const vindex& a)$/;"	f	struct:vindex
operator <=	Make/Utils/autosun/polynomial.h	/^	friend bool operator<=(const rmonomial& a, const rmonomial& b) { return a.getstring() <= b.getstring(); }$/;"	f	class:rmonomial
operator <=	Make/Utils/autosun/sparse.h	/^	friend bool operator<=(const mindex& a, const mindex& b) { return a.key() <= b.key(); }$/;"	f	struct:mindex
operator <=	Make/Utils/autosun/sparse.h	/^	friend bool operator<=(const vindex& a, const vindex& b) { return a.row <= b.row; }$/;"	f	struct:vindex
operator =	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator=(const bigfloat& y) {$/;"	f	class:bigfloat
operator =	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator=(const double y) {$/;"	f	class:bigfloat
operator =	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator=(const float y) {$/;"	f	class:bigfloat
operator =	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator=(const signed long y) {$/;"	f	class:bigfloat
operator =	LibHR/Update/remez/bigfloat.h	/^  bigfloat& operator=(const unsigned long y) { $/;"	f	class:bigfloat
operator =	Make/Utils/autosun/complex.h	/^	complex operator=(const FLOATING& a)$/;"	f	class:complex
operator =	Make/Utils/autosun/complex.h	/^	complex operator=(const complex& a)$/;"	f	class:complex
operator =	Make/Utils/autosun/list.h	/^	virtual orderedlist<INDEX,VALUE>& operator=(const orderedlist<INDEX,VALUE>& list)$/;"	f	class:orderedlist
operator =	Make/Utils/autosun/sparse.h	/^	mindex& operator=(const mindex& index)$/;"	f	struct:mindex
operator =	Make/Utils/autosun/sparse.h	/^	vindex& operator=(const vindex& index)$/;"	f	struct:vindex
operator =	Make/Utils/autosun/sparse.h	/^	virtual orderedlist<INDEX,VALUE>& operator=(const orderedlist<INDEX,VALUE>& b)$/;"	f	class:sparselinear
operator ==	Make/Utils/autosun/complex.h	/^	friend bool operator==(const FLOATING& a, const complex& b)$/;"	f	class:complex
operator ==	Make/Utils/autosun/complex.h	/^	friend bool operator==(const complex& a, const FLOATING& b)$/;"	f	class:complex
operator ==	Make/Utils/autosun/complex.h	/^	friend bool operator==(const complex& a, const complex& b)$/;"	f	class:complex
operator ==	Make/Utils/autosun/list.h	/^	bool operator==(const orderedlist<INDEX,VALUE>& list) const$/;"	f	class:orderedlist
operator ==	Make/Utils/autosun/polynomial.h	/^	friend bool operator==(const rmonomial& a, const rmonomial& b) { return a.getstring() == b.getstring(); }$/;"	f	class:rmonomial
operator ==	Make/Utils/autosun/sparse.h	/^	friend bool operator==(const mindex& a, const mindex& b) { return a.key() == b.key() && a.size == b.size; }$/;"	f	struct:mindex
operator ==	Make/Utils/autosun/sparse.h	/^	friend bool operator==(const vindex& a, const vindex& b) { return a.row == b.row && a.size == b.size; }$/;"	f	struct:vindex
operator >	LibHR/Update/remez/bigfloat.h	/^  friend int operator>(const bigfloat& x, const bigfloat& y) {$/;"	f	class:bigfloat
operator >	Make/Utils/autosun/sparse.h	/^	friend bool operator>(const mindex& a, const mindex& b) { return a.key() > b.key(); }$/;"	f	struct:mindex
operator >	Make/Utils/autosun/sparse.h	/^	friend bool operator>(const vindex& a, const vindex& b) { return a.row > b.row; }$/;"	f	struct:vindex
operator >=	Make/Utils/autosun/sparse.h	/^	friend bool operator>=(const mindex& a, const mindex& b) { return a.key() >= b.key(); }$/;"	f	struct:mindex
operator >=	Make/Utils/autosun/sparse.h	/^	friend bool operator>=(const vindex& a, const vindex& b) { return a.row >= b.row; }$/;"	f	struct:vindex
operator []	Make/Utils/autosun/list.h	/^	ELEMENT& operator[](KEYTYPE i) const { return *(data[i]); }$/;"	f	class:orderedlist
operator const double	LibHR/Update/remez/bigfloat.h	/^  operator const double (void) const { return (double)mpf_get_d(x); }$/;"	f	class:bigfloat
operatorH	ModeNumber/modenumber.c	/^static void operatorH(spinor_field* out, spinor_field* in, double M2) {$/;"	f	file:
operatorX	ModeNumber/modenumber.c	/^static void operatorX(spinor_field* out, spinor_field* in, double M2) {$/;"	f	file:
operatorX2	ModeNumber/modenumber.c	/^static void operatorX2(spinor_field* out, spinor_field* in, double M2) {$/;"	f	file:
operatorZ	ModeNumber/modenumber.c	/^static void operatorZ(spinor_field* out, spinor_field* in, double M2) {$/;"	f	file:
order	Include/rational_functions.h	/^  unsigned int order;$/;"	m	struct:_rational_app
order	ModeNumber/approx_for_modenumber.c	/^  int order;$/;"	m	struct:__anon69	file:
order	ModeNumber/modenumber.c	/^static int order;$/;"	v	file:
orderedlist	Make/Utils/autosun/list.h	/^	orderedlist()$/;"	f	class:orderedlist
orderedlist	Make/Utils/autosun/list.h	/^	orderedlist(const INDEX& index, const VALUE& value)$/;"	f	class:orderedlist
orderedlist	Make/Utils/autosun/list.h	/^	orderedlist(const orderedlist<INDEX,VALUE>& list)$/;"	f	class:orderedlist
orderedlist	Make/Utils/autosun/list.h	/^template<class INDEX, class VALUE> class orderedlist$/;"	c
origin	LibHR/Geometry/test_geometry_mpi.c	/^static site_info* origin=NULL;$/;"	v	file:
origin_coord	LibHR/Geometry/geometry_init.c	/^void origin_coord(int *c) {$/;"	f
original	LibHR/Geometry/test_geometry_mpi.c	/^  struct _site_info* original;     \/* if it is a DUPLICATE: pointer to its original *\/$/;"	m	struct:_site_info	typeref:struct:_site_info::_site_info	file:
orthogonalize	LibHR/Utils/eva_deflation.c	/^static void orthogonalize(spinor_field *out, spinor_field *in, int n) {$/;"	f	file:
other_proc_origin_coord	LibHR/Geometry/geometry_init.c	/^void other_proc_origin_coord(int * proc_coord, int *c) {$/;"	f
otmp	LibHR/Update/Dphi.c	/^spinor_field *otmp=NULL;$/;"	v
otmp	LibHR/Update/Dphi_flt.c	/^static spinor_field_flt *otmp=NULL;$/;"	v	file:
otmp2	LibHR/Update/Dphi.c	/^spinor_field *otmp2=NULL;$/;"	v
outdir	Scattering/IOroutines.c	/^	char outdir[256], p1[16], p2[16];$/;"	m	struct:_input_scatt	file:
output_filename	Converter/ChromaUtils/main.c	/^char output_filename[256];$/;"	v
output_filename	Converter/converter.c	/^char output_filename[1024];$/;"	v
output_filename	GaugeFix/gaugefix_measure.c	/^char output_filename[256] = "gaugefix.out";$/;"	v
output_filename	GaugeFix/gaugefix_unittest.c	/^char output_filename[256] = "gaugefix.out";$/;"	v
output_filename	HMC/hmc.c	/^char output_filename[256] = "out_0";$/;"	v
output_filename	HMC/hmc_forces.c	/^char output_filename[256] = "out_0";$/;"	v
output_filename	ModeNumber/mk_eigvals.c	/^char output_filename[256] = "eigval.out";$/;"	v
output_filename	ModeNumber/mk_modenumber.c	/^char output_filename[256] = "modenumber.out";$/;"	v
output_filename	PureGauge/suN.c	/^char output_filename[256] = "puregauge.out";$/;"	v
output_filename	RenormalizationFactors/measure_Z_mom.c	/^char output_filename[256] = "renormalization.out";$/;"	v
output_filename	Reweight/reweight.c	/^static char output_filename[64] = "out_reweight";$/;"	v	file:
output_filename	Scattering/IOroutines.c	/^char output_filename[256] = "meson_scattering.out";$/;"	v
output_filename	Scattering/meson_scattering.c	/^char output_filename[256] = "meson_scattering.out";$/;"	v
output_filename	Spectrum/measure_formfactor.c	/^char output_filename[256] = "mesons.out";$/;"	v
output_filename	Spectrum/measure_spectrum.c	/^char output_filename[256] = "mesons.out";$/;"	v
output_filename	Spectrum/mk_mesons.c	/^char output_filename[256] = "mesons.out";$/;"	v
output_filename	Spectrum/mk_mesons_with_z2semwall.c	/^char output_filename[256] = "mesons.out";$/;"	v
output_filename	Spectrum/mk_mesons_with_z2semwall_new.c	/^char output_filename[256] = "mesons.out";$/;"	v
output_filename	Spectrum/mk_sfcoupling.c	/^char output_filename[256] = "sfcoupling.out";$/;"	v
output_filename	Spectrum/random_cnfg.c	/^char output_filename[256] = "random_cnfg.out";$/;"	v
output_filename	Spectrum/random_spinor.c	/^char output_filename[256] = "random_spinor.out";$/;"	v
output_filename	Spectrum/trunc_mesons.c	/^char output_filename[256] = "hairpins.out";$/;"	v
output_filename	StaticPotential/mk_polyakov_loops.c	/^char output_filename[256] = "polyakov.out";$/;"	v
output_filename	StaticPotential/mk_wilsonloops.c	/^char output_filename[256] = "wilson.out";$/;"	v
output_filename	StaticPotential/tune_HYP_smearing.c	/^char output_filename[256] = "HYPsmearing.out";$/;"	v
output_filename	TestProgram/Deflate/check_deflate.c	/^char output_filename[256] = "mesons.out";$/;"	v
output_filename	TestProgram/Propagator/check_propagator.c	/^char output_filename[256] = "mesons.out";$/;"	v
output_filename	WilsonFlow/WF_measure.c	/^char output_filename[256] = "wilsonflow.out";$/;"	v
output_filename	WilsonFlow/WF_measure_adaptative.c	/^char output_filename[256] = "wilsonflow.out";$/;"	v
output_format	Converter/converter.c	/^format_type* output_format;$/;"	v
p1	Scattering/IOroutines.c	/^	char outdir[256], p1[16], p2[16];$/;"	m	struct:_input_scatt	file:
p2	Scattering/IOroutines.c	/^	char outdir[256], p1[16], p2[16];$/;"	m	struct:_input_scatt	file:
par	Include/update.h	/^  void *par; \/* parameters *\/$/;"	m	struct:_monomial_data
par	ModeNumber/modenumber.c	/^static mshift_par par;$/;"	v	file:
param	LibHR/Update/remez/alg_remez.h	/^  bigfloat *param, *roots, *poles;$/;"	m	class:AlgRemez
params	Converter/ChromaUtils/qdp-config.h	/^params_struct * params;$/;"	v
params_struct	Converter/ChromaUtils/qdp-config.h	/^}params_struct;$/;"	t	typeref:struct:__anon5
parity	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int parity;             \/* NOT_ASSIGNED ; EVEN ; ODD *\/$/;"	m	struct:_site_info	file:
parity	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int parity;         \/* NOT_ASSIGNED ; EVEN ; ODD *\/$/;"	m	struct:_block_info	file:
pars	LibHR/Observables/trunc_hairpin.c	/^static ata_qprop_pars pars;$/;"	v	file:
pars	Spectrum/trunc_mesons.c	/^  ata_qprop_pars pars;$/;"	m	struct:_input_ata_qprop	file:
parse_cnfg_filename	Converter/converter.c	/^int parse_cnfg_filename(char* filename, filename_type* fn) {$/;"	f
parse_cnfg_filename	GaugeFix/gaugefix_measure.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	GaugeFix/gaugefix_unittest.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	HMC/hmc_forces.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	ModeNumber/mk_eigvals.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	ModeNumber/mk_modenumber.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	RenormalizationFactors/measure_Z_mom.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Scattering/IOroutines.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Scattering/meson_scattering.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Spectrum/measure_formfactor.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Spectrum/measure_spectrum.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Spectrum/mk_mesons.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Spectrum/mk_mesons_with_z2semwall.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Spectrum/mk_mesons_with_z2semwall_new.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Spectrum/mk_sfcoupling.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	Spectrum/trunc_mesons.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	StaticPotential/mk_polyakov_loops.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	StaticPotential/mk_wilsonloops.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	StaticPotential/tune_HYP_smearing.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	TestProgram/Deflate/check_deflate.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	TestProgram/Propagator/check_propagator.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	WilsonFlow/WF_measure.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_cnfg_filename	WilsonFlow/WF_measure_adaptative.c	/^int parse_cnfg_filename(char* filename, filename_t* fn) {$/;"	f
parse_gstart	HMC/hmc_utils.c	/^static int parse_gstart(hmc_flow *rf)$/;"	f	file:
parse_gstart	PureGauge/suN_utils.c	/^static int parse_gstart(pg_flow *gf) {$/;"	f	file:
parse_lastconf	HMC/hmc_utils.c	/^static int parse_lastconf(hmc_flow *rf) {$/;"	f	file:
parse_lastconf	PureGauge/suN_utils.c	/^static int parse_lastconf(pg_flow *gf) {$/;"	f	file:
parse_lines	LibHR/IO/read_action.c	/^static void parse_lines(section *sec, char *lines)$/;"	f	file:
partial_frac_coef	LibHR/Update/remez/Zolotarev/zolotarev.c	/^void partial_frac_coef(int n, real *a, real*b) {$/;"	f
path	LibHR/Observables/wilsonloops.c	/^  int* path;$/;"	m	struct:__anon54	file:
path	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^  int* path;$/;"	m	struct:__anon108	file:
path	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^  int* path;$/;"	m	struct:__anon109	file:
path	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^  int* path;$/;"	m	struct:__anon110	file:
path	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^  int* path;$/;"	m	struct:__anon111	file:
pconstant	Make/Utils/autosun/polynomial.h	/^	pconstant(const complex& z) : polynomial()$/;"	f	class:pconstant
pconstant	Make/Utils/autosun/polynomial.h	/^	pconstant(const double z) : polynomial()$/;"	f	class:pconstant
pconstant	Make/Utils/autosun/polynomial.h	/^class pconstant : public polynomial$/;"	c
periodic_q	LibHR/Geometry/test_geometry_mpi.c	/^static int periodic_q[4];$/;"	v	file:
perm	LibHR/Observables/wilsonloops.c	/^  int** perm;$/;"	m	struct:__anon54	file:
perm	TestProgram/WilsonLoops/check_wilsonloops_4.c	/^  int** perm;$/;"	m	struct:__anon108	file:
perm	TestProgram/WilsonLoops/check_wilsonloops_5.c	/^  int** perm;$/;"	m	struct:__anon109	file:
perm	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^  int** perm;$/;"	m	struct:__anon110	file:
perm	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^  int** perm;$/;"	m	struct:__anon111	file:
pf	Include/update.h	/^  spinor_field *pf; \/* pseudofermion field *\/$/;"	m	struct:_mon_hasenbusch_par
pf	Include/update.h	/^  spinor_field *pf; \/* pseudofermion field *\/$/;"	m	struct:_mon_hasenbusch_tm_par
pf	Include/update.h	/^  spinor_field *pf; \/* pseudofermion field *\/$/;"	m	struct:_mon_hmc_par
pf	Include/update.h	/^  spinor_field *pf; \/* pseudofermion field *\/$/;"	m	struct:_mon_rhmc_par
pf	Include/update.h	/^  spinor_field *pf; \/* pseudofermion field *\/$/;"	m	struct:_mon_tm_par
pf	Include/update.h	/^  spinor_field *pf;$/;"	m	struct:__anon38
pf	Include/update.h	/^  spinor_field *pf;$/;"	m	struct:__anon39
pf_local_action	LibHR/Update/local_action.c	/^void pf_local_action(scalar_field *loc_action, spinor_field *pf) {$/;"	f
pfe	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::pfe(bigfloat *res, bigfloat *poles, bigfloat norm) {$/;"	f	class:AlgRemez
pfrac_eval	LibHR/Update/remez/Zolotarev/zolotarev.c	/^real pfrac_eval(real x, int n, real *a, real *b) {$/;"	f
pg_add_local_action	LibHR/Update/mon_pg.c	/^void pg_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
pg_correct_la_pf	LibHR/Update/mon_pg.c	/^void pg_correct_la_pf(const struct _monomial *m) {$/;"	f
pg_correct_pf	LibHR/Update/mon_pg.c	/^void pg_correct_pf(const struct _monomial *m) {$/;"	f
pg_create	LibHR/Update/mon_pg.c	/^struct _monomial* pg_create(const monomial_data *data) {$/;"	f
pg_flow	PureGauge/suN_utils.h	/^} pg_flow;$/;"	t	typeref:struct:_pg_flow
pg_free	LibHR/Update/mon_pg.c	/^void pg_free(struct _monomial *m) {$/;"	f
pg_gaussian_pf	LibHR/Update/mon_pg.c	/^void pg_gaussian_pf(const struct _monomial *m) {$/;"	f
pg_init_traj	LibHR/Update/mon_pg.c	/^void pg_init_traj(const struct _monomial *m) {$/;"	f
pg_pseudofermion	LibHR/Update/mon_pg.c	/^const spinor_field* pg_pseudofermion(const struct _monomial *m) {$/;"	f
pg_v	PureGauge/suN_utils.h	/^  input_pg *pg_v;$/;"	m	struct:_pg_flow
pg_var	PureGauge/suN_utils.c	/^input_pg pg_var = init_input_pg(pg_var);$/;"	v
plain_eff_mass	Analysis/Mesons/effective_mass.cpp	/^double plain_eff_mass(int a, double k) {$/;"	f
plaq	LibHR/Observables/avr_plaquette.c	/^double plaq(int ix,int mu,int nu)$/;"	f
plaquette	Converter/ChromaUtils/plaquette.c	/^plaquette(QDP_ColorMatrix *link[])$/;"	f
pmatrix	Make/Utils/autosun/matrix.h	/^	pmatrix() : sparsematrix<polynomial>() {}$/;"	f	class:pmatrix
pmatrix	Make/Utils/autosun/matrix.h	/^	pmatrix(int N) : sparsematrix<polynomial>(N) {}$/;"	f	class:pmatrix
pmatrix	Make/Utils/autosun/matrix.h	/^	pmatrix(smatrix& mat) : sparsematrix<polynomial>(mat.size)$/;"	f	class:pmatrix
pmatrix	Make/Utils/autosun/matrix.h	/^class pmatrix : public sparsematrix<polynomial>$/;"	c
point_src	Spectrum/measure_formfactor.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon81	file:
point_src	TestProgram/Deflate/check_deflate.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon102	file:
point_src	TestProgram/Propagator/check_propagator.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon105	file:
poles	LibHR/Update/remez/alg_remez.h	/^  bigfloat *param, *roots, *poles;$/;"	m	class:AlgRemez
polyDiff	LibHR/Update/remez/alg_remez.C	/^bigfloat AlgRemez::polyDiff(bigfloat x, bigfloat *poly, long size) {$/;"	f	class:AlgRemez
polyEval	LibHR/Update/remez/alg_remez.C	/^bigfloat AlgRemez::polyEval(bigfloat x, bigfloat *poly, long size) {$/;"	f	class:AlgRemez
poly_var	HMC/hmc.c	/^input_polyakov poly_var = init_input_polyakov(poly_var);$/;"	v
poly_var	PureGauge/suN.c	/^input_polyakov poly_var = init_input_polyakov(poly_var);$/;"	v
polyakov	LibHR/Observables/polyakov.c	/^void polyakov() {$/;"	f
polyakov_test	TestProgram/WilsonLoops/check_wilsonloops_3.c	/^void polyakov_test(suNg* poly, suNg_field* gf) {$/;"	f
polynomial	Make/Utils/autosun/polynomial.h	/^	polynomial() : orderedlist<rmonomial,complex>() {}$/;"	f	class:polynomial
polynomial	Make/Utils/autosun/polynomial.h	/^	polynomial(const rmonomial& index, const complex& value) : orderedlist<rmonomial,complex>(index, value) {}$/;"	f	class:polynomial
polynomial	Make/Utils/autosun/polynomial.h	/^class polynomial : public orderedlist<rmonomial,complex>$/;"	c
pow_bf	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat pow_bf(const bigfloat& a, bigfloat &power) {$/;"	f	class:bigfloat
pow_bf	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat pow_bf(const bigfloat& a, long power) {$/;"	f	class:bigfloat
power	TestProgram/Inverters/check_inverters_4.c	/^static double power(int nit,spinor_operator Op,spinor_field *ws)$/;"	f	file:
power_den	LibHR/Update/remez/alg_remez.h	/^  unsigned long power_den;$/;"	m	class:AlgRemez
power_num	LibHR/Update/remez/alg_remez.h	/^  unsigned long power_num; $/;"	m	class:AlgRemez
ppk	TestProgram/SpinorField/check_spinorfield_1.c	/^static spinor_field *ppk[5];$/;"	v	file:
pr	Analysis/Mesons/ranlxs.cpp	/^static int pr,ir,jr,is,is_old,init=0;$/;"	v	file:
pr	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
pr	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
prec	LibHR/Update/remez/alg_remez.h	/^  long prec;$/;"	m	class:AlgRemez
precision	Disconnected/compute_loops.c	/^  double precision;$/;"	m	struct:_input_loops	file:
precision	HMC/hmc.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
precision	RenormalizationFactors/measure_Z_mom.c	/^  double precision;$/;"	m	struct:_input_renormalization	file:
precision	Reweight/reweight.h	/^	double precision;$/;"	m	struct:__anon76
precision	Scattering/IOroutines.c	/^	double precision;$/;"	m	struct:_input_scatt	file:
precision	Scattering/meson_scattering.c	/^	double precision;$/;"	m	struct:_input_scatt	file:
precision	Spectrum/measure_formfactor.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
precision	Spectrum/measure_spectrum.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
precision	Spectrum/mk_mesons.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
precision	Spectrum/mk_mesons_with_z2semwall.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
precision	Spectrum/mk_mesons_with_z2semwall_new.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
precision	TestProgram/Deflate/check_deflate.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
precision	TestProgram/Propagator/check_propagator.c	/^  double precision;$/;"	m	struct:_input_mesons	file:
primary_ctrl	Analysis/Mesons/bs_ctrl.cpp	/^primary_ctrl::primary_ctrl(const char* n, int nc){$/;"	f	class:primary_ctrl
primary_ctrl	Analysis/Mesons/bs_ctrl.h	/^class primary_ctrl : public eval_ctrl {$/;"	c
print	Analysis/Mesons/bs_ctrl.cpp	/^void derived_ctrl::print() {$/;"	f	class:derived_ctrl
print	Analysis/Mesons/bs_ctrl.cpp	/^void primary_ctrl::print() {$/;"	f	class:primary_ctrl
print	Analysis/Mesons/bs_ctrl.cpp	/^void ratio_ctrl::print() {$/;"	f	class:ratio_ctrl
print	Make/Utils/autosun/list.h	/^	void print() const$/;"	f	class:orderedlist
printML	TestProgram/Utils/check_suNg_op.c	/^void printML(suNg* a){$/;"	f
print_block_info	LibHR/Geometry/test_geometry_mpi.c	/^static void print_block_info(block_info *b) {$/;"	f	file:
print_cmdline_info	Converter/converter.c	/^void print_cmdline_info() {$/;"	f
print_cmplx	TestProgram/Utils/check_suNg_op.c	/^void print_cmplx(complex c){$/;"	f
print_compiling_info	HMC/cinfo.c	/^static void print_compiling_info() {$/;"	f	file:
print_compiling_info	Spectrum/cinfo.c	/^static void print_compiling_info() {$/;"	f	file:
print_coordinates	LibHR/Geometry/test_geometry_mpi.c	/^static void print_coordinates(site_info* s) {$/;"	f	file:
print_copies_info	LibHR/Geometry/test_geometry_mpi.c	/^static void print_copies_info(site_info* s) {$/;"	f	file:
print_corr	LibHR/Observables/measure_ff.c	/^static void print_corr(int lt,int conf, int nm, double* mass, char* label, int n_mom){$/;"	f	file:
print_corr	LibHR/Observables/measure_mesons.c	/^static void print_corr(meson_observable* mo,int lt,int conf, int nm, double* mass, char* label, int n_mom){$/;"	f	file:
print_corr_core	LibHR/Observables/measure_ff.c	/^static void print_corr_core(int channel,int lt,int conf, int nm, double* mass, char* label, int n_mom){$/;"	f	file:
print_corr_core	LibHR/Observables/measure_mesons.c	/^static void print_corr_core(meson_observable* mo,int lt,int conf, int nm, double* mass, char* label, int n_mom){$/;"	f	file:
print_formfactor	LibHR/Observables/measure_ff.c	/^void print_formfactor(int conf, int nm, double* mass, int n_mom, char* label, int tf){$/;"	f
print_formfactor_ext	LibHR/Observables/measure_ff.c	/^void print_formfactor_ext(int conf, int nm, double* mass, int n_mom, char* label, int tf){$/;"	f
print_full_site_info	LibHR/Geometry/test_geometry_mpi.c	/^static void print_full_site_info(site_info* s) {$/;"	f	file:
print_geometric_info	LibHR/Geometry/test_geometry_mpi.c	/^static void print_geometric_info(site_info* s) {$/;"	f	file:
print_global_coordinates	LibHR/Geometry/test_geometry_mpi.c	/^static void print_global_coordinates(site_info* s) {$/;"	f	file:
print_mat	TestProgram/TripletMesons/check_triplets_2.c	/^void print_mat(complex mat[4][4], const char name[]) {$/;"	f
print_mesons	LibHR/Observables/measure_mesons.c	/^void print_mesons(meson_observable* mo,double norm, int conf, int nm, double* mass, int lt, int n_mom, char* label){$/;"	f
print_parity	LibHR/Geometry/test_geometry_mpi.c	/^static void print_parity(site_info* s) {$/;"	f	file:
print_prop	TestProgram/Propagator/check_propagator.c	/^static void print_prop(suNf_propagator S){$/;"	f	file:
print_renormalization	LibHR/Observables/measure_renormalization.c	/^void print_renormalization(int conf, int nm, double* mass, char* label, int pt_in, int px_in, int py_in, int pz_in, int pt_out, int px_out, int py_out, int pz_out){$/;"	f
print_renormalization_core	LibHR/Observables/measure_renormalization.c	/^static void print_renormalization_core(int channel,int conf, int nm, double* mass, char* label, int pt_in, int px_in, int py_in, int pz_in, int pt_out, int px_out, int py_out, int pz_out ){$/;"	f	file:
print_short_block_info	LibHR/Geometry/test_geometry_mpi.c	/^static void print_short_block_info(block_info *b) {$/;"	f	file:
print_utility	Analysis/Mesons/bs_ctrl.cpp	/^ostream& derived_ctrl::print_utility(ostream& os) {$/;"	f	class:derived_ctrl
print_utility	Analysis/Mesons/bs_ctrl.cpp	/^ostream& primary_ctrl::print_utility(ostream& os) {$/;"	f	class:primary_ctrl
print_utility	Analysis/Mesons/bs_ctrl.cpp	/^ostream& ratio_ctrl::print_utility(ostream& os) {$/;"	f	class:ratio_ctrl
print_wdmatrix	LibHR/Geometry/print_wdmatrix.c	/^void print_wdmatrix(char *filename)$/;"	f
printaslist	Make/Utils/autosun/list.h	/^	void printaslist() const$/;"	f	class:orderedlist
printf0	Converter/ChromaUtils/qdp-config.h	/^#define printf0 /;"	d
printfile	Make/Utils/autosun/print.h	/^void printfile(ostream& out, istream& tmpl)$/;"	f
prm	LibHR/Random/ranlxd.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
prm	LibHR/Random/ranlxs.c	/^static int init=0,pr,prm,ir,jr,is,is_old,next[96];$/;"	v	file:
proc_dn	LibHR/Geometry/geometry_init.c	/^int proc_dn(int id, int dir)$/;"	f
proc_up	LibHR/Geometry/geometry_init.c	/^int proc_up(int id, int dir) $/;"	f
project	LibHR/Inverters/eva.c	/^static void project(spinor_field *pk,spinor_field *pl)$/;"	f	file:
project	TestProgram/SpinorField/check_spinorfield_1.c	/^static void project(spinor_field *pk,spinor_field *pl)$/;"	f	file:
project_cooling_to_suNg	LibHR/Utils/suN_utils.c	/^void project_cooling_to_suNg(suNg* g_out, suNg* g_in, int cooling)$/;"	f
project_gauge_field	LibHR/Update/update_hb.c	/^void project_gauge_field(void)$/;"	f
project_on_higher_evs	LibHR/Observables/trunc_hairpin.c	/^static void project_on_higher_evs(spinor_field *sp, int m) {$/;"	f	file:
project_on_suN	LibHR/Utils/HYP_smearing.c	/^static void project_on_suN(suNg *A) {$/;"	f	file:
project_to_suNg	LibHR/Utils/suN_utils.c	/^void project_to_suNg(suNg *u)$/;"	f
project_to_suNg_flt	LibHR/Utils/suN_utils.c	/^void project_to_suNg_flt(suNg_flt *u)$/;"	f
project_to_suNg_real	LibHR/Utils/suN_utils.c	/^int project_to_suNg_real(suNg *out, suNg *in){$/;"	f
prop_cuts	Analysis/Mesons/bs_ctrl.cpp	/^void derived_ctrl::prop_cuts() {$/;"	f	class:derived_ctrl
prop_cuts	Analysis/Mesons/bs_ctrl.h	/^  virtual void prop_cuts() {};$/;"	f	class:eval_ctrl
prop_dep	Analysis/Mesons/bs_ctrl.cpp	/^void derived_ctrl::prop_dep() {$/;"	f	class:derived_ctrl
prop_dep	Analysis/Mesons/bs_ctrl.cpp	/^void primary_ctrl::prop_dep() {$/;"	f	class:primary_ctrl
prop_dep	Analysis/Mesons/bs_ctrl.cpp	/^void ratio_ctrl::prop_dep() {$/;"	f	class:ratio_ctrl
prop_filename	Scattering/IOroutines.c	/^char prop_filename[256]="";$/;"	v
prop_filename	Scattering/meson_scattering.c	/^char prop_filename[256]="";$/;"	v
propagator_mul_left_right	LibHR/Observables/measure_baryons.c	/^void propagator_mul_left_right(suNf_propagator *out, suNf_propagator *in, int mu, int nu)$/;"	f
pseudofermion	Include/update.h	/^  const spinor_field *(*pseudofermion)(const struct _monomial *m); \/* returns ps field pointer *\/$/;"	m	struct:_monomial
psi	LibHR/Inverters/eva.c	/^static suNf_spinor *psi=NULL;$/;"	v	file:
psi	LibHR/Observables/z2semwall.c	/^static spinor_field *psi;$/;"	v	file:
psi	LibHR/Observables/z2semwall_new.c	/^static spinor_field *psi;$/;"	v	file:
psi	TestProgram/SpinorField/check_spinorfield_1.c	/^static suNf_spinor *psi;$/;"	v	file:
psi0	LibHR/Observables/z2semwall.c	/^static spinor_field *psi0;$/;"	v	file:
psi0	LibHR/Observables/z2semwall_new.c	/^static spinor_field *psi0;$/;"	v	file:
pt_in	RenormalizationFactors/measure_Z_mom.c	/^  int pt_in;$/;"	m	struct:_input_renormalization	file:
pt_out	RenormalizationFactors/measure_Z_mom.c	/^  int pt_out;$/;"	m	struct:_input_renormalization	file:
pta_qprop_MINRES	LibHR/Observables/pta_qprop.c	/^void pta_qprop_MINRES(int g0[4], spinor_field **pta_qprop, int nm, double *mass, double acc) {$/;"	f
pta_qprop_QMR	LibHR/Observables/pta_qprop.c	/^void pta_qprop_QMR(int g0[4], spinor_field **pta_qprop, int nm, double *mass, double acc) {$/;"	f
pta_qprop_QMR_eo	LibHR/Observables/pta_qprop.c	/^void pta_qprop_QMR_eo(int g0[4], spinor_field **pta_qprop, int nm, double *mass, double acc) {$/;"	f
ptr	Include/input_par.h	/^  void *ptr;$/;"	m	struct:_input_record_t
pu_gauge	Include/global.h	/^#define pu_gauge(/;"	d
pu_gauge_f	Include/global.h	/^#define pu_gauge_f(/;"	d
pu_gauge_f_flt	Include/global.h	/^#define pu_gauge_f_flt(/;"	d
pu_gauge_flt	Include/global.h	/^#define pu_gauge_flt(/;"	d
purge	Analysis/Mesons/bs_type.h	/^  void purge() { for(int i=0;i<length;i++) d[i].clear(); }$/;"	f	class:Corr_t
purge_b2	Analysis/Mesons/bs_ctrl.cpp	/^void derived_ctrl::purge_b2() {$/;"	f	class:derived_ctrl
purge_b2	Analysis/Mesons/bs_ctrl.cpp	/^void primary_ctrl::purge_b2() {$/;"	f	class:primary_ctrl
purge_b2	Analysis/Mesons/bs_ctrl.h	/^  virtual void purge_b2() {};$/;"	f	class:eval_ctrl
pvector	Make/Utils/autosun/matrix.h	/^	pvector() : sparsevector<polynomial>() {}$/;"	f	class:pvector
pvector	Make/Utils/autosun/matrix.h	/^	pvector(int N) : sparsevector<polynomial>(N) {}$/;"	f	class:pvector
pvector	Make/Utils/autosun/matrix.h	/^	pvector(svector& vec) : sparsevector<polynomial>(vec.size)$/;"	f	class:pvector
pvector	Make/Utils/autosun/matrix.h	/^class pvector : public sparsevector<polynomial>$/;"	c
px_in	RenormalizationFactors/measure_Z_mom.c	/^  int px_in;$/;"	m	struct:_input_renormalization	file:
px_out	RenormalizationFactors/measure_Z_mom.c	/^  int px_out;$/;"	m	struct:_input_renormalization	file:
py_in	RenormalizationFactors/measure_Z_mom.c	/^  int py_in;$/;"	m	struct:_input_renormalization	file:
py_out	RenormalizationFactors/measure_Z_mom.c	/^  int py_out;$/;"	m	struct:_input_renormalization	file:
pythag	LibHR/Utils/diag_hmat.c	/^double pythag(double a, double b){$/;"	f
pz_in	RenormalizationFactors/measure_Z_mom.c	/^  int pz_in;$/;"	m	struct:_input_renormalization	file:
pz_out	RenormalizationFactors/measure_Z_mom.c	/^  int pz_out;$/;"	m	struct:_input_renormalization	file:
r	LibHR/Update/random_su2.c	/^static double r[NRAN],u[NRAN],v[NRAN],y[NRAN];$/;"	v	file:
r_APP	LibHR/Update/mon_rhmc.c	/^static rational_app r_APP = {0};  \/* used for computing HB and MT for RHMC monomials *\/$/;"	v	file:
r_app_alloc	LibHR/Update/rational_functions.c	/^void r_app_alloc(rational_app *app) {$/;"	f
r_app_free	LibHR/Update/rational_functions.c	/^void r_app_free(rational_app *app) {$/;"	f
r_app_realloc	LibHR/Update/rational_functions.c	/^void r_app_realloc(rational_app *app){$/;"	f
r_app_rescale	LibHR/Update/rational_functions.c	/^void r_app_rescale(rational_app *app, double k) {$/;"	f
r_app_rp2pfe	LibHR/Update/rational_functions.c	/^static void r_app_rp2pfe(rational_app *app) {$/;"	f	file:
r_app_rp2pfe_inv	LibHR/Update/rational_functions.c	/^static void r_app_rp2pfe_inv(rational_app *app) {$/;"	f	file:
r_app_set	LibHR/Update/rational_functions.c	/^void r_app_set(rational_app *app, double min, double max) {$/;"	f
random_g	TestProgram/DiracOperator/check_diracoperator_1.c	/^static void random_g(void)$/;"	f	file:
random_g	TestProgram/DiracOperator/check_diracoperator_5.c	/^static void random_g(void)$/;"	f	file:
random_g	TestProgram/PureGauge/check_puregauge_2.c	/^static void random_g(suNg_field* g)$/;"	f	file:
random_g	TestProgram/RotatedSF/check_rotatedsf_1.c	/^static void random_g(void)$/;"	f	file:
random_g	TestProgram/RotatedSF/check_rotatedsf_2.c	/^static void random_g(void)$/;"	f	file:
random_g	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^static void random_g(suNg_field* g) {$/;"	f	file:
random_g	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^static void random_g(suNg_field* g) {$/;"	f	file:
random_gauge_transform	GaugeFix/gaugefix.c	/^void random_gauge_transform(suNg_field *gauge){$/;"	f
random_su2	LibHR/Update/random_su2.c	/^void random_su2(double rho,double s[])$/;"	f
random_suNg	LibHR/Random/random_suNg.c	/^void random_suNg(suNg *u) {$/;"	f
random_suNg_unit_vector	LibHR/Random/random_suNg.c	/^void random_suNg_unit_vector(suNg_vector *v)$/;"	f
random_tau	LibHR/Observables/sources.c	/^static int random_tau(){$/;"	f	file:
random_u	LibHR/Random/random_fields.c	/^void random_u(suNg_field *gf)$/;"	f
ranlux_step	Analysis/Mesons/ranlxs.cpp	/^  extern inline void ranlux_step(double &x1, double &x2, const int i1, const int i2, const int i3)$/;"	f	namespace:__anon4
ranlxd	LibHR/Random/ranlxd.c	/^void ranlxd(double r[],int n)$/;"	f
ranlxs	Analysis/Mesons/ranlxs.cpp	/^void ranlxs(float r[],int n)$/;"	f
ranlxs	LibHR/Random/ranlxs.c	/^void ranlxs(float r[],int n)$/;"	f
ranxld_filename	PureGauge/suN.c	/^char ranxld_filename[256] = "";$/;"	v
ranz2	LibHR/Random/ran_utils.c	/^void ranz2(double r[],int n)$/;"	f
ratio	Include/update.h	/^  rational_app *ratio;$/;"	m	struct:__anon38
ratio	Include/update.h	/^  rational_app ratio;$/;"	m	struct:_mon_rhmc_par
ratio_ctrl	Analysis/Mesons/bs_ctrl.cpp	/^ratio_ctrl::ratio_ctrl(const char* n){$/;"	f	class:ratio_ctrl
ratio_ctrl	Analysis/Mesons/bs_ctrl.h	/^class ratio_ctrl : public eval_ctrl {$/;"	c
rational_app	Include/rational_functions.h	/^} rational_app;$/;"	t	typeref:struct:_rational_app
rational_func	LibHR/Update/rational_functions.c	/^void rational_func(rational_app *coef, spinor_operator Q, spinor_field *out, spinor_field *in) {$/;"	f
rbuf_from_proc	Include/geometry.h	/^  int *rbuf_from_proc, *rbuf_start;$/;"	m	struct:_geometry_descriptor
rbuf_len	Include/geometry.h	/^  int *rbuf_len, *sbuf_len;$/;"	m	struct:_geometry_descriptor
rbuf_start	Include/geometry.h	/^  int *rbuf_from_proc, *rbuf_start;$/;"	m	struct:_geometry_descriptor
re	Include/complex.h	/^   double re,im;$/;"	m	struct:__anon13
re	Include/complex.h	/^   float re,im;$/;"	m	struct:__anon14
re	Make/Utils/autosun/complex.h	/^	FLOATING re, im;$/;"	m	class:complex
re_ev	TestProgram/TripletMesons/check_triplets_1.c	/^double re_ev(double k[4]) {$/;"	f
read	Converter/converter.c	/^  void (*read)(char*);$/;"	m	struct:_format_type	file:
read	Disconnected/compute_loops.c	/^  input_record_t read[6];$/;"	m	struct:_input_loops	file:
read	HMC/hmc.c	/^  input_record_t read[2];$/;"	m	struct:_input_polyakov	file:
read	HMC/hmc.c	/^  input_record_t read[5];$/;"	m	struct:_input_mesons	file:
read	HMC/hmc.c	/^  input_record_t read[9];$/;"	m	struct:_input_eigval	file:
read	HMC/hmc_utils.h	/^  input_record_t read[10];$/;"	m	struct:_input_hmc
read	HMC/hmc_utils.h	/^  input_record_t read[7];$/;"	m	struct:_hmc_flow
read	Include/input_par.h	/^    input_record_t read[5];$/;"	m	struct:_input_rlx
read	Include/input_par.h	/^  input_record_t read[10];$/;"	m	struct:_input_glb
read	Include/input_par.h	/^  input_record_t read[4];$/;"	m	struct:_input_logger
read	ModeNumber/mk_eigvals.c	/^  input_record_t read[8];$/;"	m	struct:_input_eigval	file:
read	ModeNumber/mk_modenumber.c	/^  input_record_t read[6];$/;"	m	struct:_input_nu	file:
read	PureGauge/suN.c	/^  input_record_t read[2];$/;"	m	struct:_input_polyakov	file:
read	PureGauge/suN_utils.h	/^  input_record_t read[7];$/;"	m	struct:_input_pg
read	PureGauge/suN_utils.h	/^  input_record_t read[8];$/;"	m	struct:_pg_flow
read	RenormalizationFactors/measure_Z_mom.c	/^  input_record_t read[14];$/;"	m	struct:_input_renormalization	file:
read	Reweight/reweight.h	/^	input_record_t read[14];$/;"	m	struct:__anon76
read	Scattering/IOroutines.c	/^	input_record_t read[8];$/;"	m	struct:_input_scatt	file:
read	Scattering/meson_scattering.c	/^	input_record_t read[5];$/;"	m	struct:_input_scatt	file:
read	Spectrum/measure_formfactor.c	/^  input_record_t read[11];$/;"	m	struct:_input_mesons	file:
read	Spectrum/measure_spectrum.c	/^  input_record_t read[28];$/;"	m	struct:_input_mesons	file:
read	Spectrum/measure_spectrum.c	/^  input_record_t read[2];$/;"	m	struct:_input_ff	file:
read	Spectrum/mk_mesons.c	/^  input_record_t read[4];$/;"	m	struct:_input_mesons	file:
read	Spectrum/mk_mesons_with_z2semwall.c	/^  input_record_t read[4];$/;"	m	struct:_input_mesons	file:
read	Spectrum/mk_mesons_with_z2semwall_new.c	/^  input_record_t read[4];$/;"	m	struct:_input_mesons	file:
read	Spectrum/mk_sfcoupling.c	/^  input_record_t read[2];$/;"	m	struct:_input_sfc	file:
read	Spectrum/mk_sfcoupling.c	/^  input_record_t read[7];$/;"	m	struct:_input_bcpar	file:
read	Spectrum/trunc_mesons.c	/^  input_record_t read[14];$/;"	m	struct:_input_ata_qprop	file:
read	StaticPotential/mk_wilsonloops.c	/^  input_record_t read[41];$/;"	m	struct:_input_wilson	file:
read	StaticPotential/mk_wilsonloops.c	/^  input_record_t read[4];$/;"	m	struct:_input_HYP	file:
read	TestProgram/Deflate/check_deflate.c	/^  input_record_t read[4];$/;"	m	struct:_input_mesons	file:
read	TestProgram/Deflate/check_deflate.c	/^  input_record_t read[9];$/;"	m	struct:_input_eigval	file:
read	TestProgram/Propagator/check_propagator.c	/^  input_record_t read[8];$/;"	m	struct:_input_mesons	file:
read	TestProgram/TripletMesons/check_triplets_1.c	/^  input_record_t read[2];$/;"	m	struct:_input_mesons	file:
read	WilsonFlow/WF_measure.c	/^  input_record_t read[3];$/;"	m	struct:_input_SF	file:
read	WilsonFlow/WF_measure.c	/^  input_record_t read[4];$/;"	m	struct:_input_WF	file:
read	WilsonFlow/WF_measure_adaptative.c	/^  input_record_t read[3];$/;"	m	struct:_input_SF	file:
read	WilsonFlow/WF_measure_adaptative.c	/^  input_record_t read[6];$/;"	m	struct:_input_WF	file:
read_action	LibHR/IO/read_action.c	/^void read_action(char *filename, integrator_par **ip_ptr)$/;"	f
read_cmdline	Analysis/Mesons/bs_reader.cpp	/^int read_cmdline(int argc, char*argv[]){$/;"	f
read_cmdline	Converter/ChromaUtils/main.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Converter/converter.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	GaugeFix/gaugefix_measure.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	GaugeFix/gaugefix_unittest.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	HMC/hmc.c	/^static void read_cmdline(int argc, char* argv[]) {$/;"	f	file:
read_cmdline	HMC/hmc_forces.c	/^static void read_cmdline(int argc, char* argv[]) {$/;"	f	file:
read_cmdline	ModeNumber/mk_eigvals.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	ModeNumber/mk_modenumber.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	PureGauge/suN.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	RenormalizationFactors/measure_Z_mom.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Reweight/reweight.c	/^void read_cmdline(int argc, char *argv[])$/;"	f
read_cmdline	Scattering/IOroutines.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Scattering/meson_scattering.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/measure_formfactor.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/measure_spectrum.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/mk_mesons.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/mk_mesons_with_z2semwall.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/mk_mesons_with_z2semwall_new.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/mk_sfcoupling.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/random_cnfg.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	Spectrum/random_spinor.c	/^void read_cmdline(int argc, char* argv[])$/;"	f
read_cmdline	Spectrum/trunc_mesons.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	StaticPotential/mk_polyakov_loops.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	StaticPotential/mk_wilsonloops.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	StaticPotential/tune_HYP_smearing.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	TestProgram/Deflate/check_deflate.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	TestProgram/Propagator/check_propagator.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	WilsonFlow/WF_measure.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cmdline	WilsonFlow/WF_measure_adaptative.c	/^void read_cmdline(int argc, char* argv[]) {$/;"	f
read_cut	Analysis/Mesons/bs_reader.cpp	/^void read_cut(const char *cutFile)$/;"	f
read_gauge	Converter/ChromaUtils/read-gauge.c	/^int read_gauge(QDP_ColorMatrix *link[], char *name)$/;"	f
read_gauge_field	LibHR/IO/archive.c	/^void read_gauge_field(char filename[]){$/;"	f
read_gauge_field_ascii	Converter/archive_ascii.c	/^void read_gauge_field_ascii(char filename[]) $/;"	f
read_gauge_field_eolexi_BE	Converter/archive_eolexi.c	/^void read_gauge_field_eolexi_BE(char filename[]) $/;"	f
read_gauge_field_eolexi_LE	Converter/archive_eolexi.c	/^void read_gauge_field_eolexi_LE(char filename[]) $/;"	f
read_gauge_field_fortran	Converter/archive_fortran.c	/^void read_gauge_field_fortran(char filename[]) $/;"	f
read_gauge_field_matrix	LibHR/IO/archive.c	/^void read_gauge_field_matrix(char filename[]) $/;"	f
read_gauge_field_milc	Converter/archive_milc.c	/^void read_gauge_field_milc(char filename[]) $/;"	f
read_gauge_field_milc_no3row	Converter/archive_milc.c	/^void read_gauge_field_milc_no3row(char filename[]) $/;"	f
read_gauge_field_mpieo_BE	Converter/archive_more_mpieo.c	/^void read_gauge_field_mpieo_BE(char filename[]) $/;"	f
read_gauge_field_mpieo_LE	Converter/archive_more_mpieo.c	/^void read_gauge_field_mpieo_LE(char filename[]) $/;"	f
read_gauge_field_nocheck	LibHR/IO/archive_nocheck.c	/^void read_gauge_field_nocheck(char filename[]) $/;"	f
read_gauge_field_su2	LibHR/IO/archive_su2quat.c	/^void read_gauge_field_su2(char filename[])$/;"	f
read_gauge_field_su2q	LibHR/IO/archive_su2quat.c	/^void read_gauge_field_su2q(char filename[])$/;"	f
read_input	Analysis/Mesons/bs_reader.cpp	/^void read_input(const char * inputFile){  $/;"	f
read_input	LibHR/IO/read_input.c	/^void read_input(input_record_t irec[], char *filename) {$/;"	f
read_ranlxd_state	LibHR/IO/archive.c	/^void read_ranlxd_state(char filename[]) $/;"	f
read_spinor_field	LibHR/IO/archive_spinors.c	/^void read_spinor_field(char filename[], spinor_field *sp) $/;"	f
read_spinor_field_ascii	LibHR/IO/archive_spinors_sint.c	/^void read_spinor_field_ascii(char filename[],spinor_field * sf) $/;"	f
read_tag	Converter/ChromaUtils/xml_utils.c	/^void read_tag(char* from, char* to, char * tag)$/;"	f
real	LibHR/Update/remez/Zolotarev/zolotarev.c	/^typedef double real;$/;"	t	file:
real	Make/Utils/autosun/complex.h	/^	FLOATING real() { return re; }$/;"	f	class:complex
real	Make/Utils/autosun/polynomial.h	/^	void real()$/;"	f	class:polynomial
receiver	LibHR/Geometry/test_geometry_mpi.c	/^  struct _block_info* receiver;    \/* communication receiver *\/$/;"	m	struct:_block_info	typeref:struct:_block_info::_block_info	file:
record	LibHR/IO/logger.c	/^} record;$/;"	t	typeref:struct:_record	file:
rect_1x2	LibHR/Observables/avr_rect.c	/^double rect_1x2(int ix,int mu,int nu)$/;"	f
rect_staples_1x2	LibHR/Update/rect_staples.c	/^void rect_staples_1x2(int ix,int mu,suNg *v)$/;"	f
reduce_fraction	LibHR/Update/mon_rhmc.c	/^static void reduce_fraction(int *a, int *b){$/;"	f	file:
rel_error	Include/rational_functions.h	/^  double rel_error;$/;"	m	struct:_rational_app
remove	LibHR/Memory/amalloc.c	/^void remove(void *addr) {$/;"	f
remove	Make/Utils/autosun/list.h	/^	void remove(const INDEX& index)$/;"	f	class:orderedlist
repr	Converter/ChromaUtils/main.c	/^  char repr[256]; int repr_f;$/;"	m	struct:_filename_type	file:
repr	Converter/converter.c	/^  char repr[256]; int repr_f;$/;"	m	struct:_filename_type	file:
repr_f	Converter/ChromaUtils/main.c	/^  char repr[256]; int repr_f;$/;"	m	struct:_filename_type	file:
repr_f	Converter/converter.c	/^  char repr[256]; int repr_f;$/;"	m	struct:_filename_type	file:
repr_name	HMC/hmc_forces.c	/^#define repr_name /;"	d	file:
repr_name	HMC/hmc_forces.c	/^#undef repr_name$/;"	d	file:
repr_name	HMC/hmc_utils.c	/^#define repr_name /;"	d	file:
repr_name	ModeNumber/mk_eigvals.c	/^#define repr_name /;"	d	file:
repr_name	ModeNumber/mk_eigvals.c	/^#undef repr_name$/;"	d	file:
repr_name	ModeNumber/mk_modenumber.c	/^#define repr_name /;"	d	file:
repr_name	ModeNumber/mk_modenumber.c	/^#undef repr_name$/;"	d	file:
repr_name	PureGauge/suN_utils.c	/^#define repr_name /;"	d	file:
repr_name	PureGauge/suN_utils.c	/^#undef repr_name$/;"	d	file:
repr_name	RenormalizationFactors/measure_Z_mom.c	/^#define repr_name /;"	d	file:
repr_name	RenormalizationFactors/measure_Z_mom.c	/^#undef repr_name$/;"	d	file:
repr_name	Reweight/reweight.h	/^#define repr_name /;"	d
repr_name	Scattering/IOroutines.c	/^#define repr_name /;"	d	file:
repr_name	Scattering/IOroutines.c	/^#undef repr_name$/;"	d	file:
repr_name	Scattering/meson_scattering.c	/^#define repr_name /;"	d	file:
repr_name	Scattering/meson_scattering.c	/^#undef repr_name$/;"	d	file:
repr_name	Spectrum/measure_formfactor.c	/^#define repr_name /;"	d	file:
repr_name	Spectrum/measure_formfactor.c	/^#undef repr_name$/;"	d	file:
repr_name	Spectrum/measure_spectrum.c	/^#define repr_name /;"	d	file:
repr_name	Spectrum/measure_spectrum.c	/^#undef repr_name$/;"	d	file:
repr_name	Spectrum/mk_mesons.c	/^#define repr_name /;"	d	file:
repr_name	Spectrum/mk_mesons.c	/^#undef repr_name$/;"	d	file:
repr_name	Spectrum/mk_mesons_with_z2semwall.c	/^#define repr_name /;"	d	file:
repr_name	Spectrum/mk_mesons_with_z2semwall.c	/^#undef repr_name$/;"	d	file:
repr_name	Spectrum/mk_mesons_with_z2semwall_new.c	/^#define repr_name /;"	d	file:
repr_name	Spectrum/mk_mesons_with_z2semwall_new.c	/^#undef repr_name$/;"	d	file:
repr_name	Spectrum/mk_sfcoupling.c	/^#define repr_name /;"	d	file:
repr_name	Spectrum/mk_sfcoupling.c	/^#undef repr_name$/;"	d	file:
repr_name	Spectrum/trunc_mesons.c	/^#define repr_name /;"	d	file:
repr_name	Spectrum/trunc_mesons.c	/^#undef repr_name$/;"	d	file:
repr_name	StaticPotential/mk_polyakov_loops.c	/^#define repr_name /;"	d	file:
repr_name	StaticPotential/mk_polyakov_loops.c	/^#undef repr_name$/;"	d	file:
repr_name	StaticPotential/tune_HYP_smearing.c	/^#define repr_name /;"	d	file:
repr_name	StaticPotential/tune_HYP_smearing.c	/^#undef repr_name$/;"	d	file:
repr_name	TestProgram/Deflate/check_deflate.c	/^#define repr_name /;"	d	file:
repr_name	TestProgram/Deflate/check_deflate.c	/^#undef repr_name$/;"	d	file:
repr_name	TestProgram/Propagator/check_propagator.c	/^#define repr_name /;"	d	file:
repr_name	TestProgram/Propagator/check_propagator.c	/^#undef repr_name$/;"	d	file:
represent_gauge_field	LibHR/Update/representation.c	/^void represent_gauge_field() {$/;"	f
representation	Make/Utils/autosun/adjoint.h	/^namespace representation$/;"	n
representation	Make/Utils/autosun/antisymmetric.h	/^namespace representation$/;"	n
representation	Make/Utils/autosun/fundamental.h	/^namespace representation$/;"	n
representation	Make/Utils/autosun/symmetric.h	/^namespace representation$/;"	n
res_subsp	LibHR/Inverters/eva.c	/^static int res_subsp(int nlock,int nev,double omega1,double omega2,$/;"	f	file:
resd	LibHR/Observables/calc_prop.c	/^static spinor_field *resd;$/;"	v	file:
resd	LibHR/Observables/calc_prop_ff.c	/^static spinor_field *resd;$/;"	v	file:
resd	LibHR/Observables/z2semwall.c	/^static spinor_field *resd;$/;"	v	file:
resd	LibHR/Observables/z2semwall_new.c	/^static spinor_field *resd;$/;"	v	file:
resetTimes	Scattering/scatter_test.c	/^void resetTimes(spinor_field *out, spinor_field *in, int tau)$/;"	f
reset_mo	Scattering/main_run.c	/^void reset_mo(meson_observable* mo)$/;"	f
reset_mo	Scattering/scatter_test.c	/^void reset_mo(meson_observable* mo)$/;"	f
reset_tmp	LibHR/Geometry/geometry_mpi_eo.c	/^#define reset_tmp /;"	d	file:
reunit	GaugeFix/gaugefix.c	/^void reunit(suNg_field *fixed_gauge){$/;"	f
reweight	Reweight/reweight.c	/^void reweight(double steps, double *result)$/;"	f
reweight_OBJS	Reweight/Makefile	/^reweight_OBJS = $/;"	m
rhmc_add_local_action	LibHR/Update/mon_rhmc.c	/^void rhmc_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
rhmc_correct_la_pf	LibHR/Update/mon_rhmc.c	/^void rhmc_correct_la_pf(const struct _monomial *m) {$/;"	f
rhmc_correct_pf	LibHR/Update/mon_rhmc.c	/^void rhmc_correct_pf(const struct _monomial *m) {$/;"	f
rhmc_create	LibHR/Update/mon_rhmc.c	/^struct _monomial* rhmc_create(const monomial_data *data) {$/;"	f
rhmc_free	LibHR/Update/mon_rhmc.c	/^void rhmc_free(struct _monomial *m) {$/;"	f
rhmc_gaussian_pf	LibHR/Update/mon_rhmc.c	/^void rhmc_gaussian_pf(const struct _monomial *m) {$/;"	f
rhmc_init_traj	LibHR/Update/mon_rhmc.c	/^void rhmc_init_traj(const struct _monomial *m) {$/;"	f
rhmc_pseudofermion	LibHR/Update/mon_rhmc.c	/^const spinor_field* rhmc_pseudofermion(const struct _monomial *m) {$/;"	f
right_cut	Analysis/Mesons/bs_ctrl.cpp	/^std::map<std::string, int> eval_ctrl::right_cut;$/;"	m	class:eval_ctrl	file:
right_cut	Analysis/Mesons/bs_ctrl.h	/^  static std::map<std::string, int> right_cut;$/;"	m	class:eval_ctrl
rini	Fortran/luesher.f	/^      subroutine rini(/;"	s
ritz_subsp	LibHR/Inverters/eva.c	/^static void ritz_subsp(int nlock,int nevt,spinor_operator Op,$/;"	f	file:
rlxd_get	LibHR/Random/ranlxd.c	/^void rlxd_get(int state[])$/;"	f
rlxd_init	LibHR/Random/ranlxd.c	/^void rlxd_init(int level,int seed)$/;"	f
rlxd_level	Include/input_par.h	/^    int rlxd_level, rlxd_seed;$/;"	m	struct:_input_rlx
rlxd_reset	LibHR/Random/ranlxd.c	/^void rlxd_reset(int state[])$/;"	f
rlxd_seed	Include/input_par.h	/^    int rlxd_level, rlxd_seed;$/;"	m	struct:_input_rlx
rlxd_size	LibHR/Random/ranlxd.c	/^int rlxd_size(void)$/;"	f
rlxd_start	Include/input_par.h	/^    char rlxd_start[256];$/;"	m	struct:_input_rlx
rlxd_state	Include/input_par.h	/^    char rlxd_state[256];$/;"	m	struct:_input_rlx
rlxs_get	Analysis/Mesons/ranlxs.cpp	/^void rlxs_get(int state[])$/;"	f
rlxs_get	LibHR/Random/ranlxs.c	/^void rlxs_get(int state[])$/;"	f
rlxs_init	Analysis/Mesons/ranlxs.cpp	/^void rlxs_init(int level,int seed)$/;"	f
rlxs_init	LibHR/Random/ranlxs.c	/^void rlxs_init(int level,int seed)$/;"	f
rlxs_reset	Analysis/Mesons/ranlxs.cpp	/^void rlxs_reset(int state[])$/;"	f
rlxs_reset	LibHR/Random/ranlxs.c	/^void rlxs_reset(int state[])$/;"	f
rlxs_size	LibHR/Random/ranlxs.c	/^int rlxs_size(void)$/;"	f
rmatrix	Make/Utils/autosun/matrix.h	/^	rmatrix(int N, char* name) : pmatrix(N)$/;"	f	class:rmatrix
rmatrix	Make/Utils/autosun/matrix.h	/^	rmatrix(int N, const string& name) : pmatrix(N)$/;"	f	class:rmatrix
rmatrix	Make/Utils/autosun/matrix.h	/^class rmatrix : public pmatrix$/;"	c
rmonomial	Make/Utils/autosun/polynomial.h	/^class rmonomial : public orderedlist<string,int>$/;"	c
rndnum	Fortran/luesher.f	/^      real*8 function rndnum(/;"	f
rndnum	Fortran/su4dbl.f	/^        REAL*8 rndnum$/;"	v
root	LibHR/Update/remez/alg_remez.C	/^int AlgRemez::root() {$/;"	f	class:AlgRemez
roots	LibHR/Update/remez/alg_remez.h	/^  bigfloat *param, *roots, *poles;$/;"	m	class:AlgRemez
rot12	LibHR/Observables/wilsonloops.c	/^static int rot12=(1==0);$/;"	v	file:
rot13	LibHR/Observables/wilsonloops.c	/^static int rot13=(1==0);$/;"	v	file:
rot23	LibHR/Observables/wilsonloops.c	/^static int rot23=(1==0);$/;"	v	file:
rotate	LibHR/Inverters/eva.c	/^static void rotate(int n,spinor_field *pkk,complex v[])$/;"	f	file:
rotate	LibHR/Random/random_suNg.c	/^static void rotate(suNg_vector *pu1, suNg_vector *pu2, double s[4]) \/* same as in cabmar *\/$/;"	f	file:
rotate	LibHR/Update/cabmar.c	/^static inline void rotate(suNg_vector *pu1, suNg_vector *pu2, double *s)$/;"	f	file:
rotate_ptr	TestProgram/SpinorField/check_spinorfield_1.c	/^static void rotate_ptr(int n,spinor_field *pkk[],complex v[])$/;"	f	file:
rotated_g1ddm	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_g1ddm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_g1ddp	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_g1ddp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_g1dum	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_g1dum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_g1dup	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_g1dup(chisf_mem* corr_mem, suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_g1udm	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_g1udm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_g1udp	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_g1udp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_g1uum	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_g1uum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_g1uup	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_g1uup(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXddm	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gXddm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXddp	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gXddp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXdum	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gXdum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXdup	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gXdup(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXudm	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gXudm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXudp	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gXudp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXuum	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gXuum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gXuup	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gXuup(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtddm	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gvtddm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtddp	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gvtddp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtdum	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gvtdum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtdup	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gvtdup(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtudm	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gvtudm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtudp	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gvtudp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtuum	LibHR/Observables/rotated_corrs_gm.c	/^void rotated_gvtuum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_gvtuup	LibHR/Observables/rotated_corrs_gp.c	/^ void rotated_gvtuup(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXddm	LibHR/Observables/rotated_corrs_lm.c	/^void rotated_lXddm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXddp	LibHR/Observables/rotated_corrs_lp.c	/^void rotated_lXddp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXdum	LibHR/Observables/rotated_corrs_lm.c	/^void rotated_lXdum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXdup	LibHR/Observables/rotated_corrs_lp.c	/^void rotated_lXdup(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXudm	LibHR/Observables/rotated_corrs_lm.c	/^void rotated_lXudm(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXudp	LibHR/Observables/rotated_corrs_lp.c	/^void rotated_lXudp(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXuum	LibHR/Observables/rotated_corrs_lm.c	/^void rotated_lXuum(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
rotated_lXuup	LibHR/Observables/rotated_corrs_lp.c	/^void rotated_lXuup(chisf_mem* corr_mem,suNf_spinor *chi, spinor_field * prop_uu,spinor_field * prop_dd) {$/;"	f
row	Make/Utils/autosun/sparse.h	/^	int row;$/;"	m	struct:mindex
row	Make/Utils/autosun/sparse.h	/^	int row;$/;"	m	struct:vindex
rrand	Fortran/luesher.f	/^      common\/rrand\//;"	c	function:rndnum
rrand	Fortran/luesher.f	/^      common\/rrand\//;"	c	subroutine:MULTI_RNDNUM
rrand	Fortran/luesher.f	/^      common\/rrand\//;"	c	subroutine:rini
rtnewt	LibHR/Update/remez/alg_remez.C	/^bigfloat AlgRemez::rtnewt(bigfloat *poly, long i, bigfloat x1, $/;"	f	class:AlgRemez
run_name	HMC/hmc_utils.h	/^  char run_name[64]; \/* name for this run *\/$/;"	m	struct:_hmc_flow
run_name	PureGauge/suN_utils.h	/^  char run_name[64]; \/* name for this run *\/$/;"	m	struct:_pg_flow
rvariable	Make/Utils/autosun/polynomial.h	/^	rvariable(const char* name) : polynomial()$/;"	f	class:rvariable
rvariable	Make/Utils/autosun/polynomial.h	/^class rvariable : public polynomial$/;"	c
rvector	Make/Utils/autosun/matrix.h	/^	rvector(int N, char* name) : pvector(N)$/;"	f	class:rvector
rvector	Make/Utils/autosun/matrix.h	/^	rvector(int N, const string& name) : pvector(N)$/;"	f	class:rvector
rvector	Make/Utils/autosun/matrix.h	/^class rvector : public pvector$/;"	c
rw_var	Reweight/reweight.h	/^input_reweight rw_var = init_input_reweight(rw_var);$/;"	v
s	Include/update.h	/^	spinor_field *s[2];$/;"	m	struct:__anon37
s0	TestProgram/SpinorField/check_spinorfield_1.c	/^static const suNf_spinor s0={{{{{0.0f}}}}};$/;"	v	file:
safe_mod	LibHR/Geometry/safe_mod.h	/^static int safe_mod(int x,int y)$/;"	f
safe_mod	Spectrum/trunc_mesons.c	/^static int safe_mod(int x,int y)$/;"	f	file:
safe_mod	TestProgram/DiracOperator/check_diracoperator_2.c	/^static int safe_mod(int x,int y)$/;"	f	file:
save_conf	HMC/hmc_utils.c	/^int save_conf(hmc_flow *rf, int id) {$/;"	f
save_conf	PureGauge/suN_utils.c	/^int save_conf(pg_flow *gf, int id) {$/;"	f
save_freq	HMC/hmc_utils.h	/^  int save_freq; \/* save gauge conf if number%save_freq==0 *\/$/;"	m	struct:_hmc_flow
save_freq	PureGauge/suN_utils.h	/^  int save_freq; \/* save gauge conf if number%save_freq==0 *\/$/;"	m	struct:_pg_flow
sbase	Analysis/Mesons/ranlxs.cpp	/^static double sbase,sone_bit,base,one_bit,shift;$/;"	v	file:
sbuf_len	Include/geometry.h	/^  int *rbuf_len, *sbuf_len;$/;"	m	struct:_geometry_descriptor
sbuf_start	Include/geometry.h	/^  int *sbuf_to_proc, *sbuf_start;$/;"	m	struct:_geometry_descriptor
sbuf_to_proc	Include/geometry.h	/^  int *sbuf_to_proc, *sbuf_start;$/;"	m	struct:_geometry_descriptor
scalar_field_copy	LibHR/Update/scalarfield_operations.c	/^void scalar_field_copy(scalar_field *s1, scalar_field *s2)$/;"	f
scale	Make/Utils/autosun/list.h	/^	virtual void scale(const VALUE& factor)$/;"	f	class:orderedlist
scatter_test_OBJS	Scattering/Makefile	/^scatter_test_OBJS = $/;"	m
search	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::search(bigfloat *step) {$/;"	f	class:AlgRemez
search_all_blocks	LibHR/Geometry/test_geometry_mpi.c	/^static void search_all_blocks(unsigned int parity, unsigned int mask[4]) {$/;"	f	file:
search_first_block	LibHR/Geometry/test_geometry_mpi.c	/^static void search_first_block(block_info *block) {$/;"	f	file:
sec_int	LibHR/IO/read_action.c	/^static section sec_int[MAX_SECTIONS];$/;"	v	file:
sec_mon	LibHR/IO/read_action.c	/^static section sec_mon[MAX_SECTIONS];$/;"	v	file:
section	LibHR/IO/read_action.c	/^} section;$/;"	t	typeref:struct:__anon47	file:
seed	TestProgram/Inverters/check_inverters_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Inverters/check_inverters_2.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Inverters/check_inverters_3.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Inverters/check_inverters_5.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Inverters/check_inverters_6.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Inverters/check_inverters_7.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Inverters/check_inverters_8.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Inverters/check_inverters_SAP.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
seed	TestProgram/Update/check_update_1.c	/^int nhb,nor,nit,nth,nms,level,seed;$/;"	v
semwall_src	Spectrum/measure_formfactor.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon81	file:
semwall_src	TestProgram/Deflate/check_deflate.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon102	file:
semwall_src	TestProgram/Propagator/check_propagator.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	e	enum:__anon105	file:
senders	LibHR/Geometry/test_geometry_mpi.c	/^  struct _block_info** senders;    \/* communication possible senders *\/$/;"	m	struct:_block_info	typeref:struct:_block_info::_block_info	file:
set	Make/Utils/autosun/list.h	/^	void set(const INDEX& index, const VALUE& value)$/;"	f	class:orderedlist
set	Make/Utils/autosun/sparse.h	/^	void set(int row, const VALUE& value)$/;"	f	class:sparsevector
set	Make/Utils/autosun/sparse.h	/^	void set(int row, int col, const VALUE& value)$/;"	f	class:sparsematrix
setBounds	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::setBounds(double lower, double upper)$/;"	f	class:AlgRemez
setDefaultPrecision	LibHR/Update/remez/bigfloat.h	/^  static void setDefaultPrecision(unsigned long dprec) {$/;"	f	class:bigfloat
setPrecision	LibHR/Update/remez/bigfloat.h	/^  void setPrecision(unsigned long dprec) {$/;"	f	class:bigfloat
set_block	LibHR/Geometry/geometry_mpi_eo.c	/^static void set_block(int id_mask, int* bl_s,int* incr, int* bl_w, int pts, int wts, int pxs, int wxs,int pys, int wys, int pzs, int wzs){$/;"	f	file:
set_border_l2	LibHR/Geometry/geometry_mpi_eo.c	/^static void set_border_l2(int eotype){$/;"	f	file:
set_border_l3	LibHR/Geometry/geometry_mpi_eo.c	/^static void set_border_l3(int eotype){$/;"	f	file:
set_border_pointer	LibHR/Geometry/geometry_mpi_eo.c	/^static void set_border_pointer(int actualn,int match_point)$/;"	f	file:
set_def_matrix	LibHR/Utils/eva_deflation.c	/^void set_def_matrix(eva_prec *e_par, spinor_operator H, geometry_descriptor *type) {$/;"	f
set_dirac_mass	LibHR/Update/D_update.c	/^void set_dirac_mass(double mass) {$/;"	f
set_duplicates_coords	LibHR/Geometry/test_geometry_mpi.c	/^static void set_duplicates_coords(int* test_q) {$/;"	f	file:
set_ff_dirac_mass	LibHR/Update/D_ff.c	/^void set_ff_dirac_mass(double mass) {$/;"	f
set_ff_dirac_shift	LibHR/Update/D_ff.c	/^void set_ff_dirac_shift(double shift){$/;"	f
set_inner	LibHR/Geometry/geometry_mpi_eo.c	/^static void set_inner(int eotype){$/;"	f	file:
set_lbnd	LibHR/Inverters/eva.c	/^static double set_lbnd(int nevt,int kmax,double ubnd,double d[],int *k)$/;"	f	file:
set_level	Analysis/Mesons/bs_ctrl.cpp	/^void derived_ctrl::set_level(int lv){$/;"	f	class:derived_ctrl
set_level	Analysis/Mesons/bs_ctrl.cpp	/^void primary_ctrl::set_level(int lv){$/;"	f	class:primary_ctrl
set_level	Analysis/Mesons/bs_ctrl.cpp	/^void ratio_ctrl::set_level(int lv=0){$/;"	f	class:ratio_ctrl
set_memory_order	LibHR/Geometry/geometry_mpi_eo.c	/^static void set_memory_order()$/;"	f	file:
set_ndeps	Analysis/Mesons/bs_ctrl.cpp	/^void derived_ctrl::set_ndeps(int lv, int nd){$/;"	f	class:derived_ctrl
set_ndeps	Analysis/Mesons/bs_ctrl.cpp	/^void ratio_ctrl::set_ndeps(int nd){$/;"	f	class:ratio_ctrl
set_originals_coords	LibHR/Geometry/test_geometry_mpi.c	/^static void set_originals_coords(site_info* s, int *test_q) {$/;"	f	file:
set_scalar_field	LibHR/Update/scalarfield_operations.c	/^void set_scalar_field(scalar_field *s, double c)$/;"	f
set_theta	Reweight/reweight.c	/^void set_theta(double *a)$/;"	f
set_twisted_mass	LibHR/Update/D_update.c	/^void set_twisted_mass(double mu){$/;"	f
set_unit_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define set_unit_mat(/;"	d	file:
set_zero_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define set_zero_mat(/;"	d	file:
setup_integrator	LibHR/IO/read_action.c	/^static void setup_integrator()$/;"	f	file:
setup_monomials	LibHR/IO/read_action.c	/^static void setup_monomials()$/;"	f	file:
setup_process	LibHR/Geometry/process_init.c	/^int setup_process(int *argc, char ***argv) {$/;"	f
setup_replicas	LibHR/Geometry/process_init.c	/^int setup_replicas() {$/;"	f
sf_Dirichlet_BCs	LibHR/Utils/boundary_conditions.c	/^static void sf_Dirichlet_BCs(spinor_field *sp) {$/;"	f	file:
sf_Dirichlet_BCs_flt	LibHR/Utils/boundary_conditions.c	/^static void sf_Dirichlet_BCs_flt(spinor_field_flt *sp) {$/;"	f	file:
sf_control	LibHR/Geometry/communications.c	/^int gf_control=0,sf_control=0;$/;"	v
sf_control	LibHR/Geometry/communications_flt.c	/^int gf_control=0,sf_control=0;$/;"	v
sf_open_BCs	LibHR/Utils/boundary_conditions.c	/^static void sf_open_BCs(spinor_field *sp) {$/;"	f	file:
sf_open_BCs_flt	LibHR/Utils/boundary_conditions.c	/^static void sf_open_BCs_flt(spinor_field_flt *sp) {$/;"	f	file:
sfc_var	Spectrum/mk_sfcoupling.c	/^input_sfc sfc_var = init_input_sfc( sfc_var );$/;"	v
sfend	LibHR/Geometry/communications.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
sfend	LibHR/Geometry/communications_flt.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
sfetime	LibHR/Geometry/communications.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
sfetime	LibHR/Geometry/communications_flt.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
sfstart	LibHR/Geometry/communications.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
sfstart	LibHR/Geometry/communications_flt.c	/^struct timeval gfstart, gfend, gfetime,sfstart, sfend, sfetime;$/;"	v	typeref:struct:
sh	LibHR/Inverters/g5QMR_mshift.c	/^static double sh;$/;"	v	file:
sh	LibHR/Observables/g5QMR_trunc.c	/^static double sh;$/;"	v	file:
sh_flt	LibHR/Inverters/g5QMR_mshift.c	/^static double sh_flt;$/;"	v	file:
shift	Analysis/Mesons/ranlxs.cpp	/^static double sbase,sone_bit,base,one_bit,shift;$/;"	v	file:
shift	Include/inverters.h	/^   double *shift;$/;"	m	struct:_mshift_par
shift	LibHR/Observables/calc_prop.c	/^static double *shift;$/;"	v	file:
shift	LibHR/Observables/calc_prop_ff.c	/^static double *shift;$/;"	v	file:
shift	LibHR/Observables/trunc_hairpin.c	/^static double shift[256];$/;"	v	file:
shift	LibHR/Observables/z2semwall.c	/^static double *shift;$/;"	v	file:
shift	LibHR/Observables/z2semwall_new.c	/^static double *shift;$/;"	v	file:
shifted_prony_eff_mass_1	Analysis/Mesons/effective_mass.cpp	/^int shifted_prony_eff_mass_1(double* C, int t, int tmax, double* m1, int lt) {$/;"	f
shifted_prony_eff_mass_2	Analysis/Mesons/effective_mass.cpp	/^int shifted_prony_eff_mass_2(double* C, int t, int tmax, double* m1, double *m2, int lt) {$/;"	f
sigma	LibHR/Statistics/base_stat.c	/^double sigma(int n,double a[],double *tau,int *flag)$/;"	f
sigma0	LibHR/Statistics/base_stat.c	/^double sigma0(int n,double a[])$/;"	f
sigma_bin	LibHR/Statistics/jacknife.c	/^double sigma_bin(int n,int binsize,double a[])$/;"	f
sigma_jackknife	LibHR/Statistics/jacknife.c	/^double sigma_jackknife(int nobs,int n,double a[],double *ave_j,$/;"	f
sigma_replicas	LibHR/Statistics/jacknife.c	/^double sigma_replicas(int n,int r,double a[],double *tau,int *flag)$/;"	f
sign	Include/meson_observables.h	/^  double sign;$/;"	m	struct:meson_observable_s
sign	LibHR/Utils/diag_hmat.c	/^double sign(double a, double b){$/;"	f
simq	LibHR/Update/remez/alg_remez.C	/^int AlgRemez::simq(bigfloat A[], bigfloat B[], bigfloat X[], int n) {$/;"	f	class:AlgRemez
site_info	LibHR/Geometry/test_geometry_mpi.c	/^} site_info;$/;"	t	typeref:struct:_site_info	file:
sites	LibHR/Geometry/test_geometry_mpi.c	/^static site_info* sites=NULL;$/;"	v	file:
size	Converter/ChromaUtils/main.c	/^  int size[4];    int size_f;$/;"	m	struct:_filename_type	file:
size	Converter/converter.c	/^  int size[4];    int size_f;$/;"	m	struct:_filename_type	file:
size	LibHR/Geometry/geometry_mpi_eo.c	/^  int size;$/;"	m	struct:__anon44	file:
size	LibHR/Memory/amalloc.c	/^  size_t size;$/;"	m	struct:__anon48	file:
size	Make/Utils/autosun/sparse.h	/^	int size;$/;"	m	class:sparselinear
size	Make/Utils/autosun/sparse.h	/^	int size;$/;"	m	struct:mindex
size	Make/Utils/autosun/sparse.h	/^	int size;$/;"	m	struct:vindex
size_f	Converter/ChromaUtils/main.c	/^  int size[4];    int size_f;$/;"	m	struct:_filename_type	file:
size_f	Converter/converter.c	/^  int size[4];    int size_f;$/;"	m	struct:_filename_type	file:
slower	HMC/hmc_utils.c	/^static void slower(char *str) {$/;"	f	file:
slower	PureGauge/suN_utils.c	/^static void slower(char *str) {$/;"	f	file:
smatrix	Make/Utils/autosun/matrix.h	/^	smatrix() : sparsematrix<complex>() {}$/;"	f	class:smatrix
smatrix	Make/Utils/autosun/matrix.h	/^	smatrix(int N) : sparsematrix<complex>(N) {}$/;"	f	class:smatrix
smatrix	Make/Utils/autosun/matrix.h	/^class smatrix : public sparsematrix<complex>$/;"	c
sn	LibHR/Update/remez/Zolotarev/zolotarev.c	/^static real sn(real z, real kp) {$/;"	f	file:
sn_old	LibHR/Update/remez/Zolotarev/zolotarev.c	/^static real sn_old(real z, real kp) {$/;"	f	file:
snext	Analysis/Mesons/ranlxs.cpp	/^static int next[12],snext[24]; $/;"	v	file:
solvesystem	ModeNumber/approx_for_modenumber.c	/^static void solvesystem(double *c, double *u, int n, double *y, double epsilon) {$/;"	f	file:
sone_bit	Analysis/Mesons/ranlxs.cpp	/^static double sbase,sone_bit,base,one_bit,shift;$/;"	v	file:
sort	Make/Utils/autosun/list.h	/^	void sort()$/;"	f	class:orderedlist
sort	Make/Utils/autosun/list.h	/^	void sort(int l, int r)$/;"	f	class:orderedlist
sort1	LibHR/Inverters/jacobi.c	/^static void sort1(int n,double d[],double v[])$/;"	f	file:
sort2	LibHR/Inverters/jacobi.c	/^static void sort2(int n,double d[],complex v[])$/;"	f	file:
source_filename	Scattering/IOroutines.c	/^char source_filename[256]="";$/;"	v
source_filename	Scattering/meson_scattering.c	/^char source_filename[256]="";$/;"	v
source_type	Disconnected/compute_loops.c	/^  int source_type;$/;"	m	struct:_input_loops	file:
source_type_t	Spectrum/measure_formfactor.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	t	typeref:enum:__anon81	file:
source_type_t	TestProgram/Deflate/check_deflate.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	t	typeref:enum:__anon102	file:
source_type_t	TestProgram/Propagator/check_propagator.c	/^typedef enum {semwall_src,point_src,gfwall_src} source_type_t;$/;"	t	typeref:enum:__anon105	file:
sp	TestProgram/SpinorField/check_spinorfield_1.c	/^static complex sp(spinor_field *pk,spinor_field *pl)$/;"	f	file:
sp_T_antiperiodic_BCs	LibHR/Utils/boundary_conditions.c	/^static void sp_T_antiperiodic_BCs() {$/;"	f	file:
sp_X_antiperiodic_BCs	LibHR/Utils/boundary_conditions.c	/^static void sp_X_antiperiodic_BCs() {$/;"	f	file:
sp_Y_antiperiodic_BCs	LibHR/Utils/boundary_conditions.c	/^static void sp_Y_antiperiodic_BCs() {$/;"	f	file:
sp_Z_antiperiodic_BCs	LibHR/Utils/boundary_conditions.c	/^static void sp_Z_antiperiodic_BCs() {$/;"	f	file:
sparselinear	Make/Utils/autosun/sparse.h	/^	sparselinear() : orderedlist<INDEX,VALUE>() { size = 0; }$/;"	f	class:sparselinear
sparselinear	Make/Utils/autosun/sparse.h	/^	sparselinear(const sparselinear<INDEX,VALUE>& mat) : orderedlist<INDEX,VALUE>(mat) { size = mat.size; }$/;"	f	class:sparselinear
sparselinear	Make/Utils/autosun/sparse.h	/^	sparselinear(int n) : orderedlist<INDEX,VALUE>() { size = n; }$/;"	f	class:sparselinear
sparselinear	Make/Utils/autosun/sparse.h	/^template<class INDEX, class VALUE> class sparselinear : public orderedlist<INDEX,VALUE>$/;"	c
sparsematrix	Make/Utils/autosun/sparse.h	/^	sparsematrix() : sparselinear<mindex,VALUE>() {}$/;"	f	class:sparsematrix
sparsematrix	Make/Utils/autosun/sparse.h	/^	sparsematrix(const sparsematrix<VALUE>& mat) : sparselinear<mindex,VALUE>(mat) {}$/;"	f	class:sparsematrix
sparsematrix	Make/Utils/autosun/sparse.h	/^	sparsematrix(int n) : sparselinear<mindex,VALUE>(n) {}$/;"	f	class:sparsematrix
sparsematrix	Make/Utils/autosun/sparse.h	/^template<class VALUE> class sparsematrix : public sparselinear<mindex,VALUE>$/;"	c
sparsevector	Make/Utils/autosun/sparse.h	/^	sparsevector() : sparselinear<vindex,VALUE>() {}$/;"	f	class:sparsevector
sparsevector	Make/Utils/autosun/sparse.h	/^	sparsevector(const sparsevector<VALUE>& vec) : sparselinear<vindex,VALUE>(vec) {}$/;"	f	class:sparsevector
sparsevector	Make/Utils/autosun/sparse.h	/^	sparsevector(int n) : sparselinear<vindex,VALUE>(n) {}$/;"	f	class:sparsevector
sparsevector	Make/Utils/autosun/sparse.h	/^template<class VALUE> class sparsevector : public sparselinear<vindex,VALUE>$/;"	c
spin	Analysis/Mesons/progbar.cpp	/^const char spin[]="(O)|"; \/\/"\/-\\|", "(O)O", ".oOo", "(O)|" $/;"	v
spinmatrix_op	LibHR/Observables/measure_mesons.c	/^static void spinmatrix_op(suNf_spin_matrix *out, suNf_spin_matrix *in, gamma_ind i){$/;"	f	file:
spinor_field_copy	LibHR/Inverters/linear_algebra.c	/^void _FUNC(spinor_field_copy)(_SPINOR_FIELD_TYPE *s1, _SPINOR_FIELD_TYPE *s2) {$/;"	f
spinor_field_g5_prod_re_f_f2d	LibHR/Inverters/g5QMR_mshift.c	/^static double spinor_field_g5_prod_re_f_f2d(spinor_field_flt *s1, spinor_field_flt *s2)$/;"	f	file:
spinor_field_prod_re_f_f2d	LibHR/Inverters/MINRES.c	/^static double spinor_field_prod_re_f_f2d(spinor_field_flt *s1, spinor_field_flt *s2)$/;"	f	file:
spinor_field_sqnorm_f_f2d	LibHR/Inverters/MINRES.c	/^static double spinor_field_sqnorm_f_f2d(spinor_field_flt *s1)$/;"	f	file:
spinor_field_sqnorm_f_f2d	LibHR/Inverters/g5QMR_mshift.c	/^static double spinor_field_sqnorm_f_f2d(spinor_field_flt *s1)$/;"	f	file:
spinor_operator	Include/inverters.h	/^typedef void (*spinor_operator)(spinor_field *out, spinor_field *in);$/;"	t
spinor_operator_flt	Include/inverters.h	/^typedef void (*spinor_operator_flt)(spinor_field_flt *out, spinor_field_flt *in);$/;"	t
spinor_operator_m	Include/inverters.h	/^typedef void (*spinor_operator_m)(spinor_field *out, spinor_field *in, double m);$/;"	t
spinor_scalarfield_ig5_mult_add_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_scalarfield_ig5_mult_add_assign(spinor_field *out,scalar_field *pi, spinor_field *in){$/;"	f
spinor_scalarfield_ig5_mult_add_assign_flt	LibHR/Update/scalarfield_operations.c	/^void spinor_scalarfield_ig5_mult_add_assign_flt(spinor_field_flt *out,scalar_field *pi, spinor_field_flt *in){$/;"	f
spinor_scalarfield_mig5_mult_add_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_scalarfield_mig5_mult_add_assign(spinor_field *out,scalar_field *pi, spinor_field *in){$/;"	f
spinor_scalarfield_mig5_mult_add_assign_flt	LibHR/Update/scalarfield_operations.c	/^void spinor_scalarfield_mig5_mult_add_assign_flt(spinor_field_flt *out,scalar_field *pi, spinor_field_flt *in){$/;"	f
spinor_scalarfield_mult_add_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_scalarfield_mult_add_assign(spinor_field *out,scalar_field *sigma,double rho, spinor_field *in){$/;"	f
spinor_scalarfield_mult_add_assign_flt	LibHR/Update/scalarfield_operations.c	/^void spinor_scalarfield_mult_add_assign_flt(spinor_field_flt *out,scalar_field *sigma,double rho, spinor_field_flt *in){$/;"	f
spinor_sigma_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_sigma_assign(spinor_field *out,scalar_field *sigma, spinor_field *in){$/;"	f
spinor_sigma_pi_dagger_rho_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_sigma_pi_dagger_rho_assign(spinor_field *out,scalar_field *sigma,scalar_field *pi,double rho, spinor_field *in){$/;"	f
spinor_sigma_pi_dagger_rho_div_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_sigma_pi_dagger_rho_div_assign(spinor_field *out,scalar_field *sigma,scalar_field *pi,double rho, spinor_field *in){$/;"	f
spinor_sigma_pi_dagger_rho_div_assign_flt	LibHR/Update/scalarfield_operations.c	/^void spinor_sigma_pi_dagger_rho_div_assign_flt(spinor_field_flt *out,scalar_field *sigma,scalar_field *pi,double rho, spinor_field_flt *in){$/;"	f
spinor_sigma_pi_rho_div_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_sigma_pi_rho_div_assign(spinor_field *out,scalar_field *sigma,scalar_field *pi,double rho, spinor_field *in){$/;"	f
spinor_sigma_pi_rho_div_assign_flt	LibHR/Update/scalarfield_operations.c	/^void spinor_sigma_pi_rho_div_assign_flt(spinor_field_flt *out,scalar_field *sigma,scalar_field *pi,double rho, spinor_field_flt *in){$/;"	f
spinor_sigma_pi_rho_minus_div_assign	LibHR/Update/scalarfield_operations.c	/^void spinor_sigma_pi_rho_minus_div_assign(spinor_field *out,scalar_field *sigma,scalar_field *pi,double rho, spinor_field *in){$/;"	f
spread	LibHR/Update/remez/alg_remez.h	/^  bigfloat delta, spread, tolerance;$/;"	m	class:AlgRemez
sqnorm_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define sqnorm_mat(/;"	d	file:
sqrt_bf	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat sqrt_bf(const bigfloat& x){$/;"	f	class:bigfloat
sqrt_bf	LibHR/Update/remez/bigfloat.h	/^  friend bigfloat sqrt_bf(const unsigned long x){$/;"	f	class:bigfloat
square	TestProgram/TripletMesons/check_triplets_1.c	/^double square(double x) {$/;"	f
squareroot	ModeNumber/approx_for_modenumber.c	/^static int squareroot(double delta, double epsilon, double *c, int *order, double *err) {$/;"	f	file:
staple	LibHR/Update/rect_staples.c	/^static suNg staple, tr1, tr2,tr3;$/;"	v	file:
staples	LibHR/Update/staples.c	/^void staples(int ix,int mu,suNg *v)$/;"	f
star	ModeNumber/approx_for_modenumber.c	/^double star(double delta, double epsilon, int order, double *c) {$/;"	f
star	ModeNumber/modenumber.c	/^static double star;$/;"	v	file:
start	HMC/hmc_utils.h	/^  int start, end;$/;"	m	struct:_hmc_flow
start	LibHR/Geometry/test_geometry_mpi.c	/^  site_info* start;$/;"	m	struct:_block_info	file:
start	PureGauge/suN_utils.h	/^  int start, end;$/;"	m	struct:_pg_flow
start_config	Include/update.h	/^  char *start_config;  \/\/cold -> set sigmafield to start_value, pi to 0$/;"	m	struct:_mon_ff_par
start_gf_sendrecv	LibHR/Geometry/communications.c	/^void start_gf_sendrecv(suNg_field *gf) {$/;"	f
start_gf_sendrecv_flt	LibHR/Geometry/communications_flt.c	/^void start_gf_sendrecv_flt(suNg_field_flt *gf) {$/;"	f
start_gt_sendrecv	LibHR/Geometry/communications.c	/^void start_gt_sendrecv(suNg_field *gf) {$/;"	f
start_sf_sendrecv	LibHR/Geometry/communications.c	/^void start_sf_sendrecv(spinor_field *sf) {$/;"	f
start_sf_sendrecv_flt	LibHR/Geometry/communications_flt.c	/^void start_sf_sendrecv_flt(spinor_field_flt *sf) {$/;"	f
start_value	Include/update.h	/^  double start_value;$/;"	m	struct:_mon_ff_par
static_mass	LibHR/Update/D_ff.c	/^static double static_mass=0.;$/;"	v	file:
static_mass	LibHR/Update/D_update.c	/^static double static_mass=0.;$/;"	v	file:
static_mu	LibHR/Update/D_update.c	/^static double static_mu=0.;$/;"	v	file:
static_shift	LibHR/Update/D_ff.c	/^static double static_shift=0.;$/;"	v	file:
std	ModeNumber/Makefile	/^	gcc -o approx_for_modenumber approx_for_modenumber.c -Wall -std=c99 -lm -lgsl -lgslcblas -I\/sw\/include -L\/sw\/lib -m32$/;"	m
stderr	Analysis/Mesons/datasample.cpp	/^estimate datasample::stderr() const {$/;"	f	class:datasample
step	LibHR/Update/remez/alg_remez.h	/^  bigfloat *xx, *mm, *step;$/;"	m	class:AlgRemez
steps	Reweight/reweight.h	/^	int steps;$/;"	m	struct:__anon76
stoc_propagator	LibHR/Observables/trunc_hairpin.c	/^static void stoc_propagator(complex** prop, int n_src, int mode) {$/;"	f	file:
stoc_propagator_ws	LibHR/Observables/trunc_hairpin.c	/^static spinor_field* stoc_propagator_ws;$/;"	v	file:
stochastic evaluation of disconnected loops	Doc/disconnected.tex	/^\\eeq$/;"	s
store_cor_eff	Analysis/Mesons/bs_ctrl.cpp	/^void primary_ctrl::store_cor_eff(const int bsl) {$/;"	f	class:primary_ctrl
stpini	LibHR/Update/remez/alg_remez.C	/^void AlgRemez::stpini(bigfloat *step) {$/;"	f	class:AlgRemez
str_imag	Make/Utils/autosun/polynomial.h	/^	string str_imag() const$/;"	f	class:polynomial
str_real	Make/Utils/autosun/polynomial.h	/^	string str_real() const$/;"	f	class:polynomial
string	Converter/ChromaUtils/main.c	/^  char string[256];$/;"	m	struct:_filename_type	file:
string	Converter/converter.c	/^  char string[1024];$/;"	m	struct:_filename_type	file:
string	GaugeFix/gaugefix_measure.c	/^  char string[256];$/;"	m	struct:__anon8	file:
string	GaugeFix/gaugefix_unittest.c	/^  char string[256];$/;"	m	struct:__anon10	file:
string	HMC/hmc_forces.c	/^  char string[256];$/;"	m	struct:__anon12	file:
string	ModeNumber/mk_eigvals.c	/^  char string[256];$/;"	m	struct:__anon71	file:
string	ModeNumber/mk_modenumber.c	/^  char string[256];$/;"	m	struct:__anon73	file:
string	RenormalizationFactors/measure_Z_mom.c	/^  char string[256];$/;"	m	struct:__anon75	file:
string	Scattering/IOroutines.c	/^	char string[256];$/;"	m	struct:__anon78	file:
string	Scattering/meson_scattering.c	/^	char string[256];$/;"	m	struct:__anon80	file:
string	Spectrum/measure_formfactor.c	/^  char string[256];$/;"	m	struct:__anon83	file:
string	Spectrum/measure_spectrum.c	/^  char string[256];$/;"	m	struct:__anon85	file:
string	Spectrum/mk_mesons.c	/^  char string[256];$/;"	m	struct:__anon87	file:
string	Spectrum/mk_mesons_with_z2semwall.c	/^  char string[256];$/;"	m	struct:__anon89	file:
string	Spectrum/mk_mesons_with_z2semwall_new.c	/^  char string[256];$/;"	m	struct:__anon91	file:
string	Spectrum/mk_sfcoupling.c	/^  char string[256];$/;"	m	struct:__anon93	file:
string	Spectrum/trunc_mesons.c	/^  char string[256];$/;"	m	struct:__anon95	file:
string	StaticPotential/mk_polyakov_loops.c	/^  char string[256];$/;"	m	struct:__anon97	file:
string	StaticPotential/mk_wilsonloops.c	/^  char string[256];$/;"	m	struct:__anon99	file:
string	StaticPotential/tune_HYP_smearing.c	/^  char string[256];$/;"	m	struct:__anon101	file:
string	TestProgram/Deflate/check_deflate.c	/^  char string[256];$/;"	m	struct:__anon104	file:
string	TestProgram/Propagator/check_propagator.c	/^  char string[256];$/;"	m	struct:__anon107	file:
string	WilsonFlow/WF_measure.c	/^  char string[256];$/;"	m	struct:__anon113	file:
string	WilsonFlow/WF_measure_adaptative.c	/^  char string[256];$/;"	m	struct:__anon115	file:
su2_hit	GaugeFix/gaugefix.c	/^void su2_hit(int fix_dir, int parity, double overrelax, suNg_field *fixed_gauge, int c )$/;"	f
su2_rotate	LibHR/Utils/suN_exp.c	/^static void su2_rotate(double *s,complex *v1,complex *v2)$/;"	f	file:
suN_OBJS	PureGauge/Makefile	/^suN_OBJS = suN_utils.o $/;"	m
suNf	Include/suN_types.h	/^} suNf;$/;"	t	typeref:struct:__anon33
suNf_FMAT	Include/suN_types.h	/^typedef suNf suNf_FMAT;$/;"	t
suNf_FMAT_flt	Include/suN_types.h	/^typedef suNf_flt suNf_FMAT_flt;$/;"	t
suNf_field_copy	LibHR/Update/copy_gfield.c	/^void suNf_field_copy(suNf_field *g1, suNf_field *g2)$/;"	f
suNf_flt	Include/suN_types.h	/^} suNf_flt;$/;"	t	typeref:struct:__anon34
suNf_propagator	Include/propagator.h	/^} suNf_propagator;$/;"	t	typeref:struct:__anon19
suNf_spin_matrix	Include/spin_matrix.h	/^} suNf_spin_matrix;$/;"	t	typeref:struct:__anon20
suNf_spinor	Include/suN_types.h	/^} suNf_spinor;$/;"	t	typeref:struct:__anon35
suNf_spinor_flt	Include/suN_types.h	/^} suNf_spinor_flt;$/;"	t	typeref:struct:__anon36
suNf_vector	Include/suN_types.h	/^} suNf_vector;$/;"	t	typeref:struct:__anon29
suNf_vector_flt	Include/suN_types.h	/^} suNf_vector_flt;$/;"	t	typeref:struct:__anon30
suNfc	Include/suN_types.h	/^} suNfc;$/;"	t	typeref:struct:__anon31
suNfc_FMAT	Include/suN_types.h	/^typedef suNfc suNfc_FMAT;$/;"	t
suNfc_FMAT_flt	Include/suN_types.h	/^typedef suNfc_flt suNfc_FMAT_flt;$/;"	t
suNfc_flt	Include/suN_types.h	/^} suNfc_flt;$/;"	t	typeref:struct:__anon32
suNg	Include/suN_types.h	/^} suNg;$/;"	t	typeref:struct:__anon23
suNg_FMAT	Include/suN_types.h	/^typedef suNg suNg_FMAT;$/;"	t
suNg_FMAT_flt	Include/suN_types.h	/^typedef suNg_flt suNg_FMAT_flt;$/;"	t
suNg_algebra_vector	Include/suN_types.h	/^} suNg_algebra_vector;$/;"	t	typeref:struct:__anon27
suNg_algebra_vector_flt	Include/suN_types.h	/^} suNg_algebra_vector_flt;$/;"	t	typeref:struct:__anon28
suNg_field_copy	LibHR/Update/copy_gfield.c	/^void suNg_field_copy(suNg_field *g1, suNg_field *g2)$/;"	f
suNg_flt	Include/suN_types.h	/^} suNg_flt;$/;"	t	typeref:struct:__anon24
suNg_spinor	Include/suN_types.h	/^} suNg_spinor;$/;"	t	typeref:struct:__anon25
suNg_spinor_flt	Include/suN_types.h	/^} suNg_spinor_flt;$/;"	t	typeref:struct:__anon26
suNg_vector	Include/suN_types.h	/^} suNg_vector;$/;"	t	typeref:struct:__anon21
suNg_vector_flt	Include/suN_types.h	/^} suNg_vector_flt;$/;"	t	typeref:struct:__anon22
suNgc	Include/suN_types.h	/^typedef suNg suNgc;$/;"	t
suNgc_flt	Include/suN_types.h	/^typedef suNg_flt suNgc_flt;$/;"	t
sub	Make/Utils/autosun/sparse.h	/^	virtual void sub(const sparselinear<INDEX,VALUE>& l)$/;"	f	class:sparselinear
sub_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define sub_mat(/;"	d	file:
submat	LibHR/Inverters/eva.c	/^static void submat(int nev,int ia,int ib)$/;"	f	file:
svector	Make/Utils/autosun/matrix.h	/^	svector() : sparsevector<complex>() {}$/;"	f	class:svector
svector	Make/Utils/autosun/matrix.h	/^	svector(int N) : sparsevector<complex>(N) {}$/;"	f	class:svector
svector	Make/Utils/autosun/matrix.h	/^class svector : public sparsevector<complex>$/;"	c
svol	Analysis/Mesons/bs_mesons.cpp	/^double svol=.0;$/;"	v
swapendian16	LibHR/IO/endian.c	/^static void swapendian16(void* ptr) {$/;"	f	file:
swapendian32	LibHR/IO/endian.c	/^static void swapendian32(void* ptr) {$/;"	f	file:
swapendian64	LibHR/IO/endian.c	/^static void swapendian64(void* ptr) {$/;"	f	file:
sym	Analysis/Mesons/bs_reader.cpp	/^static void sym(int n, double *data) {$/;"	f	file:
sync_gauge_field	LibHR/Geometry/communications.c	/^static void sync_gauge_field(suNg_field *gf) {$/;"	f	file:
sync_gauge_field_flt	LibHR/Geometry/communications_flt.c	/^static void sync_gauge_field_flt(suNg_field_flt *gf) {$/;"	f	file:
sync_gauge_transf	LibHR/Geometry/communications.c	/^static void sync_gauge_transf(suNg_field *gf) {$/;"	f	file:
sync_spinor_field	LibHR/Geometry/communications.c	/^static void sync_spinor_field(spinor_field *p) {$/;"	f	file:
sync_spinor_field_flt	LibHR/Geometry/communications_flt.c	/^static void sync_spinor_field_flt(spinor_field_flt *p) {$/;"	f	file:
t	GaugeFix/gaugefix_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon8	file:
t	GaugeFix/gaugefix_unittest.c	/^  int t, x, y, z;$/;"	m	struct:__anon10	file:
t	HMC/hmc_forces.c	/^  int t, x, y, z;$/;"	m	struct:__anon12	file:
t	ModeNumber/mk_eigvals.c	/^  int t, x, y, z;$/;"	m	struct:__anon71	file:
t	ModeNumber/mk_modenumber.c	/^  int t, x, y, z;$/;"	m	struct:__anon73	file:
t	RenormalizationFactors/measure_Z_mom.c	/^  int t, x, y, z;$/;"	m	struct:__anon75	file:
t	Scattering/IOroutines.c	/^	int t, x, y, z;$/;"	m	struct:__anon78	file:
t	Scattering/meson_scattering.c	/^	int t, x, y, z;$/;"	m	struct:__anon80	file:
t	Spectrum/measure_formfactor.c	/^  int t, x, y, z;$/;"	m	struct:__anon83	file:
t	Spectrum/measure_spectrum.c	/^  int t, x, y, z;$/;"	m	struct:__anon85	file:
t	Spectrum/mk_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon87	file:
t	Spectrum/mk_mesons_with_z2semwall.c	/^  int t, x, y, z;$/;"	m	struct:__anon89	file:
t	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int t, x, y, z;$/;"	m	struct:__anon91	file:
t	Spectrum/mk_sfcoupling.c	/^  int t, x, y, z;$/;"	m	struct:__anon93	file:
t	Spectrum/trunc_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon95	file:
t	StaticPotential/mk_polyakov_loops.c	/^  int t, x, y, z;$/;"	m	struct:__anon97	file:
t	StaticPotential/mk_wilsonloops.c	/^  int t, x, y, z;$/;"	m	struct:__anon99	file:
t	StaticPotential/tune_HYP_smearing.c	/^  int t, x, y, z;$/;"	m	struct:__anon101	file:
t	TestProgram/Deflate/check_deflate.c	/^  int t, x, y, z;$/;"	m	struct:__anon104	file:
t	TestProgram/Propagator/check_propagator.c	/^  int t, x, y, z;$/;"	m	struct:__anon107	file:
t	WilsonFlow/WF_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon113	file:
t	WilsonFlow/WF_measure_adaptative.c	/^  int t, x, y, z;$/;"	m	struct:__anon115	file:
test	LibHR/Geometry/test_geometry_mpi.c	/^  int test;$/;"	m	struct:_site_info	file:
test	LibHR/Geometry/test_geometry_mpi.c	/^  unsigned int test;$/;"	m	struct:_block_info	file:
test	LibHR/Observables/z2semwall.c	/^static spinor_field *test;$/;"	v	file:
test_e	LibHR/Observables/z2semwall.c	/^static spinor_field *test_e;$/;"	v	file:
test_geometry_mpi_eo	LibHR/Geometry/test_geometry_mpi.c	/^void test_geometry_mpi_eo() {$/;"	f
test_goemetry_descriptor	LibHR/Geometry/test_geometry_mpi.c	/^static void test_goemetry_descriptor(geometry_descriptor *gd, int parity) {$/;"	f	file:
test_herm	TestProgram/DiracOperator/check_diracoperator_3.c	/^void test_herm(spinor_operator S, char *name){$/;"	f
test_rect_staples_1x2	LibHR/Update/rect_staples.c	/^void test_rect_staples_1x2()$/;"	f
test_staples	LibHR/Update/staples.c	/^void test_staples()$/;"	f
tf	Spectrum/measure_formfactor.c	/^  int tf;$/;"	m	struct:_input_mesons	file:
tf	TestProgram/Propagator/check_propagator.c	/^  int tf;$/;"	m	struct:_input_mesons	file:
therm	PureGauge/suN_utils.h	/^  int therm;$/;"	m	struct:_pg_flow
theta	Include/update.h	/^  double theta[4];$/;"	m	struct:_ghmc_par
theta	Spectrum/mk_sfcoupling.c	/^  double theta[4];$/;"	m	struct:_input_bcpar	file:
theta_new	Reweight/reweight.c	/^static double theta_new[4] = {0.0, 0.0, 0.0, 0.0};$/;"	v	file:
theta_old	Reweight/reweight.c	/^static double theta_old[4] = {0.0, 0.0, 0.0, 0.0};$/;"	v	file:
three_to_index	LibHR/Utils/HYP_smearing.c	/^static int three_to_index[4][4][4];$/;"	v	file:
ti	Spectrum/measure_formfactor.c	/^  int ti;$/;"	m	struct:_input_mesons	file:
ti	TestProgram/Propagator/check_propagator.c	/^  int ti;$/;"	m	struct:_input_mesons	file:
timeval_subtract	LibHR/Utils/time.c	/^int timeval_subtract (struct timeval *result, struct timeval *x, struct timeval *y)$/;"	f
tlen	Include/update.h	/^  double tlen;$/;"	m	struct:_ghmc_par
tm_add_local_action	LibHR/Update/mon_tm.c	/^void tm_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
tm_alt_add_local_action	LibHR/Update/mon_tm_alt.c	/^void tm_alt_add_local_action(const struct _monomial *m, scalar_field *loc_action) {$/;"	f
tm_alt_correct_la_pf	LibHR/Update/mon_tm_alt.c	/^void tm_alt_correct_la_pf(const struct _monomial *m) {$/;"	f
tm_alt_correct_pf	LibHR/Update/mon_tm_alt.c	/^void tm_alt_correct_pf(const struct _monomial *m) {$/;"	f
tm_alt_create	LibHR/Update/mon_tm_alt.c	/^struct _monomial* tm_alt_create(const monomial_data *data) {$/;"	f
tm_alt_free	LibHR/Update/mon_tm_alt.c	/^void tm_alt_free(struct _monomial *m) {$/;"	f
tm_alt_gaussian_pf	LibHR/Update/mon_tm_alt.c	/^void tm_alt_gaussian_pf(const struct _monomial *m) {$/;"	f
tm_alt_init_traj	LibHR/Update/mon_tm_alt.c	/^void tm_alt_init_traj(const struct _monomial *m) {$/;"	f
tm_alt_pseudofermion	LibHR/Update/mon_tm_alt.c	/^const spinor_field* tm_alt_pseudofermion(const struct _monomial *m) {$/;"	f
tm_correct_la_pf	LibHR/Update/mon_tm.c	/^void tm_correct_la_pf(const struct _monomial *m) {$/;"	f
tm_correct_pf	LibHR/Update/mon_tm.c	/^void tm_correct_pf(const struct _monomial *m) {$/;"	f
tm_create	LibHR/Update/mon_tm.c	/^struct _monomial* tm_create(const monomial_data *data) {$/;"	f
tm_free	LibHR/Update/mon_tm.c	/^void tm_free(struct _monomial *m) {$/;"	f
tm_gaussian_pf	LibHR/Update/mon_tm.c	/^void tm_gaussian_pf(const struct _monomial *m) {$/;"	f
tm_init_traj	LibHR/Update/mon_tm.c	/^void tm_init_traj(const struct _monomial *m) {$/;"	f
tm_invert	LibHR/Update/D_update.c	/^void tm_invert(spinor_field* out, spinor_field *in, mshift_par* mpar){$/;"	f
tm_invert_alt	LibHR/Update/D_update.c	/^void tm_invert_alt(spinor_field* out, spinor_field *in, mshift_par* mpar){$/;"	f
tm_pseudofermion	LibHR/Update/mon_tm.c	/^const spinor_field* tm_pseudofermion(const struct _monomial *m) {$/;"	f
tmax	WilsonFlow/WF_measure.c	/^  double tmax;$/;"	m	struct:_input_WF	file:
tmax	WilsonFlow/WF_measure_adaptative.c	/^  double tmax;$/;"	m	struct:_input_WF	file:
tmp	LibHR/Observables/calc_prop.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	LibHR/Observables/calc_prop_ff.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_1.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_2.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_3.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_5.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_6.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_7.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_8.c	/^static spinor_field *tmp;$/;"	v	file:
tmp	TestProgram/Inverters/check_inverters_SAP.c	/^static spinor_field *tmp;$/;"	v	file:
tmp_flt	TestProgram/Inverters/check_inverters_6.c	/^static spinor_field_flt *tmp_flt;$/;"	v	file:
tmp_flt	TestProgram/Inverters/check_inverters_7.c	/^static spinor_field_flt *tmp_flt;$/;"	v	file:
tmp_odd	LibHR/Observables/calc_prop.c	/^static spinor_field *tmp_odd;$/;"	v	file:
tmp_odd	LibHR/Observables/calc_prop_ff.c	/^static spinor_field *tmp_odd;$/;"	v	file:
tmp_pf	LibHR/Update/mon_hasen.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_hasen_ff.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_hasen_tm.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_hasen_tm_alt.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_hmc.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_hmc_ff.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_rhmc.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_tm.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_pf	LibHR/Update/mon_tm_alt.c	/^static spinor_field *tmp_pf = NULL;$/;"	v	file:
tmp_sf	LibHR/Observables/calc_prop.c	/^static spinor_field *tmp_sf;$/;"	v	file:
to	LibHR/Geometry/test_geometry_mpi.c	/^  block_info* to;$/;"	m	struct:__anon45	file:
tolerance	LibHR/Update/remez/alg_remez.h	/^  bigfloat delta, spread, tolerance;$/;"	m	class:AlgRemez
total_gauge_master_pieces	Include/geometry.h	/^  int total_gauge_master_pieces;$/;"	m	struct:_geometry_descriptor
total_spinor_master_pieces	Include/geometry.h	/^  int total_spinor_master_pieces;$/;"	m	struct:_geometry_descriptor
tr1	LibHR/Update/rect_staples.c	/^static suNg staple, tr1, tr2,tr3;$/;"	v	file:
tr2	LibHR/Update/rect_staples.c	/^static suNg staple, tr1, tr2,tr3;$/;"	v	file:
tr3	LibHR/Update/rect_staples.c	/^static suNg staple, tr1, tr2,tr3;$/;"	v	file:
tr_channel_names	LibHR/Observables/measure_renormalization.c	/^char* tr_channel_names[NCHANNELSR]={"Sin", "Sout", "g5","id","g0","g1","g2","g3","g0g1","g0g2","g0g3","g5g0","g5g1","g5g2","g5g3","g5g0g1","g5g0g2","g5g0g3","cg0","cg1","cg2","cg3"};$/;"	v
tr_corr	LibHR/Observables/measure_renormalization.c	/^static suNf_propagator* tr_corr[NCHANNELSR];$/;"	v	file:
tr_measure_channels	LibHR/Observables/measure_renormalization.c	/^int tr_measure_channels[NCHANNELSR]={1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1};$/;"	v
trace	Make/Utils/autosun/sparse.h	/^	friend void trace(VALUE& ret, const sparsematrix<VALUE>& l)$/;"	f	class:sparsematrix
trace_mat	TestProgram/TripletMesons/check_triplets_2.c	/^#define trace_mat(/;"	d	file:
traced_ata_qprop	LibHR/Observables/trunc_hairpin.c	/^void traced_ata_qprop(complex*** prop, int n_points) {$/;"	f
transform	TestProgram/PureGauge/check_puregauge_2.c	/^static void transform(suNg_field* gtransf, suNg_field* gfield)$/;"	f	file:
transform_s	TestProgram/DiracOperator/check_diracoperator_1.c	/^static void transform_s(spinor_field *out, spinor_field *in)$/;"	f	file:
transform_s	TestProgram/DiracOperator/check_diracoperator_5.c	/^static void transform_s(spinor_field_flt *out, spinor_field_flt *in)$/;"	f	file:
transform_s	TestProgram/RotatedSF/check_rotatedsf_1.c	/^static void transform_s(spinor_field *in,spinor_field *out)$/;"	f	file:
transform_u	TestProgram/DiracOperator/check_diracoperator_1.c	/^static void transform_u(void)$/;"	f	file:
transform_u	TestProgram/DiracOperator/check_diracoperator_5.c	/^static void transform_u(void)$/;"	f	file:
transform_u	TestProgram/RotatedSF/check_rotatedsf_1.c	/^static void transform_u(void)$/;"	f	file:
transform_u	TestProgram/RotatedSF/check_rotatedsf_2.c	/^static void transform_u(void)$/;"	f	file:
transform_u	TestProgram/WilsonLoops/check_wilsonloops_6.c	/^static void transform_u(suNg_field* out, suNg_field* in, suNg_field* g) {$/;"	f	file:
transform_u	TestProgram/WilsonLoops/check_wilsonloops_7.c	/^static void transform_u(suNg_field* out, suNg_field* in, suNg_field* g) {$/;"	f	file:
translate	Converter/ChromaUtils/translate.c	/^void translate(QLA_ColorMatrix *m, int coords[])$/;"	f
translate_quat_su2	LibHR/IO/archive_su2quat.c	/^static void translate_quat_su2(suNg *m, double *q) {$/;"	f	file:
translate_su2_quat	LibHR/IO/archive_su2quat.c	/^static void translate_su2_quat(double *q, suNg *m) {$/;"	f	file:
transpose	Make/Utils/autosun/sparse.h	/^	virtual void transpose()$/;"	f	class:sparsematrix
tridiagonalize	LibHR/Utils/diag_hmat.c	/^void tridiagonalize(suNg *hmat, double *diag, double* roffdiag){$/;"	f
triplet_discon_correlators	LibHR/Observables/measure_mesons_ff.c	/^meson_observable *triplet_discon_correlators = NULL; \/\/For four fermion interaction$/;"	v
true	Converter/ChromaUtils/main.c	/^#define true /;"	d	file:
true	Converter/converter.c	/^#define true /;"	d	file:
true	LibHR/Geometry/geometry_mpi_eo.c	/^#define true /;"	d	file:
true	LibHR/Geometry/test_geometry_mpi.c	/^#define true /;"	d	file:
true_addr	LibHR/Memory/amalloc.c	/^   char *true_addr;$/;"	m	struct:addr_t	file:
truncated	LibHR/Observables/g5QMR_trunc.c	/^static short int truncated;$/;"	v	file:
tsplit	LibHR/Observables/measure_scattering.c	/^int tsplit(int ipt, int delta)$/;"	f
tsrc	Scattering/IOroutines.c	/^	int tsrc;$/;"	m	struct:_input_scatt	file:
tsrc	Scattering/meson_scattering.c	/^	int tsrc;$/;"	m	struct:_input_scatt	file:
twist_XYZ_bc	RenormalizationFactors/measure_Z_mom.c	/^static void twist_XYZ_bc(double theta_x, double theta_y, double theta_z) {$/;"	f	file:
two_to_index	LibHR/Utils/HYP_smearing.c	/^static int two_to_index[4][4];$/;"	v	file:
type	GaugeFix/gaugefix_measure.c	/^  int type;$/;"	m	struct:__anon8	file:
type	GaugeFix/gaugefix_unittest.c	/^  int type;$/;"	m	struct:__anon10	file:
type	HMC/hmc_forces.c	/^  int type;$/;"	m	struct:__anon12	file:
type	Include/input_par.h	/^  datatype_t type;$/;"	m	struct:_input_record_t
type	Include/update.h	/^  mon_type type; \/* type of monomial *\/$/;"	m	struct:_monomial_data
type	ModeNumber/mk_eigvals.c	/^  int type;$/;"	m	struct:__anon71	file:
type	ModeNumber/mk_modenumber.c	/^  int type;$/;"	m	struct:__anon73	file:
type	RenormalizationFactors/measure_Z_mom.c	/^  int type;$/;"	m	struct:__anon75	file:
type	Scattering/IOroutines.c	/^	int type;$/;"	m	struct:__anon78	file:
type	Scattering/meson_scattering.c	/^	int type;$/;"	m	struct:__anon80	file:
type	Spectrum/measure_formfactor.c	/^  int type;$/;"	m	struct:__anon83	file:
type	Spectrum/measure_spectrum.c	/^  int type;$/;"	m	struct:__anon85	file:
type	Spectrum/mk_mesons.c	/^  int type;$/;"	m	struct:__anon87	file:
type	Spectrum/mk_mesons_with_z2semwall.c	/^  int type;$/;"	m	struct:__anon89	file:
type	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int type;$/;"	m	struct:__anon91	file:
type	Spectrum/mk_sfcoupling.c	/^  int type;$/;"	m	struct:__anon93	file:
type	Spectrum/trunc_mesons.c	/^  int type;$/;"	m	struct:__anon95	file:
type	StaticPotential/mk_polyakov_loops.c	/^  int type;$/;"	m	struct:__anon97	file:
type	StaticPotential/mk_wilsonloops.c	/^  int type;$/;"	m	struct:__anon99	file:
type	StaticPotential/tune_HYP_smearing.c	/^  int type;$/;"	m	struct:__anon101	file:
type	TestProgram/Deflate/check_deflate.c	/^  int type;$/;"	m	struct:__anon104	file:
type	TestProgram/Propagator/check_propagator.c	/^  int type;$/;"	m	struct:__anon107	file:
type	WilsonFlow/WF_measure.c	/^  int type;$/;"	m	struct:__anon113	file:
type	WilsonFlow/WF_measure_adaptative.c	/^  int type;$/;"	m	struct:__anon115	file:
u	LibHR/Update/random_su2.c	/^static double r[NRAN],u[NRAN],v[NRAN],y[NRAN];$/;"	v	file:
u1dn	LibHR/Update/rect_staples.c	/^static suNg *u1dn,*u2dn,*u3dn,*u4dn,*u5dn;$/;"	v	file:
u1up	LibHR/Update/rect_staples.c	/^static suNg *u1up,*u2up,*u3up,*u4up,*u5up;$/;"	v	file:
u2dn	LibHR/Update/rect_staples.c	/^static suNg *u1dn,*u2dn,*u3dn,*u4dn,*u5dn;$/;"	v	file:
u2up	LibHR/Update/rect_staples.c	/^static suNg *u1up,*u2up,*u3up,*u4up,*u5up;$/;"	v	file:
u3dn	LibHR/Update/rect_staples.c	/^static suNg *u1dn,*u2dn,*u3dn,*u4dn,*u5dn;$/;"	v	file:
u3up	LibHR/Update/rect_staples.c	/^static suNg *u1up,*u2up,*u3up,*u4up,*u5up;$/;"	v	file:
u4dn	LibHR/Update/rect_staples.c	/^static suNg *u1dn,*u2dn,*u3dn,*u4dn,*u5dn;$/;"	v	file:
u4up	LibHR/Update/rect_staples.c	/^static suNg *u1up,*u2up,*u3up,*u4up,*u5up;$/;"	v	file:
u5dn	LibHR/Update/rect_staples.c	/^static suNg *u1dn,*u2dn,*u3dn,*u4dn,*u5dn;$/;"	v	file:
u5up	LibHR/Update/rect_staples.c	/^static suNg *u1up,*u2up,*u3up,*u4up,*u5up;$/;"	v	file:
u_gauge_backup	WilsonFlow/wilsonflow.c	/^static suNg_field* u_gauge_backup=NULL;$/;"	v	file:
u_gauge_old	LibHR/Update/update_mt.c	/^static suNg_field *u_gauge_old=NULL;$/;"	v	file:
unit_gauge	GaugeFix/gaugefix.c	/^void unit_gauge(suNg_field *gauge){$/;"	f
unit_gauge	Scattering/scatter_test.c	/^void unit_gauge(suNg_field *gauge){$/;"	f
unit_u	LibHR/Random/random_fields.c	/^void unit_u(suNg_field *gf)$/;"	f
update	Analysis/Mesons/ranlxs.cpp	/^  void update()$/;"	f	namespace:__anon4
update	LibHR/Random/ranlxd.c	/^static void update(void)$/;"	f	file:
update	LibHR/Random/ranlxs.c	/^static void update(void)$/;"	f	file:
update	LibHR/Update/update_hb.c	/^void update(double beta,int nhb,int nor)$/;"	f
update_all	LibHR/Update/update_hb.c	/^static void update_all(double beta,int type)$/;"	f	file:
update_auxfields	LibHR/Update/force_4f.c	/^void update_auxfields( double dt ){$/;"	f
update_gauge_field	LibHR/Update/integrators.c	/^void update_gauge_field(suNg_av_field *momenta, double dt) {$/;"	f
update_ghmc	LibHR/Update/update_mt.c	/^int update_ghmc()$/;"	f
update_par	LibHR/Update/update_mt.c	/^static ghmc_par update_par;$/;"	v	file:
update_vec	LibHR/Update/random_su2.c	/^static void update_vec(void)$/;"	f	file:
update_y	LibHR/Update/random_su2.c	/^static void update_y(void)$/;"	f	file:
use_input_mass	Spectrum/measure_spectrum.c	/^  int use_input_mass;$/;"	m	struct:_input_mesons	file:
v	LibHR/Update/mre.c	/^static spinor_field *v[MAX];$/;"	v	file:
v	LibHR/Update/random_su2.c	/^static double r[NRAN],u[NRAN],v[NRAN],y[NRAN];$/;"	v	file:
v	TestProgram/SpinorField/check_spinorfield_1.c	/^static complex v[25];$/;"	v	file:
val	Analysis/Mesons/datasample.h	/^  double val;$/;"	m	struct:estimate
value	LibHR/IO/read_action.c	/^   char value[MAX_VALUES][MAX_LENGTH];$/;"	m	struct:__anon47	file:
value	Make/Utils/autosun/list.h	/^		VALUE value;$/;"	m	struct:orderedlist::ELEMENT
vec	LibHR/Random/ranlxd.c	/^   dble_vec_t vec[12];$/;"	m	union:__anon59	file:
vec	LibHR/Random/ranlxd.c	/^   dble_vec_t vec[12];$/;"	m	union:__anon62	file:
vec	LibHR/Random/ranlxs.c	/^   dble_vec_t vec[12];$/;"	m	union:__anon65	file:
vec	LibHR/Random/ranlxs.c	/^   dble_vec_t vec[12];$/;"	m	union:__anon68	file:
vec1	LibHR/Update/random_su2.c	/^static double vec1[NVEC],vec2[NVEC],vec3[NVEC];$/;"	v	file:
vec2	LibHR/Update/random_su2.c	/^static double vec1[NVEC],vec2[NVEC],vec3[NVEC];$/;"	v	file:
vec3	LibHR/Update/random_su2.c	/^static double vec1[NVEC],vec2[NVEC],vec3[NVEC];$/;"	v	file:
vec_t	LibHR/Random/ranlxd.c	/^} vec_t __attribute__ ((aligned (16)));$/;"	t	typeref:struct:__anon57	file:
vec_t	LibHR/Random/ranlxd.c	/^} vec_t;$/;"	t	typeref:struct:__anon60	file:
vec_t	LibHR/Random/ranlxs.c	/^} vec_t __attribute__ ((aligned (16)));$/;"	t	typeref:struct:__anon63	file:
vec_t	LibHR/Random/ranlxs.c	/^} vec_t;$/;"	t	typeref:struct:__anon66	file:
vector_gammas	LibHR/Observables/measure_mesons.c	/^static int vector_gammas[4] = {_g0, _g1, _g2, _g3};$/;"	v	file:
vector_gammas	LibHR/Observables/measure_mesons_ff.c	/^static int vector_gammas[4] = {_g0, _g1, _g2, _g3};$/;"	v	file:
verblevel	LibHR/IO/logger.c	/^static int verblevel=0; \/* the default verbosity level *\/$/;"	v	file:
vindex	Make/Utils/autosun/sparse.h	/^	vindex() { row = 0; size = 0;}$/;"	f	struct:vindex
vindex	Make/Utils/autosun/sparse.h	/^	vindex(int r, int s)$/;"	f	struct:vindex
vindex	Make/Utils/autosun/sparse.h	/^struct vindex$/;"	s
vv	LibHR/Inverters/eva.c	/^static complex *aa,*bb,*cc,*vv;$/;"	v	file:
w0	ModeNumber/modenumber.c	/^static spinor_field *w0, *w1, *w2, *x, *eta;$/;"	v	file:
w1	ModeNumber/modenumber.c	/^static spinor_field *w0, *w1, *w2, *x, *eta;$/;"	v	file:
w2	ModeNumber/modenumber.c	/^static spinor_field *w0, *w1, *w2, *x, *eta;$/;"	v	file:
walk_on_lattice	LibHR/Geometry/geometry_mpi_eo.c	/^static void walk_on_lattice(int id_mask,int eotype,int level,int id_zone, int* bl_start,int* incr,int* bl_width)$/;"	f	file:
weight	StaticPotential/mk_wilsonloops.c	/^  double weight[3];$/;"	m	struct:_input_HYP	file:
which_endian	LibHR/IO/endian.c	/^static int which_endian() {$/;"	f	file:
wmatrix	LibHR/Update/cabmar.c	/^static inline void wmatrix(suNg_vector *pu1, suNg_vector *pu2, suNg_vector *pv1, suNg_vector *pv2, double *w)$/;"	f	file:
write	Converter/converter.c	/^  void (*write)(char*);$/;"	m	struct:_format_type	file:
write_algebra_vector_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_algebra_vector_add_assign {$/;"	s
write_algebra_vector_mul	Make/Utils/write_suN_headers.pl	/^sub write_algebra_vector_mul {$/;"	s
write_algebra_vector_mul_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_algebra_vector_mul_add_assign {$/;"	s
write_algebra_vector_sqnorm	Make/Utils/write_suN_headers.pl	/^sub write_algebra_vector_sqnorm {$/;"	s
write_algebra_vector_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_algebra_vector_sub_assign {$/;"	s
write_algebra_vector_zero	Make/Utils/write_suN_headers.pl	/^sub write_algebra_vector_zero {$/;"	s
write_epilog	Make/Utils/write_suN_headers.pl	/^sub write_epilog {$/;"	s
write_gauge_field	LibHR/IO/archive.c	/^void write_gauge_field(char filename[]){$/;"	f
write_gauge_field_eolexi_BE	Converter/archive_eolexi.c	/^void write_gauge_field_eolexi_BE(char filename[]) $/;"	f
write_gauge_field_eolexi_LE	Converter/archive_eolexi.c	/^void write_gauge_field_eolexi_LE(char filename[]) $/;"	f
write_gauge_field_matrix	LibHR/IO/archive.c	/^void write_gauge_field_matrix(char filename[]) $/;"	f
write_gauge_field_mpieo_BE	Converter/archive_more_mpieo.c	/^void write_gauge_field_mpieo_BE(char filename[]) $/;"	f
write_gauge_field_mpieo_LE	Converter/archive_more_mpieo.c	/^void write_gauge_field_mpieo_LE(char filename[]) $/;"	f
write_gauge_field_su2q	LibHR/IO/archive_su2quat.c	/^void write_gauge_field_su2q(char filename[])$/;"	f
write_prolog_suN	Make/Utils/write_suN_headers.pl	/^sub write_prolog_suN {$/;"	s
write_prolog_suN_types	Make/Utils/write_suN_headers.pl	/^sub write_prolog_suN_types {$/;"	s
write_ranlxd_state	LibHR/IO/archive.c	/^void write_ranlxd_state(char filename[]) $/;"	f
write_read_spinor_gpu	Make/Utils/write_suN_headers.pl	/^sub  write_read_spinor_gpu {$/;"	s
write_spinor	Make/Utils/write_suN_headers.pl	/^sub write_spinor {$/;"	s
write_spinor_add	Make/Utils/write_suN_headers.pl	/^sub write_spinor_add {$/;"	s
write_spinor_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_add_assign {$/;"	s
write_spinor_clc	Make/Utils/write_suN_headers.pl	/^sub write_spinor_clc {$/;"	s
write_spinor_clc_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_clc_add_assign {$/;"	s
write_spinor_copy	Make/Utils/write_suN_headers.pl	/^sub write_spinor_copy {$/;"	s
write_spinor_field	LibHR/IO/archive_spinors.c	/^void write_spinor_field(char filename[],spinor_field* sp) $/;"	f
write_spinor_g5	Make/Utils/write_suN_headers.pl	/^sub write_spinor_g5 {$/;"	s
write_spinor_g5_prod_im	Make/Utils/write_suN_headers.pl	/^sub write_spinor_g5_prod_im {$/;"	s
write_spinor_g5_prod_re	Make/Utils/write_suN_headers.pl	/^sub write_spinor_g5_prod_re {$/;"	s
write_spinor_i_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_i_add_assign {$/;"	s
write_spinor_i_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_i_sub_assign {$/;"	s
write_spinor_lc	Make/Utils/write_suN_headers.pl	/^sub write_spinor_lc {$/;"	s
write_spinor_lc_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_lc_add_assign {$/;"	s
write_spinor_minus	Make/Utils/write_suN_headers.pl	/^sub write_spinor_minus {$/;"	s
write_spinor_mul	Make/Utils/write_suN_headers.pl	/^sub write_spinor_mul {$/;"	s
write_spinor_mul_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_mul_add_assign {$/;"	s
write_spinor_mulc	Make/Utils/write_suN_headers.pl	/^sub write_spinor_mulc {$/;"	s
write_spinor_mulc_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_mulc_add_assign {$/;"	s
write_spinor_pminus	Make/Utils/write_suN_headers.pl	/^sub write_spinor_pminus {$/;"	s
write_spinor_pplus	Make/Utils/write_suN_headers.pl	/^sub write_spinor_pplus {$/;"	s
write_spinor_prod	Make/Utils/write_suN_headers.pl	/^sub write_spinor_prod {$/;"	s
write_spinor_prod_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_prod_assign {$/;"	s
write_spinor_prod_im	Make/Utils/write_suN_headers.pl	/^sub write_spinor_prod_im {$/;"	s
write_spinor_prod_re	Make/Utils/write_suN_headers.pl	/^sub write_spinor_prod_re {$/;"	s
write_spinor_project	Make/Utils/write_suN_headers.pl	/^sub write_spinor_project {$/;"	s
write_spinor_sub	Make/Utils/write_suN_headers.pl	/^sub write_spinor_sub {$/;"	s
write_spinor_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_spinor_sub_assign {$/;"	s
write_spinor_zero	Make/Utils/write_suN_headers.pl	/^sub write_spinor_zero {$/;"	s
write_su2	Make/Utils/write_suN_headers.pl	/^sub write_su2 {$/;"	s
write_su2_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_su2_add_assign{$/;"	s
write_su2_dagger	Make/Utils/write_suN_headers.pl	/^sub write_su2_dagger {$/;"	s
write_su2_dagger_times_su2	Make/Utils/write_suN_headers.pl	/^sub write_su2_dagger_times_su2{$/;"	s
write_su2_decode	Make/Utils/write_suN_headers.pl	/^sub write_su2_decode {$/;"	s
write_su2_exp	Make/Utils/write_suN_headers.pl	/^sub write_su2_exp {$/;"	s
write_su2_inverse_multiply	Make/Utils/write_suN_headers.pl	/^sub write_su2_inverse_multiply {$/;"	s
write_su2_minus	Make/Utils/write_suN_headers.pl	/^sub write_su2_minus {$/;"	s
write_su2_mul	Make/Utils/write_suN_headers.pl	/^sub write_su2_mul{$/;"	s
write_su2_multiply	Make/Utils/write_suN_headers.pl	/^sub write_su2_multiply {$/;"	s
write_su2_read_gpu	Make/Utils/write_suN_headers.pl	/^sub write_su2_read_gpu {$/;"	s
write_su2_sqnorm	Make/Utils/write_suN_headers.pl	/^sub write_su2_sqnorm {$/;"	s
write_su2_sqnorm_m1	Make/Utils/write_suN_headers.pl	/^sub write_su2_sqnorm_m1 {$/;"	s
write_su2_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_su2_sub_assign{$/;"	s
write_su2_times_su2	Make/Utils/write_suN_headers.pl	/^sub write_su2_times_su2{$/;"	s
write_su2_times_su2_dagger	Make/Utils/write_suN_headers.pl	/^sub write_su2_times_su2_dagger{$/;"	s
write_su2_trace_im	Make/Utils/write_suN_headers.pl	/^sub write_su2_trace_im{$/;"	s
write_su2_trace_re	Make/Utils/write_suN_headers.pl	/^sub write_su2_trace_re{$/;"	s
write_su2_unit	Make/Utils/write_suN_headers.pl	/^sub write_su2_unit {$/;"	s
write_su2_write_gpu	Make/Utils/write_suN_headers.pl	/^sub write_su2_write_gpu {$/;"	s
write_su2_zero	Make/Utils/write_suN_headers.pl	/^sub write_su2_zero {$/;"	s
write_su3_myrandom	Make/Utils/write_suN_headers.pl	/^sub write_su3_myrandom {$/;"	s
write_suN	Make/Utils/write_suN_headers.pl	/^sub write_suN {$/;"	s
write_suN_2TA	Make/Utils/write_suN_headers.pl	/^sub write_suN_2TA {$/;"	s
write_suN_FMAT	Make/Utils/write_suN_headers.pl	/^sub write_suN_FMAT {$/;"	s
write_suN_TA	Make/Utils/write_suN_headers.pl	/^sub write_suN_TA {$/;"	s
write_suN_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_suN_add_assign {$/;"	s
write_suN_algebra_vector	Make/Utils/write_suN_headers.pl	/^sub write_suN_algebra_vector {$/;"	s
write_suN_av_mul_add_assign_gpu	Make/Utils/write_suN_headers.pl	/^sub write_suN_av_mul_add_assign_gpu {$/;"	s
write_suN_av_read_gpu	Make/Utils/write_suN_headers.pl	/^sub write_suN_av_read_gpu {$/;"	s
write_suN_av_write_gpu	Make/Utils/write_suN_headers.pl	/^sub write_suN_av_write_gpu {$/;"	s
write_suN_copy	Make/Utils/write_suN_headers.pl	/^sub write_suN_copy {$/;"	s
write_suN_dagger	Make/Utils/write_suN_headers.pl	/^sub write_suN_dagger {$/;"	s
write_suN_dagger_times_suN	Make/Utils/write_suN_headers.pl	/^sub write_suN_dagger_times_suN {$/;"	s
write_suN_h	Make/Utils/write_suN_headers.pl	/^sub write_suN_h {$/;"	s
write_suN_inverse_multiply	Make/Utils/write_suN_headers.pl	/^sub write_suN_inverse_multiply {$/;"	s
write_suN_minus	Make/Utils/write_suN_headers.pl	/^sub write_suN_minus {$/;"	s
write_suN_mul	Make/Utils/write_suN_headers.pl	/^sub write_suN_mul {$/;"	s
write_suN_mulc	Make/Utils/write_suN_headers.pl	/^sub write_suN_mulc {$/;"	s
write_suN_multiply	Make/Utils/write_suN_headers.pl	/^sub write_suN_multiply {$/;"	s
write_suN_read_gpu	Make/Utils/write_suN_headers.pl	/^sub write_suN_read_gpu {$/;"	s
write_suN_sqnorm	Make/Utils/write_suN_headers.pl	/^sub write_suN_sqnorm {$/;"	s
write_suN_sqnorm_m1	Make/Utils/write_suN_headers.pl	/^sub write_suN_sqnorm_m1 {$/;"	s
write_suN_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_suN_sub_assign {$/;"	s
write_suN_times_suN	Make/Utils/write_suN_headers.pl	/^sub write_suN_times_suN {$/;"	s
write_suN_times_suN_dagger	Make/Utils/write_suN_headers.pl	/^sub write_suN_times_suN_dagger {$/;"	s
write_suN_trace_im	Make/Utils/write_suN_headers.pl	/^sub write_suN_trace_im {$/;"	s
write_suN_trace_re	Make/Utils/write_suN_headers.pl	/^sub write_suN_trace_re {$/;"	s
write_suN_unit	Make/Utils/write_suN_headers.pl	/^sub write_suN_unit {$/;"	s
write_suN_vector	Make/Utils/write_suN_headers.pl	/^sub write_suN_vector {$/;"	s
write_suN_write_gpu	Make/Utils/write_suN_headers.pl	/^sub write_suN_write_gpu {$/;"	s
write_suN_zero	Make/Utils/write_suN_headers.pl	/^sub write_suN_zero {$/;"	s
write_suNr	Make/Utils/write_suN_headers.pl	/^sub write_suNr {$/;"	s
write_suNr_FMAT	Make/Utils/write_suN_headers.pl	/^sub write_suNr_FMAT {$/;"	s
write_suNr_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_suNr_add_assign {$/;"	s
write_suNr_dagger	Make/Utils/write_suN_headers.pl	/^sub write_suNr_dagger {$/;"	s
write_suNr_dagger_times_suNr	Make/Utils/write_suN_headers.pl	/^sub write_suNr_dagger_times_suNr {$/;"	s
write_suNr_inverse_multiply	Make/Utils/write_suN_headers.pl	/^sub write_suNr_inverse_multiply {$/;"	s
write_suNr_minus	Make/Utils/write_suN_headers.pl	/^sub write_suNr_minus {$/;"	s
write_suNr_mul	Make/Utils/write_suN_headers.pl	/^sub write_suNr_mul {$/;"	s
write_suNr_multiply	Make/Utils/write_suN_headers.pl	/^sub write_suNr_multiply {$/;"	s
write_suNr_read_gpu	Make/Utils/write_suN_headers.pl	/^sub write_suNr_read_gpu {$/;"	s
write_suNr_sqnorm	Make/Utils/write_suN_headers.pl	/^sub write_suNr_sqnorm {$/;"	s
write_suNr_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_suNr_sub_assign {$/;"	s
write_suNr_times_suNr	Make/Utils/write_suN_headers.pl	/^sub write_suNr_times_suNr {$/;"	s
write_suNr_times_suNr_dagger	Make/Utils/write_suN_headers.pl	/^sub write_suNr_times_suNr_dagger {$/;"	s
write_suNr_trace_re	Make/Utils/write_suN_headers.pl	/^sub write_suNr_trace_re {$/;"	s
write_suNr_unit	Make/Utils/write_suN_headers.pl	/^sub write_suNr_unit {$/;"	s
write_suNr_write_gpu	Make/Utils/write_suN_headers.pl	/^sub write_suNr_write_gpu {$/;"	s
write_suNr_zero	Make/Utils/write_suN_headers.pl	/^sub write_suNr_zero {$/;"	s
write_vector_add	Make/Utils/write_suN_headers.pl	/^sub write_vector_add {$/;"	s
write_vector_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_add_assign {$/;"	s
write_vector_clc	Make/Utils/write_suN_headers.pl	/^sub write_vector_clc {$/;"	s
write_vector_clc_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_clc_add_assign {$/;"	s
write_vector_copy	Make/Utils/write_suN_headers.pl	/^sub write_vector_copy {$/;"	s
write_vector_i_add	Make/Utils/write_suN_headers.pl	/^sub write_vector_i_add {$/;"	s
write_vector_i_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_i_add_assign {$/;"	s
write_vector_i_minus	Make/Utils/write_suN_headers.pl	/^sub write_vector_i_minus {$/;"	s
write_vector_i_plus	Make/Utils/write_suN_headers.pl	/^sub write_vector_i_plus {$/;"	s
write_vector_i_sub	Make/Utils/write_suN_headers.pl	/^sub write_vector_i_sub {$/;"	s
write_vector_i_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_i_sub_assign {$/;"	s
write_vector_iszero	Make/Utils/write_suN_headers.pl	/^sub write_vector_iszero {$/;"	s
write_vector_lc	Make/Utils/write_suN_headers.pl	/^sub write_vector_lc {$/;"	s
write_vector_lc_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_lc_add_assign {$/;"	s
write_vector_minus	Make/Utils/write_suN_headers.pl	/^sub write_vector_minus {$/;"	s
write_vector_mul	Make/Utils/write_suN_headers.pl	/^sub write_vector_mul {$/;"	s
write_vector_mul_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_mul_add_assign {$/;"	s
write_vector_mulc	Make/Utils/write_suN_headers.pl	/^sub write_vector_mulc {$/;"	s
write_vector_mulc_add_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_mulc_add_assign {$/;"	s
write_vector_mulc_star	Make/Utils/write_suN_headers.pl	/^sub write_vector_mulc_star {$/;"	s
write_vector_myrandom	Make/Utils/write_suN_headers.pl	/^sub write_vector_myrandom {$/;"	s
write_vector_prod_add_assign_im	Make/Utils/write_suN_headers.pl	/^sub write_vector_prod_add_assign_im {$/;"	s
write_vector_prod_add_assign_re	Make/Utils/write_suN_headers.pl	/^sub write_vector_prod_add_assign_re {$/;"	s
write_vector_prod_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_prod_assign {$/;"	s
write_vector_prod_im	Make/Utils/write_suN_headers.pl	/^sub write_vector_prod_im {$/;"	s
write_vector_prod_re	Make/Utils/write_suN_headers.pl	/^sub write_vector_prod_re {$/;"	s
write_vector_prod_sub_assign_im	Make/Utils/write_suN_headers.pl	/^sub write_vector_prod_sub_assign_im {$/;"	s
write_vector_prod_sub_assign_re	Make/Utils/write_suN_headers.pl	/^sub write_vector_prod_sub_assign_re {$/;"	s
write_vector_project	Make/Utils/write_suN_headers.pl	/^sub write_vector_project {$/;"	s
write_vector_sub	Make/Utils/write_suN_headers.pl	/^sub write_vector_sub {$/;"	s
write_vector_sub_assign	Make/Utils/write_suN_headers.pl	/^sub write_vector_sub_assign {$/;"	s
write_vector_zero	Make/Utils/write_suN_headers.pl	/^sub write_vector_zero {$/;"	s
write_write_spinor_gpu	Make/Utils/write_suN_headers.pl	/^sub  write_write_spinor_gpu {$/;"	s
ws	Analysis/Mesons/bs_ctrl.h	/^  double** ws;$/;"	m	class:primary_ctrl
ws_gf	WilsonFlow/wilsonflow.c	/^static suNg_field* ws_gf=NULL;$/;"	v	file:
ws_gf_tmp	WilsonFlow/wilsonflow.c	/^static suNg_field* ws_gf_tmp=NULL;$/;"	v	file:
ws_gtf	LibHR/Observables/wilsonloops.c	/^static suNg_field* ws_gtf[2]; \/* gtf = gauge transformation field *\/$/;"	v	file:
x	GaugeFix/gaugefix_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon8	file:
x	GaugeFix/gaugefix_unittest.c	/^  int t, x, y, z;$/;"	m	struct:__anon10	file:
x	HMC/hmc_forces.c	/^  int t, x, y, z;$/;"	m	struct:__anon12	file:
x	LibHR/Random/ranlxd.c	/^} x __attribute__ ((aligned (16)));$/;"	v	typeref:union:__anon59	file:
x	LibHR/Random/ranlxd.c	/^} x;$/;"	v	typeref:union:__anon62	file:
x	LibHR/Random/ranlxs.c	/^} x __attribute__ ((aligned (16)));$/;"	v	typeref:union:__anon65	file:
x	LibHR/Random/ranlxs.c	/^} x;$/;"	v	typeref:union:__anon68	file:
x	LibHR/Update/mre.c	/^static complex x[MAX];$/;"	v	file:
x	LibHR/Update/remez/bigfloat.h	/^  mpf_t x;$/;"	m	class:bigfloat
x	ModeNumber/mk_eigvals.c	/^  int t, x, y, z;$/;"	m	struct:__anon71	file:
x	ModeNumber/mk_modenumber.c	/^  int t, x, y, z;$/;"	m	struct:__anon73	file:
x	ModeNumber/modenumber.c	/^static spinor_field *w0, *w1, *w2, *x, *eta;$/;"	v	file:
x	RenormalizationFactors/measure_Z_mom.c	/^  int t, x, y, z;$/;"	m	struct:__anon75	file:
x	Scattering/IOroutines.c	/^	int t, x, y, z;$/;"	m	struct:__anon78	file:
x	Scattering/meson_scattering.c	/^	int t, x, y, z;$/;"	m	struct:__anon80	file:
x	Spectrum/measure_formfactor.c	/^  int t, x, y, z;$/;"	m	struct:__anon83	file:
x	Spectrum/measure_spectrum.c	/^  int t, x, y, z;$/;"	m	struct:__anon85	file:
x	Spectrum/mk_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon87	file:
x	Spectrum/mk_mesons_with_z2semwall.c	/^  int t, x, y, z;$/;"	m	struct:__anon89	file:
x	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int t, x, y, z;$/;"	m	struct:__anon91	file:
x	Spectrum/mk_sfcoupling.c	/^  int t, x, y, z;$/;"	m	struct:__anon93	file:
x	Spectrum/trunc_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon95	file:
x	StaticPotential/mk_polyakov_loops.c	/^  int t, x, y, z;$/;"	m	struct:__anon97	file:
x	StaticPotential/mk_wilsonloops.c	/^  int t, x, y, z;$/;"	m	struct:__anon99	file:
x	StaticPotential/tune_HYP_smearing.c	/^  int t, x, y, z;$/;"	m	struct:__anon101	file:
x	TestProgram/Deflate/check_deflate.c	/^  int t, x, y, z;$/;"	m	struct:__anon104	file:
x	TestProgram/Propagator/check_propagator.c	/^  int t, x, y, z;$/;"	m	struct:__anon107	file:
x	WilsonFlow/WF_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon113	file:
x	WilsonFlow/WF_measure_adaptative.c	/^  int t, x, y, z;$/;"	m	struct:__anon115	file:
xbl	LibHR/Geometry/blocked.c	/^static int xbl,ybl,zbl,xnl,ynl,znl;$/;"	v	file:
xdbl	Analysis/Mesons/ranlxs.cpp	/^static double xdbl[12],ydbl[12];$/;"	v	file:
xflt	Analysis/Mesons/ranlxs.cpp	/^static float xflt[24];$/;"	v	file:
xi	LibHR/Update/force_hmc.c	/^static spinor_field *xi=NULL;$/;"	v	file:
xi	LibHR/Update/force_hmc_tm.c	/^static spinor_field *xi = NULL;$/;"	v	file:
xnl	LibHR/Geometry/blocked.c	/^static int xbl,ybl,zbl,xnl,ynl,znl;$/;"	v	file:
xx	LibHR/Update/remez/alg_remez.h	/^  bigfloat *xx, *mm, *step;$/;"	m	class:AlgRemez
y	GaugeFix/gaugefix_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon8	file:
y	GaugeFix/gaugefix_unittest.c	/^  int t, x, y, z;$/;"	m	struct:__anon10	file:
y	HMC/hmc_forces.c	/^  int t, x, y, z;$/;"	m	struct:__anon12	file:
y	LibHR/Update/mre.c	/^static complex y[MAX];$/;"	v	file:
y	LibHR/Update/random_su2.c	/^static double r[NRAN],u[NRAN],v[NRAN],y[NRAN];$/;"	v	file:
y	ModeNumber/mk_eigvals.c	/^  int t, x, y, z;$/;"	m	struct:__anon71	file:
y	ModeNumber/mk_modenumber.c	/^  int t, x, y, z;$/;"	m	struct:__anon73	file:
y	RenormalizationFactors/measure_Z_mom.c	/^  int t, x, y, z;$/;"	m	struct:__anon75	file:
y	Scattering/IOroutines.c	/^	int t, x, y, z;$/;"	m	struct:__anon78	file:
y	Scattering/meson_scattering.c	/^	int t, x, y, z;$/;"	m	struct:__anon80	file:
y	Spectrum/measure_formfactor.c	/^  int t, x, y, z;$/;"	m	struct:__anon83	file:
y	Spectrum/measure_spectrum.c	/^  int t, x, y, z;$/;"	m	struct:__anon85	file:
y	Spectrum/mk_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon87	file:
y	Spectrum/mk_mesons_with_z2semwall.c	/^  int t, x, y, z;$/;"	m	struct:__anon89	file:
y	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int t, x, y, z;$/;"	m	struct:__anon91	file:
y	Spectrum/mk_sfcoupling.c	/^  int t, x, y, z;$/;"	m	struct:__anon93	file:
y	Spectrum/trunc_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon95	file:
y	StaticPotential/mk_polyakov_loops.c	/^  int t, x, y, z;$/;"	m	struct:__anon97	file:
y	StaticPotential/mk_wilsonloops.c	/^  int t, x, y, z;$/;"	m	struct:__anon99	file:
y	StaticPotential/tune_HYP_smearing.c	/^  int t, x, y, z;$/;"	m	struct:__anon101	file:
y	TestProgram/Deflate/check_deflate.c	/^  int t, x, y, z;$/;"	m	struct:__anon104	file:
y	TestProgram/Propagator/check_propagator.c	/^  int t, x, y, z;$/;"	m	struct:__anon107	file:
y	WilsonFlow/WF_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon113	file:
y	WilsonFlow/WF_measure_adaptative.c	/^  int t, x, y, z;$/;"	m	struct:__anon115	file:
ybl	LibHR/Geometry/blocked.c	/^static int xbl,ybl,zbl,xnl,ynl,znl;$/;"	v	file:
ydbl	Analysis/Mesons/ranlxs.cpp	/^static double xdbl[12],ydbl[12];$/;"	v	file:
ynl	LibHR/Geometry/blocked.c	/^static int xbl,ybl,zbl,xnl,ynl,znl;$/;"	v	file:
z	GaugeFix/gaugefix_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon8	file:
z	GaugeFix/gaugefix_unittest.c	/^  int t, x, y, z;$/;"	m	struct:__anon10	file:
z	HMC/hmc_forces.c	/^  int t, x, y, z;$/;"	m	struct:__anon12	file:
z	ModeNumber/mk_eigvals.c	/^  int t, x, y, z;$/;"	m	struct:__anon71	file:
z	ModeNumber/mk_modenumber.c	/^  int t, x, y, z;$/;"	m	struct:__anon73	file:
z	RenormalizationFactors/measure_Z_mom.c	/^  int t, x, y, z;$/;"	m	struct:__anon75	file:
z	Scattering/IOroutines.c	/^	int t, x, y, z;$/;"	m	struct:__anon78	file:
z	Scattering/meson_scattering.c	/^	int t, x, y, z;$/;"	m	struct:__anon80	file:
z	Spectrum/measure_formfactor.c	/^  int t, x, y, z;$/;"	m	struct:__anon83	file:
z	Spectrum/measure_spectrum.c	/^  int t, x, y, z;$/;"	m	struct:__anon85	file:
z	Spectrum/mk_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon87	file:
z	Spectrum/mk_mesons_with_z2semwall.c	/^  int t, x, y, z;$/;"	m	struct:__anon89	file:
z	Spectrum/mk_mesons_with_z2semwall_new.c	/^  int t, x, y, z;$/;"	m	struct:__anon91	file:
z	Spectrum/mk_sfcoupling.c	/^  int t, x, y, z;$/;"	m	struct:__anon93	file:
z	Spectrum/trunc_mesons.c	/^  int t, x, y, z;$/;"	m	struct:__anon95	file:
z	StaticPotential/mk_polyakov_loops.c	/^  int t, x, y, z;$/;"	m	struct:__anon97	file:
z	StaticPotential/mk_wilsonloops.c	/^  int t, x, y, z;$/;"	m	struct:__anon99	file:
z	StaticPotential/tune_HYP_smearing.c	/^  int t, x, y, z;$/;"	m	struct:__anon101	file:
z	TestProgram/Deflate/check_deflate.c	/^  int t, x, y, z;$/;"	m	struct:__anon104	file:
z	TestProgram/Propagator/check_propagator.c	/^  int t, x, y, z;$/;"	m	struct:__anon107	file:
z	WilsonFlow/WF_measure.c	/^  int t, x, y, z;$/;"	m	struct:__anon113	file:
z	WilsonFlow/WF_measure_adaptative.c	/^  int t, x, y, z;$/;"	m	struct:__anon115	file:
z2_spinor_field	LibHR/Update/random_spinor_field.c	/^void z2_spinor_field(spinor_field *s) {$/;"	f
z2semwall_mesons	LibHR/Observables/z2semwall.c	/^void z2semwall_mesons(int conf, int nhits, int nm, double *m, double acc) {$/;"	f
z2semwall_mesons_new	LibHR/Observables/z2semwall_new.c	/^void z2semwall_mesons_new(int conf, int nhits, int nm, double *m, double acc) {$/;"	f
z2semwall_qprop_QMR_eo	LibHR/Observables/z2semwall.c	/^static void z2semwall_qprop_QMR_eo(void (*Gamma)(suNf_spinor*,suNf_spinor*), spinor_field *psi, spinor_field *eta) {$/;"	f	file:
z2semwall_qprop_QMR_eo	LibHR/Observables/z2semwall_new.c	/^static void z2semwall_qprop_QMR_eo(spinor_field *psi, spinor_field *eta) {$/;"	f	file:
z2semwall_qprop_free	LibHR/Observables/z2semwall.c	/^void z2semwall_qprop_free() {$/;"	f
z2semwall_qprop_free_new	LibHR/Observables/z2semwall_new.c	/^void z2semwall_qprop_free_new() {$/;"	f
z2semwall_qprop_init	LibHR/Observables/z2semwall.c	/^static void z2semwall_qprop_init(int nm, double *m, double acc) {$/;"	f	file:
z2semwall_qprop_init	LibHR/Observables/z2semwall_new.c	/^static void z2semwall_qprop_init(int nm, double *m, double acc) {$/;"	f	file:
zbl	LibHR/Geometry/blocked.c	/^static int xbl,ybl,zbl,xnl,ynl,znl;$/;"	v	file:
zero	Analysis/Mesons/ranlxs.cpp	/^static double zero,one,carry;$/;"	v	file:
zero	ModeNumber/approx_for_modenumber.c	/^static double zero(double (*fptr)(int,double*,double,double), int n, double *c, double epsilon, double a, double b, double prec) {$/;"	f	file:
zero_corrs	LibHR/Observables/measure_mesons.c	/^static void zero_corrs(meson_observable* mo){$/;"	f	file:
zero_even_or_odd_site_spinorfield	Disconnected/loop_tools.c	/^void zero_even_or_odd_site_spinorfield(spinor_field *source,int nspinor,int eo)$/;"	f
znl	LibHR/Geometry/blocked.c	/^static int xbl,ybl,zbl,xnl,ynl,znl;$/;"	v	file:
zolotarev_coef	LibHR/Update/remez/Zolotarev/zolotarev.c	/^void zolotarev_coef(int n, real k, real *a, real *b, real *delta){$/;"	f
zolotarev_invsqrt	LibHR/Update/remez/Zolotarev/zolotarev.c	/^real zolotarev_invsqrt(real x, int n, real *a, real *b){$/;"	f
zolotarev_sign	LibHR/Update/remez/Zolotarev/zolotarev.c	/^real zolotarev_sign(real x, int n, real *a, real *b){$/;"	f
zone_border	LibHR/Geometry/geometry_mpi_eo.c	/^static int zone_border(int ix){$/;"	f	file:
~AlgRemez	LibHR/Update/remez/alg_remez.C	/^AlgRemez::~AlgRemez()$/;"	f	class:AlgRemez
~Corr_t	Analysis/Mesons/bs_type.h	/^  ~Corr_t() { delete[] d; }$/;"	f	class:Corr_t
~bigfloat	LibHR/Update/remez/bigfloat.h	/^  ~bigfloat(void) { mpf_clear(x); }$/;"	f	class:bigfloat
~datasample	Analysis/Mesons/datasample.h	/^  ~datasample(){}$/;"	f	class:datasample
~derived_ctrl	Analysis/Mesons/bs_ctrl.cpp	/^derived_ctrl::~derived_ctrl(){$/;"	f	class:derived_ctrl
~eval_ctrl	Analysis/Mesons/bs_ctrl.h	/^  virtual ~eval_ctrl() {};$/;"	f	class:eval_ctrl
~orderedlist	Make/Utils/autosun/list.h	/^template<class INDEX, class VALUE> orderedlist<INDEX,VALUE>::~orderedlist<INDEX,VALUE>()$/;"	f	class:orderedlist
~primary_ctrl	Analysis/Mesons/bs_ctrl.cpp	/^primary_ctrl::~primary_ctrl(){$/;"	f	class:primary_ctrl
~ratio_ctrl	Analysis/Mesons/bs_ctrl.cpp	/^ratio_ctrl::~ratio_ctrl(){$/;"	f	class:ratio_ctrl
