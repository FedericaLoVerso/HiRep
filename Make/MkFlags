NG = 2
#REPR = REPR_FUNDAMENTAL
#REPR = REPR_SYMMETRIC
#REPR = REPR_ANTISYMMETRIC
REPR = REPR_ADJOINT

## Boundary conditins
#MACRO += -DANTIPERIODIC_BC_T
#MACRO += -DANTIPERIODIC_BC_X
#MACRO += -DANTIPERIODIC_BC_Y
#MACRO += -DANTIPERIODIC_BC_Z
#MACRO += -DTWISTED_BC

##################
#### OPTIONS #####
##################
MACRO += -DUPDATE_EO
#MACRO += -DWITH_MPI
MACRO += -DWITH_GPU
MACRO += -DWITH_QUATERNIONS

## SF
#MACRO += -DBASIC_SF
#MACRO += -DROTATED_SF

##################
##### DEBUG ######
##################
#MACRO += -DNDEBUG
#MACRO += -DCUDA_CHECK_ERROR
#MACRO += -DCHECK_SPINOR_MATCHING
#MACRO += -DMPI_TIMING
#MACRO += -DIO_FLUSH

#Compiler
#export OMPI_CC = ccache gcc
ifeq (,$(findstring -DWITH_GPU,$(MACRO))) #Compile CPU only
CC = gcc
CFLAGS = -Wall -std=c99 -O2 -fomit-frame-pointer -mfpmath=sse -msse -msse2 
#CFLAGS = -Wall -std=c99 -g -mfpmath=sse -msse -msse2 
else #Compile with GPU
CC = nvcc 
CFLAGS = -g -Xcompiler '-std=c99 -fgcse-sm -fgcse-las -fgcse-after-reload'
GPUFLAGS = --x cu -arch=sm_20 --use_fast_math -Xptxas -v  -Xptxas -dlcm=ca 
#GPUFLAGS = --x cu -arch=sm_11 -Xptxas -v -Xptxas -dlcm=ca 
endif

##########################################################################
# DO NOT EDIT BEYOND THIS POINT
##########################################################################

#Macros
MACRO += -D$(REPR) -DREPR_NAME=\"$(REPR)\"

#CFLAGS += -std=c99

WQUAT = $(if $(findstring -DWITH_QUATERNIONS,$(MACRO)),1,0)

#Include
INCDIR = $(TOPDIR)/Include
INC = -I $(INCDIR)

GCC = gcc
CPPFLAGS += $(MACRO)
CPPFLAGS += $(INC)
LDFLAGS = -lm

ifeq ($(strip $(CXX)),)
  CXX = g++
endif


#make related
#export CFLAGS LDFLAGS CPPFLAGS
ifndef REPR
  $(error Error: must specify fermion representation!)
endif

MAKEFLAGS += -s 
MAKEFLAGS += -r
